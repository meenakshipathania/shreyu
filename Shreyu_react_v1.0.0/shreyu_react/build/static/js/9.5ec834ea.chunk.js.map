{"version":3,"sources":["../node_modules/dom-helpers/esm/camelize.js","../node_modules/react-bootstrap/esm/createWithBsPrefix.js","../node_modules/warning/warning.js","../node_modules/react-bootstrap/esm/Col.js","components/Scrollbar.tsx","../node_modules/react-bootstrap/esm/FormContext.js","../node_modules/react-bootstrap/esm/FormGroup.js","../node_modules/react-bootstrap/esm/FormCheckInput.js","hooks/useViewPort.ts","../node_modules/react-bootstrap/esm/FloatingLabel.js","../node_modules/react-bootstrap/esm/Feedback.js","../node_modules/react-bootstrap/esm/FormCheckLabel.js","../node_modules/react-bootstrap/esm/FormCheck.js","../node_modules/react-bootstrap/esm/FormControl.js","../node_modules/react-bootstrap/esm/FormFloating.js","../node_modules/react-bootstrap/esm/FormLabel.js","../node_modules/react-bootstrap/esm/FormRange.js","../node_modules/react-bootstrap/esm/FormSelect.js","../node_modules/react-bootstrap/esm/FormText.js","../node_modules/react-bootstrap/esm/Switch.js","../node_modules/react-bootstrap/esm/Form.js","components/ThemeCustomizer/LayoutTypes.tsx","components/ThemeCustomizer/LayoutWidth.tsx","components/ThemeCustomizer/MenuPositions.tsx","components/ThemeCustomizer/LeftSideBarTheme.tsx","components/ThemeCustomizer/LeftSideBarType.tsx","components/ThemeCustomizer/SidebarUserInfo.tsx","components/ThemeCustomizer/TopbarTheme.tsx","components/ThemeCustomizer/index.tsx","layouts/RightSidebar.tsx"],"names":["rHyphen","pascalCase","str","toUpperCase","string","replace","_","chr","slice","createWithBsPrefix","prefix","displayName","Component","defaultProps","BsComponent","React","ref","className","bsPrefix","as","Tag","props","resolvedPrefix","useBootstrapPrefix","_jsx","classNames","warning","module","exports","DEVICE_SIZES","Col","spans","classes","forEach","brkPoint","span","offset","order","propValue","infix","push","useCol","colProps","length","Scrollbar","style","children","otherProps","FormContext","FormGroup","controlId","context","useMemo","Provider","value","FormCheckInput","id","type","isValid","isInvalid","useContext","useViewport","useState","window","innerWidth","width","setWidth","innerHeight","height","setHeight","useEffect","handleWindowResize","addEventListener","removeEventListener","FloatingLabel","label","_jsxs","htmlFor","propTypes","PropTypes","tooltip","bool","elementType","Feedback","FormCheckLabel","FormCheck","bsSwitchPrefix","inline","disabled","feedbackTooltip","feedback","feedbackType","title","innerFormContext","hasLabel","input","_Fragment","Object","assign","Input","Label","FormControl","size","htmlSize","plaintext","readOnly","FormLabel","column","visuallyHidden","columnClass","FormRange","FormSelect","FormText","muted","Switch","_ref","any","validated","Form","Group","Control","Floating","FormFloating","Check","Text","Range","Select","LayoutTypes","changeLayoutType","layoutType","layoutConstants","onChange","e","target","name","LAYOUT_VERTICAL","checked","LAYOUT_HORIZONTAL","LAYOUT_DETACHED","LAYOUT_TWO_COLUMN","LayoutWidth","changeWidthMode","layoutWidth","LAYOUT_WIDTH_FLUID","LAYOUT_WIDTH_BOXED","MenuPositions","changeMenuPosition","menuPosition","MENU_POSITION_FIXED","MENU_POSITION_SCROLLABLE","LeftSideBarTheme","changeLeftSidebarTheme","leftSideBarTheme","LEFT_SIDEBAR_THEME_LIGHT","LEFT_SIDEBAR_THEME_DARK","LeftSideBarType","changeLeftSiderbarType","leftSideBarType","LEFT_SIDEBAR_TYPE_DEFAULT","LEFT_SIDEBAR_TYPE_CONDENSED","LEFT_SIDEBAR_TYPE_COMPACT","SidebarUserInfo","toggleLeftSidebarUserInfo","showSidebarUserInfo","TopbarTheme","changeTopBarTheme","topbarTheme","TOPBAR_THEME_DARK","TOPBAR_THEME_LIGHT","ThemeCustomizer","dispatch","useDispatch","useSelector","state","Layout","disableMenuPositions","setDisableMenuPositions","disableSidebarTheme","setDisableSidebarTheme","disableSidebarType","setDisableSidebarType","disableSidebarUser","setDisableSidebarUser","_loadStateFromProps","useCallback","changeLayout","changeLayoutWidth","changeMenuPositions","changeSidebarTheme","changeSidebarType","toggleSidebarUserInfo","changeTopbarTheme","Fragment","role","onClick","RightSideBar","rightBarNodeRef","useRef","isOpenRightSideBar","handleOtherClick","current","contains","hideRightSidebar","document","maxHeight","zIndex","timeout","scrollbarMaxSize"],"mappings":"kMAAIA,EAAU,Q,0BCMRC,EAAa,SAAAC,GAAG,OAAIA,EAAI,GAAGC,eDLAC,ECKyBF,EDJjDE,EAAOC,QAAQL,GAAS,SAAUM,EAAGC,GAC1C,OAAOA,EAAIJ,kBCGgDK,MAAM,GDLtD,IAAkBJ,GCQlB,SAASK,EAAmBC,GAInC,6DAAJ,GAAI,IAHNC,mBAGM,MAHQV,EAAWS,GAGnB,EAFNE,EAEM,EAFNA,UACAC,EACM,EADNA,aAEMC,EAA2BC,cAAiB,WAK/CC,GAAQ,IAJTC,EAIS,EAJTA,UACAC,EAGS,EAHTA,SAGS,IAFTC,GAAIC,OAEK,MAFCR,GAAa,MAEd,EADNS,EACM,6CACHC,EAAiBC,YAAmBL,EAAUR,GACpD,OAAoBc,cAAKJ,EAAD,aACtBJ,IAAKA,EACLC,UAAWQ,IAAWR,EAAWK,IAC9BD,OAKP,OAFAP,EAAYD,aAAeA,EAC3BC,EAAYH,YAAcA,EACnBG,I,iCCbT,IAEIY,EAAU,aA2CdC,EAAOC,QAAUF,G,mGCzDXG,EAAe,CAAC,MAAO,KAAM,KAAM,KAAM,KAAM,MAwCrD,IAAMC,EAAmBf,cACzB,SAACM,EAAOL,GAAQ,MAxCT,YAKJ,IAJDG,EAIC,EAJDA,GACAD,EAGC,EAHDA,SACAD,EAEC,EAFDA,UACGI,EACF,6CACDH,EAAWK,YAAmBL,EAAU,OACxC,IAAMa,EAAQ,GACRC,EAAU,GAuBhB,OAtBAH,EAAaI,SAAQ,SAAAC,GACnB,IAEIC,EACAC,EACAC,EAJEC,EAAYjB,EAAMa,UACjBb,EAAMa,GAKY,kBAAdI,GAAuC,MAAbA,GAEjCH,EAGEG,EAHFH,KACAC,EAEEE,EAFFF,OACAC,EACEC,EADFD,OAGFF,EAAOG,EAGT,IAAMC,EAAqB,OAAbL,EAAA,WAAwBA,GAAa,GAC/CC,GAAMJ,EAAMS,MAAc,IAATL,EAAA,UAAmBjB,GAAnB,OAA8BqB,GAA9B,UAA2CrB,GAA3C,OAAsDqB,EAAtD,YAA+DJ,IACvE,MAATE,GAAeL,EAAQQ,KAAR,eAAqBD,EAArB,YAA8BF,IACnC,MAAVD,GAAgBJ,EAAQQ,KAAR,gBAAsBD,EAAtB,YAA+BH,OAE9C,CAAC,2BAAKf,GAAN,IACLJ,UAAWQ,IAAU,WAAV,GAAWR,GAAX,OAAyBc,EAAUC,MAC7C,CACDb,KACAD,WACAa,UAYGU,CAAOpB,GARE,0BAEZJ,EAFY,EAEZA,UACGyB,EAHS,wCAKZvB,GAAIP,OALQ,MAKI,MALJ,EAMZM,EANY,EAMZA,SACAa,EAPY,EAOZA,MAEF,OAAoBP,cAAKZ,EAAD,YAAC,eAAgB8B,GAAjB,IACtB1B,IAAKA,EACLC,UAAWQ,IAAWR,GAAYc,EAAMY,QAAUzB,SAGtDY,EAAInB,YAAc,MACHmB,O,2EC3CAc,IARG,SAAC,GAAmE,IAAjE3B,EAAgE,EAAhEA,UAAW4B,EAAqD,EAArDA,MAAOC,EAA8C,EAA9CA,SAAaC,EAAiC,gDACjF,OACI,cAAC,IAAD,yBAAW9B,UAAWA,EAAW4B,MAAOA,GAAWE,GAAnD,aACKD,O,iCCZb,WAEME,EAA2BjC,gBAAoB,IACtCiC,O,2ECCTC,EAAyBlC,cAAiB,WAK7CC,GAAQ,IAJTkC,EAIS,EAJTA,UAIS,IAFT/B,GAAIP,OAEK,MAFO,MAEP,EADNS,EACM,kCACH8B,EAAUC,mBAAQ,iBAAO,CAC7BF,eACE,CAACA,IACL,OAAoB1B,cAAKwB,IAAYK,SAAU,CAC7CC,MAAOH,EACPL,SAAuBtB,cAAKZ,EAAD,YAAC,eAAgBS,GAAjB,IACzBL,IAAKA,UAIXiC,EAAUtC,YAAc,YACTsC,O,oGCfTM,EAA8BxC,cAAiB,WAUlDC,GAAQ,IATTwC,EASS,EATTA,GACAtC,EAQS,EARTA,SACAD,EAOS,EAPTA,UAOS,IANTwC,YAMS,MANF,WAME,MALTC,eAKS,aAJTC,iBAIS,aAFTxC,GAAIP,OAEK,MAFO,QAEP,EADNS,EACM,+EAEP6B,EACEU,qBAAWZ,KADbE,UAGF,OADAhC,EAAWK,YAAmBL,EAAU,oBACpBM,cAAKZ,EAAD,YAAC,eAAgBS,GAAjB,IACtBL,IAAKA,EACLyC,KAAMA,EACND,GAAIA,GAAMN,EACVjC,UAAWQ,IAAWR,EAAWC,EAAUwC,GAAW,WAAYC,GAAa,oBAGnFJ,EAAe5C,YAAc,iBACd4C,O,sFC3BTM,EAAc,WAAO,IAAD,EACIC,mBAASC,OAAOC,YADpB,mBACfC,EADe,KACRC,EADQ,OAEMJ,mBAASC,OAAOI,aAFtB,mBAEfC,EAFe,KAEPC,EAFO,KAatB,OATAC,qBAAU,WACN,IAAMC,EAAqB,WACvBL,EAASH,OAAOC,YAChBK,EAAUN,OAAOI,cAIrB,OADAJ,OAAOS,iBAAiB,SAAUD,GAC3B,kBAAMR,OAAOU,oBAAoB,SAAUF,MACnD,IACI,CAAEN,QAAOG,Y,oGCTdM,EAA6B3D,cAAiB,WAOjDC,GAAQ,IANTE,EAMS,EANTA,SACAD,EAKS,EALTA,UACA6B,EAIS,EAJTA,SACAI,EAGS,EAHTA,UACAyB,EAES,EAFTA,MACGtD,EACM,uEAET,OADAH,EAAWK,YAAmBL,EAAU,iBACpB0D,eAAM3B,IAAD,YAAC,aACxBjC,IAAKA,EACLC,UAAWQ,IAAWR,EAAWC,GACjCgC,UAAWA,GACR7B,GAJoB,IAKvByB,SAAU,CAACA,EAAuBtB,cAAK,QAAS,CAC9CqD,QAAS3B,EACTJ,SAAU6B,WAIhBD,EAAc/D,YAAc,gBACb+D,O,oGCvBTI,EAAY,CAMhBrB,KAAMsB,IAAU3E,OAGhB4E,QAASD,IAAUE,KACnB9D,GAAI4D,IAAUG,aAEVC,EAAwBpE,cAC9B,WAMGC,GANH,QACEG,GAAIP,OADN,MACkB,MADlB,EAEEK,EAFF,EAEEA,UAFF,IAGEwC,YAHF,MAGS,QAHT,MAIEuB,eAJF,SAKK3D,EALL,0DAMwBG,cAAKZ,EAAD,YAAC,eAAgBS,GAAjB,IAC1BL,IAAKA,EACLC,UAAWQ,IAAWR,EAAD,UAAewC,EAAf,YAAuBuB,EAAU,UAAY,mBAEpEG,EAASxE,YAAc,WACvBwE,EAASL,UAAYA,EACNK,Q,0BCvBTC,EAA8BrE,cAAiB,WAKlDC,GAAQ,IAJTE,EAIS,EAJTA,SACAD,EAGS,EAHTA,UACA4D,EAES,EAFTA,QACGxD,EACM,kDAEP6B,EACEU,qBAAWZ,KADbE,UAGF,OADAhC,EAAWK,YAAmBL,EAAU,oBACpBM,cAAK,QAAD,YAAC,eAAcH,GAAf,IACtBL,IAAKA,EACL6D,QAASA,GAAW3B,EACpBjC,UAAWQ,IAAWR,EAAWC,SAGrCkE,EAAezE,YAAc,iBACdyE,QCZTC,EAAyBtE,cAAiB,WAoB7CC,GAAQ,IAnBTwC,EAmBS,EAnBTA,GACAtC,EAkBS,EAlBTA,SACAoE,EAiBS,EAjBTA,eAiBS,IAhBTC,cAgBS,aAfTC,gBAeS,aAdT9B,eAcS,aAbTC,iBAaS,aAZT8B,uBAYS,SAXTC,EAWS,EAXTA,SACAC,EAUS,EAVTA,aACA1E,EASS,EATTA,UACA4B,EAQS,EARTA,MAQS,IAPT+C,aAOS,MAPD,GAOC,MANTnC,YAMS,MANF,WAME,EALTkB,EAKS,EALTA,MACA7B,EAIS,EAJTA,SAIS,IAFT3B,UAES,MAFJ,QAEI,EADNE,EACM,mMACTH,EAAWK,YAAmBL,EAAU,cACxCoE,EAAiB/D,YAAmB+D,EAAgB,eAF3C,IAIPpC,EACEU,qBAAWZ,KADbE,UAEI2C,EAAmBzC,mBAAQ,iBAAO,CACtCF,UAAWM,GAAMN,KACf,CAACA,EAAWM,IACVsC,EAAoB,MAATnB,IAA2B,IAAVA,IAAoB7B,EAEhDiD,EAAqBvE,cAAK+B,IAAD,YAAC,eAAqBlC,GAAtB,IAC7BoC,KAAe,WAATA,EAAoB,WAAaA,EACvCzC,IAAKA,EACL0C,QAASA,EACTC,UAAWA,EACX6B,SAAUA,EACVrE,GAAIA,KAGN,OAAoBK,cAAKwB,IAAYK,SAAU,CAC7CC,MAAOuC,EACP/C,SAAuBtB,cAAK,MAAO,CACjCqB,MAAOA,EACP5B,UAAWQ,IAAWR,EAAW0D,GAASzD,EAAUqE,GAAU,GAAJ,OAAOrE,EAAP,WAAmC,WAATuC,GAAqB6B,GACzGxC,SAAUA,GAAyB8B,eAAMoB,WAAW,CAClDlD,SAAU,CAACiD,EAAOD,GAAyBtE,cAAK4D,EAAgB,CAC9DQ,MAAOA,EACP9C,SAAU6B,IACRe,GAAyBlE,cAAK2D,EAAU,CAC1C1B,KAAMkC,EACNX,QAASS,EACT3C,SAAU4C,cAMpBL,EAAU1E,YAAc,YACTsF,aAAOC,OAAOb,EAAW,CACtCc,MAAO5C,IACP6C,MAAOhB,I,QChEHiB,G,OAA2BtF,cAAiB,WAc/CC,GAAQ,IAKLgB,EAMG,EAxBPd,EAaS,EAbTA,SACAuC,EAYS,EAZTA,KACA6C,EAWS,EAXTA,KACAC,EAUS,EAVTA,SACA/C,EASS,EATTA,GACAvC,EAQS,EARTA,UAQS,IAPTyC,eAOS,aANTC,iBAMS,SALT6C,EAKS,EALTA,UACAC,EAIS,EAJTA,SAIS,IAFTtF,GAAIP,OAEK,MAFO,QAEP,EADNS,EACM,wHAEP6B,EACEU,qBAAWZ,KADbE,WAEFhC,EAAWK,YAAmBL,EAAU,gBAGpCsF,GACFxE,EAAU,yBACJd,EADC,eACsB,IAGtB,mBACJA,GAAW,GADP,wBAEDA,EAFC,YAEWoF,GAASA,GAF3BtE,EAAO,GAOT,OAAoBR,cAAKZ,EAAD,YAAC,eAAgBS,GAAjB,IACtBoC,KAAMA,EACN6C,KAAMC,EACNvF,IAAKA,EACLyF,SAAUA,EACVjD,GAAIA,GAAMN,EACVjC,UAAWQ,IAAWR,EAAWe,EAAS0B,GAAW,WAAYC,GAAa,aAAuB,UAATF,GAAA,UAAuBvC,EAAvB,kBAGhGmF,EAAY1F,YAAc,cACXsF,aAAOC,OAAOG,EAAa,CACxClB,a,SCnDa1E,cAAmB,iB,kBCW5BiG,EAAyB3F,cAAiB,WAS7CC,GAAQ,QAPTG,GAAIP,OAOK,MAPO,QAOP,EANTM,EAMS,EANTA,SACAyF,EAKS,EALTA,OACAC,EAIS,EAJTA,eACA3F,EAGS,EAHTA,UACA4D,EAES,EAFTA,QACGxD,EACM,iFAEP6B,EACEU,qBAAWZ,KADbE,UAEFhC,EAAWK,YAAmBL,EAAU,cACxC,IAAI2F,EAAc,iBACI,kBAAXF,IAAqBE,EAAc,GAAH,OAAMA,EAAN,YAAqBA,EAArB,YAAoCF,IAC/E,IAAM3E,EAAUP,IAAWR,EAAWC,EAAU0F,GAAkB,kBAAmBD,GAAUE,GAG/F,OADAhC,EAAUA,GAAW3B,EACjByD,EAA4BnF,cAAKM,IAAD,aAClCd,IAAKA,EACLG,GAAI,QACJF,UAAWe,EACX6C,QAASA,GACNxD,IAKHG,aAHF,CAGOZ,EAAD,aACFI,IAAKA,EACLC,UAAWe,EACX6C,QAASA,GACNxD,OAITqF,EAAU/F,YAAc,YACxB+F,EAAU7F,aA1CW,CACnB8F,QAAQ,EACRC,gBAAgB,GAyCHF,QC7CTI,EAAyB/F,cAAiB,WAK7CC,GAAQ,IAJTE,EAIS,EAJTA,SACAD,EAGS,EAHTA,UACAuC,EAES,EAFTA,GACGnC,EACM,6CAEP6B,EACEU,qBAAWZ,KADbE,UAGF,OADAhC,EAAWK,YAAmBL,EAAU,cACpBM,cAAK,QAAD,YAAC,eAAcH,GAAf,IACtBoC,KAAM,QACNzC,IAAKA,EACLC,UAAWQ,IAAWR,EAAWC,GACjCsC,GAAIA,GAAMN,QAGd4D,EAAUnG,YAAc,YACTmG,QClBTC,EAA0BhG,cAAiB,WAS9CC,GAAQ,IARTE,EAQS,EARTA,SACAoF,EAOS,EAPTA,KACAC,EAMS,EANTA,SACAtF,EAKS,EALTA,UAKS,IAJTyC,eAIS,aAHTC,iBAGS,SAFTH,EAES,EAFTA,GACGnC,EACM,qFAEP6B,EACEU,qBAAWZ,KADbE,UAGF,OADAhC,EAAWK,YAAmBL,EAAU,eACpBM,cAAK,SAAD,YAAC,eAAeH,GAAhB,IACtBiF,KAAMC,EACNvF,IAAKA,EACLC,UAAWQ,IAAWR,EAAWC,EAAUoF,GAAQ,GAAJ,OAAOpF,EAAP,YAAmBoF,GAAQ5C,GAAW,WAAYC,GAAa,cAC9GH,GAAIA,GAAMN,QAGd6D,EAAWpG,YAAc,aACVoG,QCxBTC,EAAwBjG,cAC9B,WAMGC,GAAQ,IALTE,EAKS,EALTA,SACAD,EAIS,EAJTA,UAIS,IAHTE,GAAIP,OAGK,MAHO,QAGP,EAFTqG,EAES,EAFTA,MACG5F,EACM,qDAET,OADAH,EAAWK,YAAmBL,EAAU,aACpBM,cAAKZ,EAAD,YAAC,eAAgBS,GAAjB,IACtBL,IAAKA,EACLC,UAAWQ,IAAWR,EAAWC,EAAU+F,GAAS,oBAGxDD,EAASrG,YAAc,WACRqG,QChBTE,EAAsBnG,cAAiB,SAACM,EAAOL,GAAR,OAA6BQ,cAAK6D,EAAD,YAAC,eAAgBhE,GAAjB,IAC5EL,IAAKA,EACLyC,KAAM,eAERyD,EAAOvG,YAAc,SACNsF,aAAOC,OAAOgB,EAAQ,CACnCf,MAAOd,EAAUc,MACjBC,MAAOf,EAAUe,Q,SCIbtB,EAAY,CAShBqC,KAAMpC,IAAUqC,IAMhBC,UAAWtC,IAAUE,KACrB9D,GAAI4D,IAAUG,aAEVoC,EAAoBvG,cAAiB,WAMxCC,GANwC,IACzCC,EADyC,EACzCA,UACAoG,EAFyC,EAEzCA,UAFyC,IAIzClG,GAAIP,OAJqC,MAIzB,OAJyB,EAKtCS,EALsC,qDAMnBG,cAAKZ,EAAD,YAAC,eAAgBS,GAAjB,IAC1BL,IAAKA,EACLC,UAAWQ,IAAWR,EAAWoG,GAAa,uBAEhDC,EAAK3G,YAAc,OACnB2G,EAAKxC,UAAYA,EACFmB,WAAOC,OAAOoB,EAAM,CACjCC,MAAOtE,IACPuE,QAASnB,EACToB,SAAUC,EACVC,MAAOtC,EACP6B,SACAd,MAAOM,EACPkB,KAAMZ,EACNa,MAAOf,EACPgB,OAAQf,EACRrC,qB,qHCYaqD,EAxDK,SAAC,GAAyE,IAAvEC,EAAsE,EAAtEA,iBAAkBC,EAAoD,EAApDA,WAAYC,EAAwC,EAAxCA,gBACjD,OACI,qCACI,oBAAIjH,UAAU,2BAAd,oBAEA,eAACqG,EAAA,EAAKK,MAAN,CAAY1G,UAAU,8BAAtB,UACI,cAACqG,EAAA,EAAKK,MAAMxB,MAAZ,CACI1C,KAAK,QACL0E,SAAU,SAACC,GAAD,OAAOJ,EAAiBI,EAAEC,OAAO/E,QAC3CgF,KAAK,cACLhF,MAAO4E,EAAgBK,gBACvB/E,GAAG,kBACHgF,QAASP,IAAeC,EAAgBK,kBAE5C,cAACjB,EAAA,EAAKK,MAAMvB,MAAZ,CAAkBvB,QAAQ,kBAA1B,gCAGJ,eAACyC,EAAA,EAAKK,MAAN,CAAY1G,UAAU,8BAAtB,UACI,cAACqG,EAAA,EAAKK,MAAMxB,MAAZ,CACI1C,KAAK,QACL0E,SAAU,SAACC,GAAD,OAAOJ,EAAiBI,EAAEC,OAAO/E,QAC3CgF,KAAK,cACLhF,MAAO4E,EAAgBO,kBACvBjF,GAAG,oBACHgF,QAASP,IAAeC,EAAgBO,oBAE5C,cAACnB,EAAA,EAAKK,MAAMvB,MAAZ,CAAkBvB,QAAQ,oBAA1B,kCAGJ,eAACyC,EAAA,EAAKK,MAAN,CAAY1G,UAAU,8BAAtB,UACI,cAACqG,EAAA,EAAKK,MAAMxB,MAAZ,CACI1C,KAAK,QACL0E,SAAU,SAACC,GAAD,OAAOJ,EAAiBI,EAAEC,OAAO/E,QAC3CgF,KAAK,cACLhF,MAAO4E,EAAgBQ,gBACvBlF,GAAG,kBACHgF,QAASP,IAAeC,EAAgBQ,kBAE5C,cAACpB,EAAA,EAAKK,MAAMvB,MAAZ,CAAkBvB,QAAQ,kBAA1B,gCAGJ,eAACyC,EAAA,EAAKK,MAAN,CAAY1G,UAAU,8BAAtB,UACI,cAACqG,EAAA,EAAKK,MAAMxB,MAAZ,CACI1C,KAAK,QACL0E,SAAU,SAACC,GAAD,OAAOJ,EAAiBI,EAAEC,OAAO/E,QAC3CgF,KAAK,cACLhF,MAAO4E,EAAgBS,kBACvBnF,GAAG,oBACHgF,QAASP,IAAeC,EAAgBS,oBAE5C,cAACrB,EAAA,EAAKK,MAAMvB,MAAZ,CAAkBvB,QAAQ,oBAA1B,sCClBD+D,EAhCK,SAAC,GAAyE,IAAvEC,EAAsE,EAAtEA,gBAAiBC,EAAqD,EAArDA,YAAaZ,EAAwC,EAAxCA,gBACjD,OACI,qCACI,oBAAIjH,UAAU,2BAAd,mBAEA,eAACqG,EAAA,EAAKK,MAAN,CAAY1G,UAAU,8BAAtB,UACI,cAACqG,EAAA,EAAKK,MAAMxB,MAAZ,CACI1C,KAAK,QACL6E,KAAK,QACL9E,GAAG,cACHF,MAAO4E,EAAgBa,mBACvBZ,SAAU,SAACC,GAAD,OAAOS,EAAgBT,EAAEC,OAAO/E,QAC1CkF,QAASM,IAAgBZ,EAAgBa,qBAE7C,cAACzB,EAAA,EAAKK,MAAMvB,MAAZ,CAAkBvB,QAAQ,cAA1B,sBAGJ,eAACyC,EAAA,EAAKK,MAAN,CAAY1G,UAAU,8BAAtB,UACI,cAACqG,EAAA,EAAKK,MAAMxB,MAAZ,CACI1C,KAAK,QACL6E,KAAK,QACL9E,GAAG,cACHF,MAAO4E,EAAgBc,mBACvBb,SAAU,SAACC,GAAD,OAAOS,EAAgBT,EAAEC,OAAO/E,QAC1CkF,QAASM,IAAgBZ,EAAgBc,qBAE7C,cAAC1B,EAAA,EAAKK,MAAMvB,MAAZ,CAAkBvB,QAAQ,cAA1B,0BCMDoE,EAhCO,SAAC,GAA+E,IAA7EC,EAA4E,EAA5EA,mBAAoBC,EAAwD,EAAxDA,aAAcjB,EAA0C,EAA1CA,gBACvD,OACI,qCACI,oBAAIjH,UAAU,2BAAd,qDAEA,eAACqG,EAAA,EAAKK,MAAN,CAAY1G,UAAU,8BAAtB,UACI,cAACqG,EAAA,EAAKK,MAAMxB,MAAZ,CACI1C,KAAK,QACL6E,KAAK,iBACL9E,GAAG,cACHF,MAAO4E,EAAgBkB,oBACvBjB,SAAU,SAACC,GAAD,OAAOc,EAAmBd,EAAEC,OAAO/E,QAC7CkF,QAASW,IAAiBjB,EAAgBkB,sBAE9C,cAAC9B,EAAA,EAAKK,MAAMvB,MAAZ,CAAkBvB,QAAQ,cAA1B,sBAGJ,eAACyC,EAAA,EAAKK,MAAN,CAAY1G,UAAU,8BAAtB,UACI,cAACqG,EAAA,EAAKK,MAAMxB,MAAZ,CACI1C,KAAK,QACL6E,KAAK,iBACL9E,GAAG,mBACHF,MAAO4E,EAAgBmB,yBACvBlB,SAAU,SAACC,GAAD,OAAOc,EAAmBd,EAAEC,OAAO/E,QAC7CkF,QAASW,IAAiBjB,EAAgBmB,2BAE9C,cAAC/B,EAAA,EAAKK,MAAMvB,MAAZ,CAAkBvB,QAAQ,mBAA1B,+BCMDyE,EAhCU,SAAC,GAA0F,IAAxFC,EAAuF,EAAvFA,uBAAwBC,EAA+D,EAA/DA,iBAAkBtB,EAA6C,EAA7CA,gBAClE,OACI,qCACI,oBAAIjH,UAAU,2BAAd,gCAEA,eAACqG,EAAA,EAAKK,MAAN,CAAY1G,UAAU,8BAAtB,UACI,cAACqG,EAAA,EAAKK,MAAMxB,MAAZ,CACI1C,KAAK,QACL6E,KAAK,QACL9E,GAAG,cACHF,MAAO4E,EAAgBuB,yBACvBtB,SAAU,SAACC,GAAD,OAAOmB,EAAuBnB,EAAEC,OAAO/E,QACjDkF,QAASgB,IAAqBtB,EAAgBuB,2BAElD,cAACnC,EAAA,EAAKK,MAAMvB,MAAZ,CAAkBvB,QAAQ,cAA1B,sBAGJ,eAACyC,EAAA,EAAKK,MAAN,CAAY1G,UAAU,8BAAtB,UACI,cAACqG,EAAA,EAAKK,MAAMxB,MAAZ,CACI1C,KAAK,QACL6E,KAAK,QACL9E,GAAG,aACHF,MAAO4E,EAAgBwB,wBACvBvB,SAAU,SAACC,GAAD,OAAOmB,EAAuBnB,EAAEC,OAAO/E,QACjDkF,QAASgB,IAAqBtB,EAAgBwB,0BAElD,cAACpC,EAAA,EAAKK,MAAMvB,MAAZ,CAAkBvB,QAAQ,aAA1B,yBCsBD8E,EAhDS,SAAC,GAAwF,IAAtFC,EAAqF,EAArFA,uBAAwBC,EAA6D,EAA7DA,gBAAiB3B,EAA4C,EAA5CA,gBAChE,OACI,qCACI,oBAAIjH,UAAU,2BAAd,+BAEA,eAACqG,EAAA,EAAKK,MAAN,CAAY1G,UAAU,8BAAtB,UACI,cAACqG,EAAA,EAAKK,MAAMxB,MAAZ,CACI1C,KAAK,QACL6E,KAAK,mBACL9E,GAAG,gBACHF,MAAO4E,EAAgB4B,0BACvB3B,SAAU,SAACC,GAAD,OAAOwB,EAAuBxB,EAAEC,OAAO/E,QACjDkF,QAASqB,IAAoB3B,EAAgB4B,4BAEjD,cAACxC,EAAA,EAAKK,MAAMvB,MAAZ,CAAkBvB,QAAQ,gBAA1B,wBAGJ,eAACyC,EAAA,EAAKK,MAAN,CAAY1G,UAAU,8BAAtB,UACI,cAACqG,EAAA,EAAKK,MAAMxB,MAAZ,CACI1C,KAAK,QACL6E,KAAK,mBACL9E,GAAG,kBACHF,MAAO4E,EAAgB6B,4BACvB5B,SAAU,SAACC,GAAD,OAAOwB,EAAuBxB,EAAEC,OAAO/E,QACjDkF,QAASqB,IAAoB3B,EAAgB6B,8BAEjD,eAACzC,EAAA,EAAKK,MAAMvB,MAAZ,CAAkBvB,QAAQ,kBAA1B,uBACc,6DAIlB,eAACyC,EAAA,EAAKK,MAAN,CAAY1G,UAAU,8BAAtB,UACI,cAACqG,EAAA,EAAKK,MAAMxB,MAAZ,CACI1C,KAAK,QACL6E,KAAK,mBACL9E,GAAG,gBACHF,MAAO4E,EAAgB8B,0BACvB7B,SAAU,SAACC,GAAD,OAAOwB,EAAuBxB,EAAEC,OAAO/E,QACjDkF,QAASqB,IAAoB3B,EAAgB8B,4BAEjD,eAAC1C,EAAA,EAAKK,MAAMvB,MAAZ,CAAkBvB,QAAQ,gBAA1B,qBACY,2DCxBboF,EAnBS,SAAC,GAA8E,IAA5EC,EAA2E,EAA3EA,0BAA2BC,EAAgD,EAAhDA,oBAClD,OACI,qCACI,oBAAIlJ,UAAU,2BAAd,+BAEA,eAACqG,EAAA,EAAKK,MAAN,CAAY1G,UAAU,8BAAtB,UACI,cAACqG,EAAA,EAAKK,MAAMxB,MAAZ,CACI1C,KAAK,WACL6E,KAAK,mBACL9E,GAAG,oBACH2E,SAAU,SAACC,GAAD,OAAO8B,EAA0B9B,EAAEC,OAAOG,UACpDA,QAAS2B,IAEb,cAAC7C,EAAA,EAAKK,MAAMvB,MAAZ,CAAkBvB,QAAQ,oBAA1B,2BCqBDuF,EAhCK,SAAC,GAA2E,IAAzEC,EAAwE,EAAxEA,kBAAmBC,EAAqD,EAArDA,YAAapC,EAAwC,EAAxCA,gBACnD,OACI,qCACI,oBAAIjH,UAAU,2BAAd,oBAEA,eAACqG,EAAA,EAAKK,MAAN,CAAY1G,UAAU,8BAAtB,UACI,cAACqG,EAAA,EAAKK,MAAMxB,MAAZ,CACI1C,KAAK,QACL6E,KAAK,eACL9E,GAAG,mBACHF,MAAO4E,EAAgBqC,kBACvBpC,SAAU,SAACC,GAAD,OAAOiC,EAAkBjC,EAAEC,OAAO/E,QAC5CkF,QAAS8B,IAAgBpC,EAAgBqC,oBAE7C,cAACjD,EAAA,EAAKK,MAAMvB,MAAZ,CAAkBvB,QAAQ,mBAA1B,qBAGJ,eAACyC,EAAA,EAAKK,MAAN,CAAY1G,UAAU,8BAAtB,UACI,cAACqG,EAAA,EAAKK,MAAMxB,MAAZ,CACI1C,KAAK,QACL6E,KAAK,eACL9E,GAAG,oBACHF,MAAO4E,EAAgBsC,mBACvBrC,SAAU,SAACC,GAAD,OAAOiC,EAAkBjC,EAAEC,OAAO/E,QAC5CkF,QAAS8B,IAAgBpC,EAAgBsC,qBAE7C,cAAClD,EAAA,EAAKK,MAAMvB,MAAZ,CAAkBvB,QAAQ,oBAA1B,0BCkPD4F,EAtPS,WACpB,IAAMC,EAAWC,cACT1G,EAAUJ,cAAVI,MAFkB,EAYtB2G,aAAY,SAACC,GAAD,MAAuB,CACnC5C,WAAY4C,EAAMC,OAAO7C,WACzBa,YAAa+B,EAAMC,OAAOhC,YAC1BK,aAAc0B,EAAMC,OAAO3B,aAC3BK,iBAAkBqB,EAAMC,OAAOtB,iBAC/BK,gBAAiBgB,EAAMC,OAAOjB,gBAC9BM,oBAAqBU,EAAMC,OAAOX,oBAClCG,YAAaO,EAAMC,OAAOR,gBAd1BrC,EALsB,EAKtBA,WACAa,EANsB,EAMtBA,YACAK,EAPsB,EAOtBA,aACAU,EARsB,EAQtBA,gBACAL,EATsB,EAStBA,iBACAW,EAVsB,EAUtBA,oBACAG,EAXsB,EAWtBA,YAXsB,EAsB8BxG,oBAAkB,GAtBhD,mBAsBnBiH,EAtBmB,KAsBGC,EAtBH,OAuB4BlH,oBAAkB,GAvB9C,mBAuBnBmH,EAvBmB,KAuBEC,EAvBF,OAwB0BpH,oBAAkB,GAxB5C,mBAwBnBqH,EAxBmB,KAwBCC,EAxBD,OAyB0BtH,oBAAkB,GAzB5C,mBAyBnBuH,EAzBmB,KAyBCC,EAzBD,KA8BpBC,EAAsBC,uBAAY,WACpCR,EAAwB/C,IAAeC,IAA4BS,mBACnEuC,EAAuBjD,IAAeC,IAA4BO,mBAClE2C,EACInD,IAAeC,IAA4BO,mBACvCR,IAAeC,IAA4BS,mBAC3C1E,EAAQ,KAEhBqH,EACIrD,IAAeC,IAA4BO,mBACvCR,IAAeC,IAA4BS,qBAEpD,CAACV,EAAYhE,IAEhBK,qBAAU,WACNiH,MACD,CAACA,IAKJ,IAAMvD,EAAmB,SAAC1E,GAEtB,OADaA,GAET,IAAK,aACDoH,EAASe,YAAavD,IAA4BO,oBAClD,MACJ,IAAK,WACDiC,EAASe,YAAavD,IAA4BQ,kBAClD,MACJ,IAAK,WACDgC,EAASe,YAAavD,IAA4BK,kBAClD,MACJ,QACImC,EAASe,YAAavD,IAA4BS,sBAQxDE,EAAkB,SAACvF,GAGrB,OAFWA,GAGP,IAAK,QACDoH,EAASgB,YAAkBxD,IAA4Bc,qBACvD,MACJ,QACI0B,EAASgB,YAAkBxD,IAA4Ba,uBAQ7DG,EAAqB,SAAC5F,GAGxB,OAFeA,GAGX,IAAK,aACDoH,EAASiB,YAAoBzD,IAA8BmB,2BAC3D,MACJ,QACIqB,EAASiB,YAAoBzD,IAA8BkB,wBAQjEG,EAAyB,SAACjG,GAE5B,OADYA,GAER,IAAK,OACDoH,EAASkB,YAAmB1D,IAA6BwB,0BACzD,MACJ,QACIgB,EAASkB,YAAmB1D,IAA6BuB,6BAQ/DG,EAAyB,SAACtG,GAE5B,OADWA,GAEP,IAAK,YACDoH,EAASmB,YAAkB3D,IAA6B6B,8BACxD,MACJ,IAAK,UACDW,EAASmB,YAAkB3D,IAA6B8B,4BACxD,MACJ,QACIU,EAASmB,YAAkB3D,IAA6B4B,8BAQ9DI,EAA4B,SAAC5G,GAC/B,IAAIkF,EAAUlF,EACdoH,EAASoB,YAAsBtD,KAM7B6B,EAAoB,SAAC/G,GAEvB,OADYA,GAER,IAAK,QACDoH,EAASqB,YAAkB7D,IAA4BsC,qBACvD,MACJ,QACIE,EAASqB,YAAkB7D,IAA4BqC,sBAkBnE,OACI,eAAC,IAAMyB,SAAP,WACI,oBAAI/K,UAAU,kDAAd,SACI,sBAAMA,UAAU,eAAhB,8BAEJ,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,sBAAsBgL,KAAK,QAA1C,UACI,gDADJ,mDAKA,cAAC,EAAD,CACIjE,iBAAkBA,EAClBC,WAAYA,EACZC,gBAAiBA,MAIrB,cAAC,EAAD,CACIW,gBAAiBA,EACjBC,YAAaA,EACbZ,gBAAiBA,MAIpB6C,GACG,cAAC,EAAD,CACI5B,aAAcA,EACdD,mBAAoBA,EACpBhB,gBAAiBA,MAKxB+C,GACG,cAAC,EAAD,CACI1B,uBAAwBA,EACxBC,iBAAkBA,EAClBtB,gBAAiBA,MAKxBiD,GACG,cAAC,EAAD,CACIvB,uBAAwBA,EACxBC,gBAAiBA,EACjB3B,gBAAiBA,MAKxBmD,GACG,cAAC,EAAD,CACInB,0BAA2BA,EAC3BC,oBAAqBA,IAK7B,cAAC,EAAD,CACIE,kBAAmBA,EACnBC,YAAaA,EACbpC,gBAAiBA,MAGrB,qBAAKjH,UAAU,cAAf,SACI,wBAAQA,UAAU,kBAAkBuC,GAAG,WAAW0I,QAAS,kBA5EvElE,EAAiBE,IAA4BS,mBAC7CE,EAAgBX,IAA4Ba,oBAC5CG,EAAmBhB,IAA8BkB,qBACjDG,EAAuBrB,IAA6BuB,0BACpDS,GAA0B,GAC1BG,EAAkBnC,IAA4BsC,yBAC9CZ,EAAuB1B,IAA6B4B,4BAsExC,uC,SC/MLqC,UA3CM,SAAC9K,GAClB,IAAMqJ,EAAWC,cACXyB,EAAuBC,iBAAO,MAE5BC,EAAuB1B,aAAY,SAACC,GAAD,MAAuB,CAC9DyB,mBAAoBzB,EAAMC,OAAOwB,uBAD7BA,mBAOFC,EAAmBf,uBACrB,SAACpD,GACG,GAAIkE,EAAoB,CACpB,GAAIF,GAAmBA,EAAgBI,SAAWJ,EAAgBI,QAAQC,SAASrE,EAAEC,QACjF,OAEAqC,EAASgC,kBAIrB,CAACN,EAAiB1B,EAAU4B,IAUhC,OAPAhI,qBAAU,WAEN,OADAqI,SAASnI,iBAAiB,YAAa+H,GAAkB,GAClD,WACHI,SAASlI,oBAAoB,YAAa8H,GAAkB,MAEjE,CAACA,IAGA,eAAC,IAAMP,SAAP,WACI,qBAAK/K,UAAU,YAAYD,IAAKoL,EAAhC,SACI,cAACxJ,EAAA,EAAD,CAAWC,MAAO,CAAE+J,UAAW,OAAQC,OAAQ,KAASC,QAAS,IAAKC,iBAAkB,IAAxF,SACI,cAAC,EAAD,QAGR,qBAAK9L,UAAU","file":"static/js/9.5ec834ea.chunk.js","sourcesContent":["var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Similar to invariant but only logs a warning if the condition is not met.\n * This can be used to log issues in development environments in critical\n * paths. Removing the logging code for production environments will keep the\n * same logic and follow the same code paths.\n */\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nvar warning = function() {};\n\nif (__DEV__) {\n  var printWarning = function printWarning(format, args) {\n    var len = arguments.length;\n    args = new Array(len > 1 ? len - 1 : 0);\n    for (var key = 1; key < len; key++) {\n      args[key - 1] = arguments[key];\n    }\n    var argIndex = 0;\n    var message = 'Warning: ' +\n      format.replace(/%s/g, function() {\n        return args[argIndex++];\n      });\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) {}\n  }\n\n  warning = function(condition, format, args) {\n    var len = arguments.length;\n    args = new Array(len > 2 ? len - 2 : 0);\n    for (var key = 2; key < len; key++) {\n      args[key - 2] = arguments[key];\n    }\n    if (format === undefined) {\n      throw new Error(\n          '`warning(condition, format, ...args)` requires a warning ' +\n          'message argument'\n      );\n    }\n    if (!condition) {\n      printWarning.apply(null, [format].concat(args));\n    }\n  };\n}\n\nmodule.exports = warning;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const spans = [];\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{ ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, { ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import React from 'react';\nimport SimpleBar from 'simplebar-react';\n\ninterface ScrollbarProps extends SimpleBar.Props {\n    className?: string;\n    style?: any;\n    children?: any;\n}\n\nconst Scrollbar = ({ className, style, children, ...otherProps }: ScrollbarProps) => {\n    return (\n        <SimpleBar className={className} style={style} {...otherProps}>\n            {children}\n        </SimpleBar>\n    );\n};\n\nexport default Scrollbar;\n","import * as React from 'react'; // TODO\n\nconst FormContext = /*#__PURE__*/React.createContext({});\nexport default FormContext;","import * as React from 'react';\nimport { useMemo } from 'react';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormGroup = /*#__PURE__*/React.forwardRef(({\n  controlId,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const context = useMemo(() => ({\n    controlId\n  }), [controlId]);\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: context,\n    children: /*#__PURE__*/_jsx(Component, { ...props,\n      ref: ref\n    })\n  });\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckInput = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  className,\n  type = 'checkbox',\n  isValid = false,\n  isInvalid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  });\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","import { useState, useEffect } from 'react';\n\nconst useViewport = () => {\n    const [width, setWidth] = useState(window.innerWidth);\n    const [height, setHeight] = useState(window.innerHeight);\n\n    useEffect(() => {\n        const handleWindowResize = () => {\n            setWidth(window.innerWidth);\n            setHeight(window.innerHeight);\n        };\n\n        window.addEventListener('resize', handleWindowResize);\n        return () => window.removeEventListener('resize', handleWindowResize);\n    }, []);\n    return { width, height };\n};\n\nexport { useViewport };\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport FormGroup from './FormGroup';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FloatingLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  children,\n  controlId,\n  label,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-floating');\n  return /*#__PURE__*/_jsxs(FormGroup, {\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    controlId: controlId,\n    ...props,\n    children: [children, /*#__PURE__*/_jsx(\"label\", {\n      htmlFor: controlId,\n      children: label\n    })]\n  });\n});\nFloatingLabel.displayName = 'FloatingLabel';\nexport default FloatingLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Feedback = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  as: Component = 'div',\n  className,\n  type = 'valid',\n  tooltip = false,\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, { ...props,\n  ref: ref,\n  className: classNames(className, `${type}-${tooltip ? 'tooltip' : 'feedback'}`)\n}));\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormCheckLabel = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/_jsx(\"label\", { ...props,\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  });\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst FormCheck = /*#__PURE__*/React.forwardRef(({\n  id,\n  bsPrefix,\n  bsSwitchPrefix,\n  inline = false,\n  disabled = false,\n  isValid = false,\n  isInvalid = false,\n  feedbackTooltip = false,\n  feedback,\n  feedbackType,\n  className,\n  style,\n  title = '',\n  type = 'checkbox',\n  label,\n  children,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as = 'input',\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n  const {\n    controlId\n  } = useContext(FormContext);\n  const innerFormContext = useMemo(() => ({\n    controlId: id || controlId\n  }), [controlId, id]);\n  const hasLabel = label != null && label !== false && !children;\n\n  const input = /*#__PURE__*/_jsx(FormCheckInput, { ...props,\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  });\n\n  return /*#__PURE__*/_jsx(FormContext.Provider, {\n    value: innerFormContext,\n    children: /*#__PURE__*/_jsx(\"div\", {\n      style: style,\n      className: classNames(className, label && bsPrefix, inline && `${bsPrefix}-inline`, type === 'switch' && bsSwitchPrefix),\n      children: children || /*#__PURE__*/_jsxs(_Fragment, {\n        children: [input, hasLabel && /*#__PURE__*/_jsx(FormCheckLabel, {\n          title: title,\n          children: label\n        }), feedback && /*#__PURE__*/_jsx(Feedback, {\n          type: feedbackType,\n          tooltip: feedbackTooltip,\n          children: feedback\n        })]\n      })\n    })\n  });\n});\nFormCheck.displayName = 'FormCheck';\nexport default Object.assign(FormCheck, {\n  Input: FormCheckInput,\n  Label: FormCheckLabel\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormControl = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  type,\n  size,\n  htmlSize,\n  id,\n  className,\n  isValid = false,\n  isInvalid = false,\n  plaintext,\n  readOnly,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'input',\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  let classes;\n\n  if (plaintext) {\n    classes = {\n      [`${bsPrefix}-plaintext`]: true\n    };\n  } else {\n    classes = {\n      [bsPrefix]: true,\n      [`${bsPrefix}-${size}`]: size\n    };\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, classes, isValid && `is-valid`, isInvalid && `is-invalid`, type === 'color' && `${bsPrefix}-color`)\n  });\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback\n});","import createWithBsPrefix from './createWithBsPrefix';\nexport default createWithBsPrefix('form-floating');","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  column: false,\n  visuallyHidden: false\n};\nconst FormLabel = /*#__PURE__*/React.forwardRef(({\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'label',\n  bsPrefix,\n  column,\n  visuallyHidden,\n  className,\n  htmlFor,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  let columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = `${columnClass} ${columnClass}-${column}`;\n  const classes = classNames(className, bsPrefix, visuallyHidden && 'visually-hidden', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/_jsx(Col, {\n    ref: ref,\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor,\n    ...props\n  });\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    _jsx(Component, {\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor,\n      ...props\n    })\n  );\n});\nFormLabel.displayName = 'FormLabel';\nFormLabel.defaultProps = defaultProps;\nexport default FormLabel;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormRange = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/_jsx(\"input\", { ...props,\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix),\n    id: id || controlId\n  });\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormContext from './FormContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormSelect = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  size,\n  htmlSize,\n  className,\n  isValid = false,\n  isInvalid = false,\n  id,\n  ...props\n}, ref) => {\n  const {\n    controlId\n  } = useContext(FormContext);\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/_jsx(\"select\", { ...props,\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && `${bsPrefix}-${size}`, isValid && `is-valid`, isInvalid && `is-invalid`),\n    id: id || controlId\n  });\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst FormText = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n({\n  bsPrefix,\n  className,\n  as: Component = 'small',\n  muted,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/_jsx(Component, { ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  });\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import * as React from 'react';\nimport FormCheck from './FormCheck';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Switch = /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsx(FormCheck, { ...props,\n  ref: ref,\n  type: \"switch\"\n}));\nSwitch.displayName = 'Switch';\nexport default Object.assign(Switch, {\n  Input: FormCheck.Input,\n  Label: FormCheck.Label\n});","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport * as React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormFloating from './FormFloating';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nimport FloatingLabel from './FloatingLabel';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /**\n   * The Form `ref` will be forwarded to the underlying element,\n   * which means, unless it's rendered `as` a composite component,\n   * it will be a DOM node, when resolved.\n   *\n   * @type {ReactRef}\n   * @alias ref\n   */\n  _ref: PropTypes.any,\n\n  /**\n   * Mark a form as having been validated. Setting it to `true` will\n   * toggle any validation styles on the forms elements.\n   */\n  validated: PropTypes.bool,\n  as: PropTypes.elementType\n};\nconst Form = /*#__PURE__*/React.forwardRef(({\n  className,\n  validated,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'form',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(Component, { ...props,\n  ref: ref,\n  className: classNames(className, validated && 'was-validated')\n}));\nForm.displayName = 'Form';\nForm.propTypes = propTypes;\nexport default Object.assign(Form, {\n  Group: FormGroup,\n  Control: FormControl,\n  Floating: FormFloating,\n  Check: FormCheck,\n  Switch,\n  Label: FormLabel,\n  Text: FormText,\n  Range: FormRange,\n  Select: FormSelect,\n  FloatingLabel\n});","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport * as layoutConstants from '../../constants/layout';\n\ninterface LayoutTypesProps {\n    changeLayoutType: (value: any) => void;\n    layoutType: string;\n    layoutConstants: typeof layoutConstants.LayoutTypes;\n}\n\nconst LayoutTypes = ({ changeLayoutType, layoutType, layoutConstants }: LayoutTypesProps) => {\n    return (\n        <>\n            <h6 className=\"fw-medium mt-4 mb-2 pb-1\">Layout</h6>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    onChange={(e) => changeLayoutType(e.target.value)}\n                    name=\"layout-type\"\n                    value={layoutConstants.LAYOUT_VERTICAL}\n                    id=\"vertical-layout\"\n                    checked={layoutType === layoutConstants.LAYOUT_VERTICAL}\n                />\n                <Form.Check.Label htmlFor=\"vertical-layout\">Vertical Layout</Form.Check.Label>\n            </Form.Check>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    onChange={(e) => changeLayoutType(e.target.value)}\n                    name=\"layout-type\"\n                    value={layoutConstants.LAYOUT_HORIZONTAL}\n                    id=\"horizontal-layout\"\n                    checked={layoutType === layoutConstants.LAYOUT_HORIZONTAL}\n                />\n                <Form.Check.Label htmlFor=\"horizontal-layout\">Horizontal Layout</Form.Check.Label>\n            </Form.Check>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    onChange={(e) => changeLayoutType(e.target.value)}\n                    name=\"layout-type\"\n                    value={layoutConstants.LAYOUT_DETACHED}\n                    id=\"detached-layout\"\n                    checked={layoutType === layoutConstants.LAYOUT_DETACHED}\n                />\n                <Form.Check.Label htmlFor=\"detached-layout\">Detached Layout</Form.Check.Label>\n            </Form.Check>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    onChange={(e) => changeLayoutType(e.target.value)}\n                    name=\"layout-type\"\n                    value={layoutConstants.LAYOUT_TWO_COLUMN}\n                    id=\"two-column-layout\"\n                    checked={layoutType === layoutConstants.LAYOUT_TWO_COLUMN}\n                />\n                <Form.Check.Label htmlFor=\"two-column-layout\">Two Column Layout</Form.Check.Label>\n            </Form.Check>\n        </>\n    );\n};\n\nexport default LayoutTypes;\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport * as layoutConstants from '../../constants/layout';\n\ninterface LayoutWidthProps {\n    changeWidthMode: (value: any) => void;\n    layoutWidth: string;\n    layoutConstants: typeof layoutConstants.LayoutWidth;\n}\n\nconst LayoutWidth = ({ changeWidthMode, layoutWidth, layoutConstants }: LayoutWidthProps) => {\n    return (\n        <>\n            <h6 className=\"fw-medium mt-4 mb-2 pb-1\">Width</h6>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    name=\"width\"\n                    id=\"fluid-check\"\n                    value={layoutConstants.LAYOUT_WIDTH_FLUID}\n                    onChange={(e) => changeWidthMode(e.target.value)}\n                    checked={layoutWidth === layoutConstants.LAYOUT_WIDTH_FLUID}\n                />\n                <Form.Check.Label htmlFor=\"fluid-check\">Fluid</Form.Check.Label>\n            </Form.Check>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    name=\"width\"\n                    id=\"boxed-check\"\n                    value={layoutConstants.LAYOUT_WIDTH_BOXED}\n                    onChange={(e) => changeWidthMode(e.target.value)}\n                    checked={layoutWidth === layoutConstants.LAYOUT_WIDTH_BOXED}\n                />\n                <Form.Check.Label htmlFor=\"boxed-check\">Boxed</Form.Check.Label>\n            </Form.Check>\n        </>\n    );\n};\n\nexport default LayoutWidth;\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport * as layoutConstants from '../../constants/layout';\n\ninterface MenuPositionsProps {\n    changeMenuPosition: (value: any) => void;\n    menuPosition: string;\n    layoutConstants: typeof layoutConstants.MenuPositions;\n}\n\nconst MenuPositions = ({ changeMenuPosition, menuPosition, layoutConstants }: MenuPositionsProps) => {\n    return (\n        <>\n            <h6 className=\"fw-medium mt-4 mb-2 pb-1\">Menus (Leftsidebar and Topbar) Position</h6>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    name=\"menus-position\"\n                    id=\"fixed-check\"\n                    value={layoutConstants.MENU_POSITION_FIXED}\n                    onChange={(e) => changeMenuPosition(e.target.value)}\n                    checked={menuPosition === layoutConstants.MENU_POSITION_FIXED}\n                />\n                <Form.Check.Label htmlFor=\"fixed-check\">Fixed</Form.Check.Label>\n            </Form.Check>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    name=\"menus-position\"\n                    id=\"scrollable-check\"\n                    value={layoutConstants.MENU_POSITION_SCROLLABLE}\n                    onChange={(e) => changeMenuPosition(e.target.value)}\n                    checked={menuPosition === layoutConstants.MENU_POSITION_SCROLLABLE}\n                />\n                <Form.Check.Label htmlFor=\"scrollable-check\">Scrollable</Form.Check.Label>\n            </Form.Check>\n        </>\n    );\n};\n\nexport default MenuPositions;\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport * as layoutConstants from '../../constants/layout';\n\ninterface LeftSideBarThemeProps {\n    changeLeftSidebarTheme: (value: any) => void;\n    leftSideBarTheme: string;\n    layoutConstants: typeof layoutConstants.SideBarTheme;\n}\n\nconst LeftSideBarTheme = ({ changeLeftSidebarTheme, leftSideBarTheme, layoutConstants }: LeftSideBarThemeProps) => {\n    return (\n        <>\n            <h6 className=\"fw-medium mt-4 mb-2 pb-1\">Left Sidebar Color</h6>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    name=\"theme\"\n                    id=\"light-check\"\n                    value={layoutConstants.LEFT_SIDEBAR_THEME_LIGHT}\n                    onChange={(e) => changeLeftSidebarTheme(e.target.value)}\n                    checked={leftSideBarTheme === layoutConstants.LEFT_SIDEBAR_THEME_LIGHT}\n                />\n                <Form.Check.Label htmlFor=\"light-check\">Light</Form.Check.Label>\n            </Form.Check>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    name=\"theme\"\n                    id=\"dark-check\"\n                    value={layoutConstants.LEFT_SIDEBAR_THEME_DARK}\n                    onChange={(e) => changeLeftSidebarTheme(e.target.value)}\n                    checked={leftSideBarTheme === layoutConstants.LEFT_SIDEBAR_THEME_DARK}\n                />\n                <Form.Check.Label htmlFor=\"dark-check\">Dark</Form.Check.Label>\n            </Form.Check>\n        </>\n    );\n};\n\nexport default LeftSideBarTheme;\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport * as layoutConstants from '../../constants/layout';\n\ninterface LeftSideBarTypeProps {\n    changeLeftSiderbarType: (value: any) => void;\n    leftSideBarType: string;\n    layoutConstants: typeof layoutConstants.SideBarTypes;\n}\n\nconst LeftSideBarType = ({ changeLeftSiderbarType, leftSideBarType, layoutConstants }: LeftSideBarTypeProps) => {\n    return (\n        <>\n            <h6 className=\"fw-medium mt-4 mb-2 pb-1\">Left Sidebar Size</h6>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    name=\"leftsidebar-size\"\n                    id=\"default-check\"\n                    value={layoutConstants.LEFT_SIDEBAR_TYPE_DEFAULT}\n                    onChange={(e) => changeLeftSiderbarType(e.target.value)}\n                    checked={leftSideBarType === layoutConstants.LEFT_SIDEBAR_TYPE_DEFAULT}\n                />\n                <Form.Check.Label htmlFor=\"default-check\">Default</Form.Check.Label>\n            </Form.Check>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    name=\"leftsidebar-size\"\n                    id=\"condensed-check\"\n                    value={layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED}\n                    onChange={(e) => changeLeftSiderbarType(e.target.value)}\n                    checked={leftSideBarType === layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED}\n                />\n                <Form.Check.Label htmlFor=\"condensed-check\">\n                    Condensed <small>(Extra Small size)</small>\n                </Form.Check.Label>\n            </Form.Check>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    name=\"leftsidebar-size\"\n                    id=\"compact-check\"\n                    value={layoutConstants.LEFT_SIDEBAR_TYPE_COMPACT}\n                    onChange={(e) => changeLeftSiderbarType(e.target.value)}\n                    checked={leftSideBarType === layoutConstants.LEFT_SIDEBAR_TYPE_COMPACT}\n                />\n                <Form.Check.Label htmlFor=\"compact-check\">\n                    Compact <small>(Small size)</small>\n                </Form.Check.Label>\n            </Form.Check>\n        </>\n    );\n};\n\nexport default LeftSideBarType;\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\n\ninterface SidebarUserInfoProps {\n    toggleLeftSidebarUserInfo: (value: any) => void;\n    showSidebarUserInfo: boolean;\n}\n\nconst SidebarUserInfo = ({ toggleLeftSidebarUserInfo, showSidebarUserInfo }: SidebarUserInfoProps) => {\n    return (\n        <>\n            <h6 className=\"fw-medium mt-4 mb-2 pb-1\">Sidebar User Info</h6>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"checkbox\"\n                    name=\"leftsidebar-user\"\n                    id=\"sidebaruser-check\"\n                    onChange={(e) => toggleLeftSidebarUserInfo(e.target.checked)}\n                    checked={showSidebarUserInfo}\n                />\n                <Form.Check.Label htmlFor=\"sidebaruser-check\">Enable</Form.Check.Label>\n            </Form.Check>\n        </>\n    );\n};\n\nexport default SidebarUserInfo;\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport * as layoutConstants from '../../constants/layout';\n\ninterface TopbarThemeProps {\n    changeTopBarTheme: (value: any) => void;\n    topbarTheme: string;\n    layoutConstants: typeof layoutConstants.TopbarTheme;\n}\n\nconst TopbarTheme = ({ changeTopBarTheme, topbarTheme, layoutConstants }: TopbarThemeProps) => {\n    return (\n        <>\n            <h6 className=\"fw-medium mt-4 mb-2 pb-1\">Topbar</h6>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    name=\"topbar-color\"\n                    id=\"darktopbar-check\"\n                    value={layoutConstants.TOPBAR_THEME_DARK}\n                    onChange={(e) => changeTopBarTheme(e.target.value)}\n                    checked={topbarTheme === layoutConstants.TOPBAR_THEME_DARK}\n                />\n                <Form.Check.Label htmlFor=\"darktopbar-check\">Dark</Form.Check.Label>\n            </Form.Check>\n\n            <Form.Check className=\"form-check form-switch mb-1\">\n                <Form.Check.Input\n                    type=\"radio\"\n                    name=\"topbar-color\"\n                    id=\"lighttopbar-check\"\n                    value={layoutConstants.TOPBAR_THEME_LIGHT}\n                    onChange={(e) => changeTopBarTheme(e.target.value)}\n                    checked={topbarTheme === layoutConstants.TOPBAR_THEME_LIGHT}\n                />\n                <Form.Check.Label htmlFor=\"lighttopbar-check\">Light</Form.Check.Label>\n            </Form.Check>\n        </>\n    );\n};\n\nexport default TopbarTheme;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\n// actions\nimport {\n    changeLayout,\n    changeLayoutWidth,\n    changeMenuPositions,\n    changeSidebarTheme,\n    changeSidebarType,\n    toggleSidebarUserInfo,\n    changeTopbarTheme,\n} from '../../redux/actions';\n\n// store\nimport { RootState, AppDispatch } from '../../redux/store';\n\n// constants\nimport * as layoutConstants from '../../constants/layout';\n\n// custom hook\nimport { useViewport } from '../../hooks/useViewPort';\n\n// components\nimport LayoutTypes from './LayoutTypes';\nimport LayoutWidth from './LayoutWidth';\nimport MenuPositions from './MenuPositions';\nimport LeftSideBarTheme from './LeftSideBarTheme';\nimport LeftSideBarType from './LeftSideBarType';\nimport SidebarUserInfo from './SidebarUserInfo';\nimport TopbarTheme from './TopbarTheme';\n\nconst ThemeCustomizer = () => {\n    const dispatch = useDispatch<AppDispatch>();\n    const { width } = useViewport();\n\n    const {\n        layoutType,\n        layoutWidth,\n        menuPosition,\n        leftSideBarType,\n        leftSideBarTheme,\n        showSidebarUserInfo,\n        topbarTheme,\n    } = useSelector((state: RootState) => ({\n        layoutType: state.Layout.layoutType,\n        layoutWidth: state.Layout.layoutWidth,\n        menuPosition: state.Layout.menuPosition,\n        leftSideBarTheme: state.Layout.leftSideBarTheme,\n        leftSideBarType: state.Layout.leftSideBarType,\n        showSidebarUserInfo: state.Layout.showSidebarUserInfo,\n        topbarTheme: state.Layout.topbarTheme,\n    }));\n\n    const [disableMenuPositions, setDisableMenuPositions] = useState<boolean>(false);\n    const [disableSidebarTheme, setDisableSidebarTheme] = useState<boolean>(false);\n    const [disableSidebarType, setDisableSidebarType] = useState<boolean>(false);\n    const [disableSidebarUser, setDisableSidebarUser] = useState<boolean>(false);\n\n    /**\n     * change state based on props changes\n     */\n    const _loadStateFromProps = useCallback(() => {\n        setDisableMenuPositions(layoutType !== layoutConstants.LayoutTypes.LAYOUT_TWO_COLUMN);\n        setDisableSidebarTheme(layoutType !== layoutConstants.LayoutTypes.LAYOUT_HORIZONTAL);\n        setDisableSidebarType(\n            layoutType !== layoutConstants.LayoutTypes.LAYOUT_HORIZONTAL &&\n                layoutType !== layoutConstants.LayoutTypes.LAYOUT_TWO_COLUMN &&\n                width > 991\n        );\n        setDisableSidebarUser(\n            layoutType !== layoutConstants.LayoutTypes.LAYOUT_HORIZONTAL &&\n                layoutType !== layoutConstants.LayoutTypes.LAYOUT_TWO_COLUMN\n        );\n    }, [layoutType, width]);\n\n    useEffect(() => {\n        _loadStateFromProps();\n    }, [_loadStateFromProps]);\n\n    /**\n     * On layout change\n     */\n    const changeLayoutType = (value: any) => {\n        var layout = value;\n        switch (layout) {\n            case 'horizontal':\n                dispatch(changeLayout(layoutConstants.LayoutTypes.LAYOUT_HORIZONTAL));\n                break;\n            case 'detached':\n                dispatch(changeLayout(layoutConstants.LayoutTypes.LAYOUT_DETACHED));\n                break;\n            case 'vertical':\n                dispatch(changeLayout(layoutConstants.LayoutTypes.LAYOUT_VERTICAL));\n                break;\n            default:\n                dispatch(changeLayout(layoutConstants.LayoutTypes.LAYOUT_TWO_COLUMN));\n                break;\n        }\n    };\n\n    /**\n     * Change the width mode\n     */\n    const changeWidthMode = (value: any) => {\n        var mode = value;\n\n        switch (mode) {\n            case 'boxed':\n                dispatch(changeLayoutWidth(layoutConstants.LayoutWidth.LAYOUT_WIDTH_BOXED));\n                break;\n            default:\n                dispatch(changeLayoutWidth(layoutConstants.LayoutWidth.LAYOUT_WIDTH_FLUID));\n                break;\n        }\n    };\n\n    /*\n     * Change menus position\n     */\n    const changeMenuPosition = (value: any) => {\n        var position = value;\n\n        switch (position) {\n            case 'scrollable':\n                dispatch(changeMenuPositions(layoutConstants.MenuPositions.MENU_POSITION_SCROLLABLE));\n                break;\n            default:\n                dispatch(changeMenuPositions(layoutConstants.MenuPositions.MENU_POSITION_FIXED));\n                break;\n        }\n    };\n\n    /**\n     * Changes the theme\n     */\n    const changeLeftSidebarTheme = (value: any) => {\n        var theme = value;\n        switch (theme) {\n            case 'dark':\n                dispatch(changeSidebarTheme(layoutConstants.SideBarTheme.LEFT_SIDEBAR_THEME_DARK));\n                break;\n            default:\n                dispatch(changeSidebarTheme(layoutConstants.SideBarTheme.LEFT_SIDEBAR_THEME_LIGHT));\n                break;\n        }\n    };\n\n    /**\n     * Change the leftsiderbar type\n     */\n    const changeLeftSiderbarType = (value: any) => {\n        var type = value;\n        switch (type) {\n            case 'condensed':\n                dispatch(changeSidebarType(layoutConstants.SideBarTypes.LEFT_SIDEBAR_TYPE_CONDENSED));\n                break;\n            case 'compact':\n                dispatch(changeSidebarType(layoutConstants.SideBarTypes.LEFT_SIDEBAR_TYPE_COMPACT));\n                break;\n            default:\n                dispatch(changeSidebarType(layoutConstants.SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT));\n                break;\n        }\n    };\n\n    /*\n     * Toggle the leftsidebar use info\n     */\n    const toggleLeftSidebarUserInfo = (value: any) => {\n        var checked = value;\n        dispatch(toggleSidebarUserInfo(checked));\n    };\n\n    /*\n     * Change topbar theme\n     */\n    const changeTopBarTheme = (value: any) => {\n        var theme = value;\n        switch (theme) {\n            case 'light':\n                dispatch(changeTopbarTheme(layoutConstants.TopbarTheme.TOPBAR_THEME_LIGHT));\n                break;\n            default:\n                dispatch(changeTopbarTheme(layoutConstants.TopbarTheme.TOPBAR_THEME_DARK));\n                break;\n        }\n    };\n\n    /**\n     * Reset everything\n     */\n    const reset = () => {\n        changeLayoutType(layoutConstants.LayoutTypes.LAYOUT_TWO_COLUMN);\n        changeWidthMode(layoutConstants.LayoutWidth.LAYOUT_WIDTH_FLUID);\n        changeMenuPosition(layoutConstants.MenuPositions.MENU_POSITION_FIXED);\n        changeLeftSidebarTheme(layoutConstants.SideBarTheme.LEFT_SIDEBAR_THEME_LIGHT);\n        toggleLeftSidebarUserInfo(false);\n        changeTopBarTheme(layoutConstants.TopbarTheme.TOPBAR_THEME_LIGHT);\n        changeLeftSiderbarType(layoutConstants.SideBarTypes.LEFT_SIDEBAR_TYPE_DEFAULT);\n    };\n\n    return (\n        <React.Fragment>\n            <h6 className=\"fw-medium px-3 m-0 py-2 text-uppercase bg-light\">\n                <span className=\"d-block py-1\">Theme Settings</span>\n            </h6>\n            <div className=\"p-3\">\n                <div className=\"alert alert-warning\" role=\"alert\">\n                    <strong>Customize </strong> the overall color scheme, sidebar menu, etc.\n                </div>\n\n                {/* Layouts */}\n                <LayoutTypes\n                    changeLayoutType={changeLayoutType}\n                    layoutType={layoutType}\n                    layoutConstants={layoutConstants.LayoutTypes}\n                />\n\n                {/* Width */}\n                <LayoutWidth\n                    changeWidthMode={changeWidthMode}\n                    layoutWidth={layoutWidth}\n                    layoutConstants={layoutConstants.LayoutWidth}\n                />\n\n                {/* Menu Posiotions */}\n                {disableMenuPositions && (\n                    <MenuPositions\n                        menuPosition={menuPosition}\n                        changeMenuPosition={changeMenuPosition}\n                        layoutConstants={layoutConstants.MenuPositions}\n                    />\n                )}\n\n                {/* Left Sidebar */}\n                {disableSidebarTheme && (\n                    <LeftSideBarTheme\n                        changeLeftSidebarTheme={changeLeftSidebarTheme}\n                        leftSideBarTheme={leftSideBarTheme}\n                        layoutConstants={layoutConstants.SideBarTheme}\n                    />\n                )}\n\n                {/* Left Sidebar Size */}\n                {disableSidebarType && (\n                    <LeftSideBarType\n                        changeLeftSiderbarType={changeLeftSiderbarType}\n                        leftSideBarType={leftSideBarType}\n                        layoutConstants={layoutConstants.SideBarTypes}\n                    />\n                )}\n\n                {/* User Info */}\n                {disableSidebarUser && (\n                    <SidebarUserInfo\n                        toggleLeftSidebarUserInfo={toggleLeftSidebarUserInfo}\n                        showSidebarUserInfo={showSidebarUserInfo}\n                    />\n                )}\n\n                {/* Topbar */}\n                <TopbarTheme\n                    changeTopBarTheme={changeTopBarTheme}\n                    topbarTheme={topbarTheme}\n                    layoutConstants={layoutConstants.TopbarTheme}\n                />\n\n                <div className=\"d-grid mt-4\">\n                    <button className=\"btn btn-primary\" id=\"resetBtn\" onClick={() => reset()}>\n                        Reset to Default\n                    </button>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default ThemeCustomizer;\n","import React, { useCallback, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\n// actions\nimport { hideRightSidebar } from '../redux/actions';\n\n// store\nimport { AppDispatch, RootState } from '../redux/store';\n\n// components\nimport ThemeCustomizer from '../components/ThemeCustomizer/';\nimport Scrollbar from '../components/Scrollbar';\n\ninterface RightSideBarProps {\n    hideRightSidebar?: () => void;\n    title?: string;\n    children?: any;\n}\n\nconst RightSideBar = (props: RightSideBarProps) => {\n    const dispatch = useDispatch<AppDispatch>();\n    const rightBarNodeRef: any = useRef(null);\n\n    const { isOpenRightSideBar } = useSelector((state: RootState) => ({\n        isOpenRightSideBar: state.Layout.isOpenRightSideBar,\n    }));\n\n    /**\n     * Handle the click anywhere in doc\n     */\n    const handleOtherClick = useCallback(\n        (e: any) => {\n            if (isOpenRightSideBar) {\n                if (rightBarNodeRef && rightBarNodeRef.current && rightBarNodeRef.current.contains(e.target)) {\n                    return;\n                } else {\n                    dispatch(hideRightSidebar());\n                }\n            }\n        },\n        [rightBarNodeRef, dispatch, isOpenRightSideBar]\n    );\n\n    useEffect(() => {\n        document.addEventListener('mousedown', handleOtherClick, false);\n        return () => {\n            document.removeEventListener('mousedown', handleOtherClick, false);\n        };\n    }, [handleOtherClick]);\n\n    return (\n        <React.Fragment>\n            <div className=\"right-bar\" ref={rightBarNodeRef}>\n                <Scrollbar style={{ maxHeight: '100%', zIndex: 10000 }} timeout={500} scrollbarMaxSize={320}>\n                    <ThemeCustomizer />\n                </Scrollbar>\n            </div>\n            <div className=\"rightbar-overlay\"></div>\n        </React.Fragment>\n    );\n};\n\nexport default RightSideBar;\n"],"sourceRoot":""}