{"version":3,"sources":["components/PageTitle.tsx","components/Datepicker.tsx","pages/forms/Advanced.tsx"],"names":["PageTitle","props","className","title","listProps","Item","href","breadCrumbItems","map","item","index","active","label","path","DatepickerInput","forwardRef","ref","type","classNames","inputClass","onClick","value","onChange","console","log","DatepickerInputWithAddon","readOnly","ShreyuDatepicker","input","hideAddon","calendarClassName","selectsRange","startDate","endDate","selected","date","customInput","timeIntervals","tI","showTimeSelect","timeFormat","timeCaption","dateFormat","minDate","maxDate","monthsShown","showTimeSelectOnly","inline","autoComplete","ReactSelect","Body","rel","to","pathname","target","classNamePrefix","options","isMulti","Typeaheads","useState","singleSelections","setSingleSelections","multiSelections","setMultiSelections","id","labelKey","multiple","placeholder","DatePickers","Date","selectedDate","setSelectedDate","onDateChange","lg","setDate","getDate","InputMasks","mask","FormAdvanced","Fragment"],"mappings":"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","file":"static/js/61.385a98f8.chunk.js","sourcesContent":["import React from 'react';\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\n\ninterface BreadcrumbItems {\n    label: string;\n    path: string;\n    active?: boolean;\n}\n\ninterface PageTitleProps {\n    breadCrumbItems: Array<BreadcrumbItems>;\n    title: string;\n}\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <h4 className=\"page-title\">{props.title}</h4>\n                    <div className=\"page-title-right\">\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\n                            <Breadcrumb.Item href=\"/\">Shreyu</Breadcrumb.Item>\n\n                            {(props.breadCrumbItems || []).map((item, index) => {\n                                return item.active ? (\n                                    <Breadcrumb.Item active key={index}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                ) : (\n                                    <Breadcrumb.Item key={index} href={item.path}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","import React, { forwardRef } from 'react';\nimport DatePicker from 'react-datepicker';\nimport classNames from 'classnames';\n\ninterface DatepickerInputProps {\n    onClick?: () => void;\n    value?: string;\n    inputClass: string;\n    children?: React.ReactNode;\n}\n\n/* Datepicker with Input */\nconst DatepickerInput = forwardRef<HTMLInputElement, DatepickerInputProps>((props, ref) => {\n    const onDateValueChange = () => {\n        console.log('date value changed');\n    };\n    return (\n        <input\n            type=\"text\"\n            className={classNames('form-control', props.inputClass)}\n            onClick={props.onClick}\n            value={props.value}\n            onChange={onDateValueChange}\n            ref={ref}\n        />\n    );\n});\n\n/* Datepicker with Addon Input */\nconst DatepickerInputWithAddon = forwardRef<HTMLInputElement, DatepickerInputProps>((props, ref) => (\n    <div className=\"input-group input-group-sm\" ref={ref}>\n        <input\n            type=\"text\"\n            className={classNames('form-control', props.inputClass)}\n            onClick={props.onClick}\n            value={props.value}\n            readOnly\n        />\n        <span className=\"input-group-text bg-blue border-blue text-white\">\n            <i className=\"mdi mdi-calendar-range\"></i>\n        </span>\n    </div>\n));\n\ninterface ShreyuDatepickerProps {\n    value?: Date;\n    selectsRange?: boolean;\n    startDate?: Date;\n    endDate?: Date;\n    calendarClassName?: string;\n    onChange: (date: any) => void;\n    hideAddon?: boolean;\n    inputClass?: string;\n    dateFormat?: string;\n    minDate?: Date;\n    maxDate?: Date;\n    showTimeSelect?: boolean;\n    tI?: number;\n    timeCaption?: string;\n    timeFormat?: string;\n    showTimeSelectOnly?: boolean;\n    monthsShown?: number;\n    inline?: boolean;\n}\n\nconst ShreyuDatepicker = (props: ShreyuDatepickerProps) => {\n    // handle custom input\n    const input =\n        (props.hideAddon || false) === true ? (\n            <DatepickerInput inputClass={props.inputClass!} />\n        ) : (\n            <DatepickerInputWithAddon inputClass={props.inputClass!} />\n        );\n\n    return (\n        <>\n            {/* date picker control */}\n            <DatePicker\n                calendarClassName={props.calendarClassName || 'shadow'}\n                selectsRange={props.selectsRange}\n                startDate={props.startDate}\n                endDate={props.endDate}\n                selected={props.value}\n                onChange={(date) => props.onChange(date)}\n                customInput={input}\n                timeIntervals={props.tI}\n                showTimeSelect={props.showTimeSelect}\n                timeFormat={props.timeFormat || 'hh:mm a'}\n                timeCaption={props.timeCaption}\n                dateFormat={props.dateFormat || 'MM/dd/yyyy'}\n                minDate={props.minDate}\n                maxDate={props.maxDate}\n                monthsShown={props.monthsShown}\n                showTimeSelectOnly={props.showTimeSelectOnly}\n                inline={props.inline}\n                autoComplete=\"off\"\n            />\n        </>\n    );\n};\n\nexport default ShreyuDatepicker;\n","import React, { useState } from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport Select from 'react-select';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport 'react-bootstrap-typeahead/css/Typeahead.css';\nimport MaskedInput from 'react-text-mask';\n\n// components\nimport PageTitle from '../../components/PageTitle';\nimport ShreyuDatepicker from '../../components/Datepicker';\n\nconst ReactSelect = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">\n                    <Link\n                        rel=\"noreferrer\"\n                        to={{ pathname: 'https://github.com/JedWatson/react-select' }}\n                        target=\"_blank\">\n                        React select\n                    </Link>\n                </h4>\n                <p className=\"mb-1 mt-3 fw-bold\">Single Selection</p>\n                <p className=\"text-muted fs-14\">React-Select based Select element</p>\n                <Select\n                    className=\"react-select react-select-container\"\n                    classNamePrefix=\"react-select\"\n                    options={[\n                        { value: 'chocolate', label: 'Chocolate' },\n                        { value: 'strawberry', label: 'Strawberry' },\n                        { value: 'vanilla', label: 'Vanilla' },\n                    ]}></Select>\n\n                <p className=\"mb-1 mt-3 fw-bold\">Multiple Selection</p>\n                <p className=\"text-muted fs-14\">React-Select based Select (Multiple) element</p>\n                <Select\n                    isMulti={true}\n                    options={[\n                        { value: 'chocolate', label: 'Chocolate' },\n                        { value: 'strawberry', label: 'Strawberry' },\n                        { value: 'vanilla', label: 'Vanilla' },\n                    ]}\n                    className=\"react-select react-select-container\"\n                    classNamePrefix=\"react-select\"></Select>\n            </Card.Body>\n        </Card>\n    );\n};\n\ninterface OptionTypes {\n    id: number | string;\n    value: string;\n    label: string;\n}\nconst Typeaheads = () => {\n    const [singleSelections, setSingleSelections] = useState<OptionTypes[]>([]);\n    const [multiSelections, setMultiSelections] = useState<OptionTypes[]>([]);\n\n    const options: Array<OptionTypes> = [\n        { id: 1, value: 'chocolate', label: 'Chocolate' },\n        { id: 2, value: 'strawberry', label: 'Strawberry' },\n        { id: 3, value: 'vanilla', label: 'Vanilla' },\n    ];\n\n    const onChangeSingleSelection = (selected: OptionTypes[]) => {\n        setSingleSelections(selected);\n    };\n\n    const onChangeMultipleSelection = (selected: OptionTypes[]) => {\n        setMultiSelections(selected);\n    };\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">\n                    <Link\n                        rel=\"noreferrer\"\n                        to={{ pathname: 'http://ericgio.github.io/react-bootstrap-typeahead/' }}\n                        target=\"_blank\">\n                        Typeahead\n                    </Link>\n                </h4>\n                <p className=\"mb-1 mt-3 fw-bold\">Single Selection</p>\n                <p className=\"text-muted fs-14\">Typeahead based Select element</p>\n                <Typeahead\n                    id=\"select2\"\n                    labelKey={'label'}\n                    multiple={false}\n                    onChange={onChangeSingleSelection}\n                    options={options}\n                    placeholder=\"Choose a state...\"\n                    selected={singleSelections}\n                />\n\n                <p className=\"mb-1 mt-3 fw-bold\">Multiple Selection</p>\n                <p className=\"text-muted fs-14\">Typeahead based Select (Multiple) element</p>\n                <Typeahead\n                    id=\"select3\"\n                    labelKey=\"label\"\n                    multiple\n                    onChange={onChangeMultipleSelection}\n                    options={options}\n                    placeholder=\"Choose a state...\"\n                    selected={multiSelections}\n                />\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst DatePickers = () => {\n    const [selectedDate, setSelectedDate] = useState<Date>(new Date());\n\n    /*\n     * handle date change\n     */\n    const onDateChange = (date: Date) => {\n        if (date) {\n            setSelectedDate(date);\n        }\n    };\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Date &amp; Time Picker</h4>\n                <p className=\"text-muted fs-14\">\n                    A simple date picker using{' '}\n                    <Link target=\"_blank\" rel=\"noreferrer\" to={{ pathname: 'https://reactdatepicker.com/' }}>\n                        ReactJS Datepicker\n                    </Link>\n                </p>\n\n                <Row>\n                    <Col lg={6}>\n                        <div className=\"mb-3\">\n                            <label className=\"form-label\">Single Date</label> <br />\n                            <ShreyuDatepicker\n                                hideAddon={true}\n                                value={selectedDate}\n                                onChange={(date) => {\n                                    onDateChange(date);\n                                }}\n                            />\n                        </div>\n                    </Col>\n                    <Col lg={6}>\n                        <div className=\"mb-3\">\n                            <label className=\"form-label\">Single Date with multiple months</label> <br />\n                            <ShreyuDatepicker\n                                hideAddon={true}\n                                monthsShown={2}\n                                value={selectedDate}\n                                onChange={(date) => {\n                                    onDateChange(date);\n                                }}\n                            />\n                        </div>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col lg={6}>\n                        <div className=\"mb-3\">\n                            <label className=\"form-label\">Custom date format</label> <br />\n                            <ShreyuDatepicker\n                                hideAddon={true}\n                                dateFormat=\"yyyy-MM-dd\"\n                                value={selectedDate}\n                                onChange={(date) => {\n                                    onDateChange(date);\n                                }}\n                            />\n                        </div>\n                    </Col>\n                    <Col lg={6}>\n                        <div className=\"mb-3\">\n                            <label className=\"form-label\">Specific date range</label> <br />\n                            <ShreyuDatepicker\n                                hideAddon={true}\n                                minDate={new Date()}\n                                maxDate={new Date(new Date().setDate(new Date().getDate() + 7))}\n                                value={selectedDate}\n                                onChange={(date) => {\n                                    onDateChange(date);\n                                }}\n                            />\n                        </div>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col lg={6}>\n                        <div className=\"mb-3\">\n                            <label className=\"form-label\">Select Time</label> <br />\n                            <ShreyuDatepicker\n                                hideAddon={true}\n                                showTimeSelect\n                                timeFormat=\"HH:mm\"\n                                tI={60}\n                                dateFormat=\"MMMM d, yyyy h:mm aa\"\n                                timeCaption=\"time\"\n                                value={selectedDate}\n                                onChange={(date) => {\n                                    onDateChange(date);\n                                }}\n                            />\n                        </div>\n                    </Col>\n                    <Col lg={6}>\n                        <div className=\"mb-3\">\n                            <label className=\"form-label\">Time only</label> <br />\n                            <ShreyuDatepicker\n                                hideAddon={true}\n                                showTimeSelect\n                                showTimeSelectOnly\n                                tI={60}\n                                dateFormat=\"h:mm aa\"\n                                timeCaption=\"Time\"\n                                value={selectedDate}\n                                onChange={(date) => {\n                                    onDateChange(date);\n                                }}\n                            />\n                        </div>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst InputMasks = () => {\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title\">Input Masks</h4>\n                <p className=\"text-muted fs-14\">\n                    Input masks by{' '}\n                    <Link\n                        target=\"_blank\"\n                        rel=\"noreferrer\"\n                        to={{ pathname: 'https://github.com/text-mask/text-mask/tree/master/react#readme' }}>\n                        react-text-mask\n                    </Link>\n                </p>\n\n                <Row>\n                    <Col lg={6}>\n                        <div className=\"mb-3\">\n                            <label className=\"form-label\">Phone Number with Area Code</label> <br />\n                            <MaskedInput\n                                mask={[\n                                    '(',\n                                    /[1-9]/,\n                                    /\\d/,\n                                    ')',\n                                    ' ',\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                    '-',\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                ]}\n                                placeholder=\"(__) ____-____\"\n                                className=\"form-control\"\n                            />\n                        </div>\n                    </Col>\n                    <Col lg={6}>\n                        <div className=\"mb-3\">\n                            <label className=\"form-label\">US Phone Number</label> <br />\n                            <MaskedInput\n                                mask={[\n                                    '(',\n                                    /[1-9]/,\n                                    /\\d/,\n                                    /\\d/,\n                                    ')',\n                                    ' ',\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                    '-',\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                    /\\d/,\n                                ]}\n                                placeholder=\"(___) ___-____\"\n                                className=\"form-control\"\n                            />\n                        </div>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col lg={6}>\n                        <div className=\"mb-3\">\n                            <label className=\"form-label\">Date</label> <br />\n                            <MaskedInput\n                                mask={[/\\d/, /\\d/, '/', /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/]}\n                                placeholder=\"__/__/____\"\n                                className=\"form-control\"\n                            />\n                        </div>\n                    </Col>\n                    <Col lg={6}>\n                        <div className=\"mb-3\">\n                            <label className=\"form-label\">Time</label> <br />\n                            <MaskedInput\n                                mask={[/\\d/, /\\d/, ':', /\\d/, /\\d/, ':', /\\d/, /\\d/]}\n                                placeholder=\"__:__:__\"\n                                className=\"form-control\"\n                            />\n                        </div>\n                    </Col>\n                </Row>\n            </Card.Body>\n        </Card>\n    );\n};\n\nconst FormAdvanced = () => {\n    return (\n        <React.Fragment>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Forms', path: '/forms/advanced' },\n                    { label: 'Form Advanced', path: '/forms/advanced', active: true },\n                ]}\n                title={'Form Advanced'}\n            />\n\n            <Row>\n                <Col lg={6}>\n                    <ReactSelect />\n                </Col>\n                <Col lg={6}>\n                    <Typeaheads />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col>\n                    <DatePickers />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col>\n                    <InputMasks />\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default FormAdvanced;\n"],"sourceRoot":""}