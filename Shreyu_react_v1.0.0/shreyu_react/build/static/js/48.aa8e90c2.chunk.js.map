{"version":3,"sources":["../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useCommittedRef.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useEventCallback.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useEventListener.js","../node_modules/dom-helpers/esm/camelize.js","../node_modules/react-bootstrap/esm/createWithBsPrefix.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useCallbackRef.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useGlobalListener.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useMounted.js","../node_modules/@restart/ui/esm/Button.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useResizeObserver.js","../node_modules/@restart/ui/esm/Anchor.js","../node_modules/@restart/ui/node_modules/@restart/hooks/esm/useIsomorphicEffect.js","components/PageTitle.tsx","../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/react-bootstrap/esm/BreadcrumbItem.js","../node_modules/react-bootstrap/esm/Breadcrumb.js","components/Loader.tsx","pages/charts/LineChart.tsx","pages/charts/LineGradientChart.tsx","pages/charts/StackedAreaChart.tsx","pages/charts/ColumnChart.tsx","pages/charts/ColumnDataLabelsChart.tsx","pages/charts/MixedChart.tsx","pages/charts/BarChart.tsx","pages/charts/BarChartWithNegativeValues.tsx","pages/charts/LineColumnAreaChart.tsx","pages/charts/MultipleYaxisChart.tsx","pages/charts/BubbleChart.tsx","pages/charts/ThreeDBubbleChart.tsx","pages/charts/ScatterChart.tsx","pages/charts/ScatterDateTimeChart.tsx","pages/charts/PieChart.tsx","pages/charts/DonutChart.tsx","pages/charts/DonutPatternedChart.tsx","pages/charts/RadialBarChart.tsx","pages/charts/RadialBarMultipleChart.tsx","pages/charts/CircularGuageChart.tsx","pages/charts/data.ts","pages/charts/index.tsx"],"names":["useCommittedRef","value","ref","useRef","useEffect","current","useEventCallback","fn","useCallback","apply","arguments","useEventListener","eventTarget","event","listener","capture","handler","target","addEventListener","removeEventListener","rHyphen","pascalCase","str","toUpperCase","string","replace","_","chr","slice","createWithBsPrefix","prefix","displayName","Component","defaultProps","BsComponent","React","className","bsPrefix","as","Tag","props","resolvedPrefix","useBootstrapPrefix","_jsx","classNames","usePrevious","useCallbackRef","useState","useGlobalListener","documentTarget","document","useMounted","mounted","isMounted","_excluded","useButtonProps","tagName","disabled","href","rel","onClick","tabIndex","type","meta","handleClick","trim","isTrivialHref","preventDefault","stopPropagation","role","undefined","onKeyDown","key","Button","_ref","asProp","source","excluded","i","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","assign","buttonProps","WeakMap","Anchor","handleKeyDown","e","isReactNative","global","navigator","product","isDOM","useLayoutEffect","PageTitle","title","listProps","Item","breadCrumbItems","map","item","index","active","label","path","DEVICE_SIZES","Row","decoratedBsPrefix","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","Col","spans","span","offset","order","useCol","colProps","BreadcrumbItem","children","linkAs","LinkComponent","linkProps","Breadcrumb","Loader","id","LineChart","lineChartWithData","showLoader","apexLineChartWithLablesData","name","data","data1","data2","Card","Body","style","height","position","options","chart","zoom","enabled","dataLabels","stroke","width","curve","grid","row","colors","opacity","borderColor","markers","size","xaxis","categories","text","yaxis","min","max","legend","horizontalAlign","floating","offsetY","offsetX","responsive","breakpoint","toolbar","show","series","dir","LineGradientChart","gradientLineChartData","align","fontSize","color","fill","gradient","shade","gradientToColors","shadeIntensity","opacityFrom","opacityTo","stops","strokeWidth","hover","StackedAreaChart","stackedAreaChartData","apexAreaChart2Data","data3","stacked","ColumnChart","basicColumnChartData","plotOptions","bar","horizontal","columnWidth","tooltip","y","formatter","val","ColumnDataLabelsChart","columnChartData","labels","axisBorder","axisTicks","crosshairs","colorFrom","colorTo","inverseColors","MixedChart","mixedChart1Data","apexMixedData","opposite","shared","intersect","toFixed","BarChart","basicBarChartData","BarChartWithNegativeValues","barWithNegativeData","barHeight","Math","abs","round","Number","LineColumnAreaChart","mixedChart2Data","MultipleYaxisChart","multiYaxisChartData","followCursor","BubbleChart","bubbleChartData","tickAmount","ThreeDBubbleChart","threeDBubbleChartData","data4","rotate","ScatterChart","scatterChartData","parseFloat","ScatterDateTimeChart","scatterDateTimeChartData","data5","lines","theme","x","PieChart","pieChartData","DonutChart","gradientDonutChartData","DonutPatternedChart","patternedDonutChartData","dropShadow","top","left","blur","pattern","RadialBarChart","radarChartData","radialBar","hollow","RadialBarMultipleChart","multiRadarChartData","total","w","String","CircularGuageChart","gaugeChartData","startAngle","endAngle","dashArray","generateDayWiseTimeSeries","baseval","count","yrange","floor","random","generateData","z","generateData1","baseval1","Date","getTime","ApexChart","isChatInitilized","setIsChatInitilized","window","Apex","parentHeightOffset","padding","right","Fragment","xl","xxl","md"],"mappings":"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","file":"static/js/48.aa8e90c2.chunk.js","sourcesContent":["import { useEffect, useRef } from 'react';\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded befor being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\n\nfunction useCommittedRef(value) {\n  var ref = useRef(value);\n  useEffect(function () {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\n\nexport default useCommittedRef;","import { useCallback } from 'react';\nimport useCommittedRef from './useCommittedRef';\nexport default function useEventCallback(fn) {\n  var ref = useCommittedRef(fn);\n  return useCallback(function () {\n    return ref.current && ref.current.apply(ref, arguments);\n  }, [ref]);\n}","import { useEffect } from 'react';\nimport useEventCallback from './useEventCallback';\n\n/**\n * Attaches an event handler outside directly to specified DOM element\n * bypassing the react synthetic event system.\n *\n * @param element The target to listen for events on\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */\nexport default function useEventListener(eventTarget, event, listener, capture) {\n  if (capture === void 0) {\n    capture = false;\n  }\n\n  var handler = useEventCallback(listener);\n  useEffect(function () {\n    var target = typeof eventTarget === 'function' ? eventTarget() : eventTarget;\n    target.addEventListener(event, handler, capture);\n    return function () {\n      return target.removeEventListener(event, handler, capture);\n    };\n  }, [eventTarget]);\n}","var rHyphen = /-(.)/g;\nexport default function camelize(string) {\n  return string.replace(rHyphen, function (_, chr) {\n    return chr.toUpperCase();\n  });\n}","import classNames from 'classnames';\nimport camelize from 'dom-helpers/camelize';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst pascalCase = str => str[0].toUpperCase() + camelize(str).slice(1);\n\n// TODO: emstricten & fix the typing here! `createWithBsPrefix<TElementType>...`\nexport default function createWithBsPrefix(prefix, {\n  displayName = pascalCase(prefix),\n  Component,\n  defaultProps\n} = {}) {\n  const BsComponent = /*#__PURE__*/React.forwardRef(({\n    className,\n    bsPrefix,\n    as: Tag = Component || 'div',\n    ...props\n  }, ref) => {\n    const resolvedPrefix = useBootstrapPrefix(bsPrefix, prefix);\n    return /*#__PURE__*/_jsx(Tag, {\n      ref: ref,\n      className: classNames(className, resolvedPrefix),\n      ...props\n    });\n  });\n  BsComponent.defaultProps = defaultProps;\n  BsComponent.displayName = displayName;\n  return BsComponent;\n}","import { useEffect, useRef } from 'react';\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\n\nexport default function usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}","import { useState } from 'react';\n/**\n * A convenience hook around `useState` designed to be paired with\n * the component [callback ref](https://reactjs.org/docs/refs-and-the-dom.html#callback-refs) api.\n * Callback refs are useful over `useRef()` when you need to respond to the ref being set\n * instead of lazily accessing it in an effect.\n *\n * ```ts\n * const [element, attachRef] = useCallbackRef<HTMLDivElement>()\n *\n * useEffect(() => {\n *   if (!element) return\n *\n *   const calendar = new FullCalendar.Calendar(element)\n *\n *   return () => {\n *     calendar.destroy()\n *   }\n * }, [element])\n *\n * return <div ref={attachRef} />\n * ```\n *\n * @category refs\n */\n\nexport default function useCallbackRef() {\n  return useState(null);\n}","import useEventListener from './useEventListener';\nimport { useCallback } from 'react';\n\n/**\n * Attaches an event handler outside directly to the `document`,\n * bypassing the react synthetic event system.\n *\n * ```ts\n * useGlobalListener('keydown', (event) => {\n *  console.log(event.key)\n * })\n * ```\n *\n * @param event The DOM event name\n * @param handler An event handler\n * @param capture Whether or not to listen during the capture event phase\n */\nexport default function useGlobalListener(event, handler, capture) {\n  if (capture === void 0) {\n    capture = false;\n  }\n\n  var documentTarget = useCallback(function () {\n    return document;\n  }, []);\n  return useEventListener(documentTarget, event, handler, capture);\n}","import { useRef, useEffect } from 'react';\n/**\n * Track whether a component is current mounted. Generally less preferable than\n * properlly canceling effects so they don't run after a component is unmounted,\n * but helpful in cases where that isn't feasible, such as a `Promise` resolution.\n *\n * @returns a function that returns the current isMounted state of the component\n *\n * ```ts\n * const [data, setData] = useState(null)\n * const isMounted = useMounted()\n *\n * useEffect(() => {\n *   fetchdata().then((newData) => {\n *      if (isMounted()) {\n *        setData(newData);\n *      }\n *   })\n * })\n * ```\n */\n\nexport default function useMounted() {\n  var mounted = useRef(true);\n  var isMounted = useRef(function () {\n    return mounted.current;\n  });\n  useEffect(function () {\n    return function () {\n      mounted.current = false;\n    };\n  }, []);\n  return isMounted.current;\n}","const _excluded = [\"as\", \"disabled\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n\n  const meta = {\n    tagName\n  };\n\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n\n    onClick == null ? void 0 : onClick(event);\n  };\n\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n\n  return [{\n    role: 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href: tagName === 'a' && disabled ? undefined : href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    as: asProp,\n    disabled\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","import { useState } from 'react';\nimport useEffect from './useIsomorphicEffect';\nvar targetMap = new WeakMap();\nvar resizeObserver;\n\nfunction getResizeObserver() {\n  // eslint-disable-next-line no-return-assign\n  return resizeObserver = resizeObserver || new window.ResizeObserver(function (entries) {\n    entries.forEach(function (entry) {\n      var handler = targetMap.get(entry.target);\n      if (handler) handler(entry.contentRect);\n    });\n  });\n}\n/**\n * Efficiently observe size changes on an element. Depends on the `ResizeObserver` api,\n * and polyfills are needed in older browsers.\n *\n * ```ts\n * const [ref, attachRef] = useCallbackRef(null);\n *\n * const rect = useResizeObserver(ref);\n *\n * return (\n *  <div ref={attachRef}>\n *    {JSON.stringify(rect)}\n *  </div>\n * )\n * ```\n *\n * @param element The DOM element to observe\n */\n\n\nexport default function useResizeObserver(element) {\n  var _useState = useState(null),\n      rect = _useState[0],\n      setRect = _useState[1];\n\n  useEffect(function () {\n    if (!element) return;\n    getResizeObserver().observe(element);\n    setRect(element.getBoundingClientRect());\n    targetMap.set(element, function (rect) {\n      setRect(rect);\n    });\n    return function () {\n      targetMap.delete(element);\n    };\n  }, [element]);\n  return rect;\n}","const _excluded = [\"onKeyDown\"];\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n\n/* eslint-disable jsx-a11y/anchor-has-content */\nimport * as React from 'react';\nimport { useEventCallback } from '@restart/hooks';\nimport { useButtonProps } from './Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n\n/**\n * An generic `<a>` component that covers a few A11y cases, ensuring that\n * cases where the `href` is missing or trivial like \"#\" are treated like buttons.\n */\nconst Anchor = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n    onKeyDown\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  const [buttonProps] = useButtonProps(Object.assign({\n    tagName: 'a'\n  }, props));\n  const handleKeyDown = useEventCallback(e => {\n    buttonProps.onKeyDown(e);\n    onKeyDown == null ? void 0 : onKeyDown(e);\n  });\n\n  if (isTrivialHref(props.href) && !props.role || props.role === 'button') {\n    return /*#__PURE__*/_jsx(\"a\", Object.assign({\n      ref: ref\n    }, props, buttonProps, {\n      onKeyDown: handleKeyDown\n    }));\n  }\n\n  return /*#__PURE__*/_jsx(\"a\", Object.assign({\n    ref: ref\n  }, props, {\n    onKeyDown: onKeyDown\n  }));\n});\nAnchor.displayName = 'Anchor';\nexport default Anchor;","import { useEffect, useLayoutEffect } from 'react';\nvar isReactNative = typeof global !== 'undefined' && // @ts-ignore\nglobal.navigator && // @ts-ignore\nglobal.navigator.product === 'ReactNative';\nvar isDOM = typeof document !== 'undefined';\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */\n\nexport default isDOM || isReactNative ? useLayoutEffect : useEffect;","import React from 'react';\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\n\ninterface BreadcrumbItems {\n    label: string;\n    path: string;\n    active?: boolean;\n}\n\ninterface PageTitleProps {\n    breadCrumbItems: Array<BreadcrumbItems>;\n    title: string;\n}\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <h4 className=\"page-title\">{props.title}</h4>\n                    <div className=\"page-title-right\">\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\n                            <Breadcrumb.Item href=\"/\">Shreyu</Breadcrumb.Item>\n\n                            {(props.breadCrumbItems || []).map((item, index) => {\n                                return item.active ? (\n                                    <Breadcrumb.Item active key={index}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                ) : (\n                                    <Breadcrumb.Item key={index} href={item.path}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst DEVICE_SIZES = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nexport function useCol({\n  as,\n  bsPrefix,\n  className,\n  ...props\n}) {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'col');\n  const spans = [];\n  const classes = [];\n  DEVICE_SIZES.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let span;\n    let offset;\n    let order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      ({\n        span,\n        offset,\n        order\n      } = propValue);\n    } else {\n      span = propValue;\n    }\n\n    const infix = brkPoint !== 'xs' ? `-${brkPoint}` : '';\n    if (span) spans.push(span === true ? `${bsPrefix}${infix}` : `${bsPrefix}${infix}-${span}`);\n    if (order != null) classes.push(`order${infix}-${order}`);\n    if (offset != null) classes.push(`offset${infix}-${offset}`);\n  });\n  return [{ ...props,\n    className: classNames(className, ...spans, ...classes)\n  }, {\n    as,\n    bsPrefix,\n    spans\n  }];\n}\nconst Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n(props, ref) => {\n  const [{\n    className,\n    ...colProps\n  }, {\n    as: Component = 'div',\n    bsPrefix,\n    spans\n  }] = useCol(props);\n  return /*#__PURE__*/_jsx(Component, { ...colProps,\n    ref: ref,\n    className: classNames(className, !spans.length && bsPrefix)\n  });\n});\nCol.displayName = 'Col';\nexport default Col;","import classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  active: false,\n  linkProps: {}\n};\nconst BreadcrumbItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  children,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'li',\n  linkAs: LinkComponent = Anchor,\n  linkProps,\n  href,\n  title,\n  target,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb-item');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(prefix, className, {\n      active\n    }),\n    \"aria-current\": active ? 'page' : undefined,\n    children: active ? children : /*#__PURE__*/_jsx(LinkComponent, { ...linkProps,\n      href: href,\n      title: title,\n      target: target,\n      children: children\n    })\n  });\n});\nBreadcrumbItem.displayName = 'BreadcrumbItem';\nBreadcrumbItem.defaultProps = defaultProps;\nexport default BreadcrumbItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport BreadcrumbItem from './BreadcrumbItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst defaultProps = {\n  label: 'breadcrumb',\n  listProps: {}\n};\nconst Breadcrumb = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  listProps,\n  children,\n  label,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'nav',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'breadcrumb');\n  return /*#__PURE__*/_jsx(Component, {\n    \"aria-label\": label,\n    className: className,\n    ref: ref,\n    ...props,\n    children: /*#__PURE__*/_jsx(\"ol\", { ...listProps,\n      className: classNames(prefix, listProps == null ? void 0 : listProps.className),\n      children: children\n    })\n  });\n});\nBreadcrumb.displayName = 'Breadcrumb';\nBreadcrumb.defaultProps = defaultProps;\nexport default Object.assign(Breadcrumb, {\n  Item: BreadcrumbItem\n});","import React from 'react';\n\n/**\n * Renders the preloader\n */\nconst Loader = () => {\n    return (\n        <div className=\"preloader\" id=\"preloader\">\n            <div className=\"status\" id=\"status\">\n                <div className=\"spinner\">\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Loader;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// components\nimport Loader from '../../components/Loader';\n\n// types\nimport { ApexLinearChartData } from './data';\n\ninterface LineChartProps {\n    lineChartWithData: ApexLinearChartData;\n    showLoader?: boolean;\n}\n\n// simple line chart\nconst LineChart = ({ lineChartWithData, showLoader }: LineChartProps) => {\n    // default options\n    const apexLineChartWithLables: ApexOptions = {\n        chart: {\n            height: 380,\n            type: 'line',\n            zoom: {\n                enabled: false,\n            },\n        },\n        dataLabels: {\n            enabled: true,\n        },\n        stroke: {\n            width: [3, 3],\n            curve: 'smooth',\n        },\n        grid: {\n            row: {\n                colors: ['transparent', 'transparent'], // takes an array which will be repeated on columns\n                opacity: 0.2,\n            },\n            borderColor: '#e9ecef',\n        },\n        markers: {\n            size: 6,\n        },\n        xaxis: {\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n            title: {\n                text: 'Month',\n            },\n        },\n        yaxis: {\n            title: {\n                text: 'Temperature',\n            },\n            min: 5,\n            max: 40,\n        },\n        legend: {\n            position: 'top',\n            horizontalAlign: 'right',\n            floating: true,\n            offsetY: -25,\n            offsetX: -5,\n        },\n        responsive: [\n            {\n                breakpoint: 600,\n                options: {\n                    chart: {\n                        toolbar: {\n                            show: false,\n                        },\n                    },\n                    legend: {\n                        show: false,\n                    },\n                },\n            },\n        ],\n    };\n\n    // chart data\n    const apexLineChartWithLablesData = [\n        {\n            name: 'High - 2018',\n            data: lineChartWithData.data1 || [],\n        },\n        {\n            name: 'Low - 2018',\n            data: lineChartWithData.data2 || [],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mt-0 mb-3\">Line with Data Labels</h4>\n                {showLoader ? (\n                    <div style={{ height: 380, position: 'relative' }}>\n                        <Loader />\n                    </div>\n                ) : (\n                    <Chart\n                        options={apexLineChartWithLables}\n                        series={apexLineChartWithLablesData}\n                        type=\"line\"\n                        height={380}\n                        className=\"apex-charts\"\n                        dir=\"ltr\"\n                    />\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default LineChart;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// components\nimport Loader from '../../components/Loader';\n\n// types\nimport { ApexLinearChartData } from './data';\n\ninterface LineGradientChartProps {\n    gradientLineChartData: ApexLinearChartData;\n    showLoader?: boolean;\n}\n\nconst LineGradientChart = ({ gradientLineChartData, showLoader }: LineGradientChartProps) => {\n    const options: ApexOptions = {\n        chart: {\n            height: 380,\n            type: 'line',\n        },\n        stroke: {\n            width: 5,\n            curve: 'smooth',\n        },\n        xaxis: {\n            type: 'datetime',\n            categories: [\n                '1/11/2000',\n                '2/11/2000',\n                '3/11/2000',\n                '4/11/2000',\n                '5/11/2000',\n                '6/11/2000',\n                '7/11/2000',\n                '8/11/2000',\n                '9/11/2000',\n                '10/11/2000',\n                '11/11/2000',\n                '12/11/2000',\n                '1/11/2001',\n                '2/11/2001',\n                '3/11/2001',\n                '4/11/2001',\n                '5/11/2001',\n                '6/11/2001',\n            ],\n        },\n        title: {\n            text: 'Social Media',\n            align: 'left',\n            style: {\n                fontSize: '14px',\n                color: '#666',\n            },\n        },\n        fill: {\n            type: 'gradient',\n            gradient: {\n                shade: 'dark',\n                gradientToColors: ['#43d39e'],\n                shadeIntensity: 1,\n                type: 'vertical',\n                opacityFrom: 1,\n                opacityTo: 1,\n                stops: [0, 100, 100, 100],\n            },\n        },\n        markers: {\n            size: 4,\n            colors: ['#50a5f1'],\n            strokeWidth: 2,\n            hover: {\n                size: 7,\n            },\n        },\n        yaxis: {\n            min: -10,\n            max: 40,\n            title: {\n                text: 'Engagement',\n            },\n        },\n        grid: {\n            row: {\n                colors: ['transparent', 'transparent'], // takes an array which will be repeated on columns\n                opacity: 0.2,\n            },\n            borderColor: '#185a9d',\n        },\n        responsive: [\n            {\n                breakpoint: 600,\n                options: {\n                    chart: {\n                        toolbar: {\n                            show: false,\n                        },\n                    },\n                    legend: {\n                        show: false,\n                    },\n                },\n            },\n        ],\n    };\n\n    const series = [\n        {\n            name: 'Likes',\n            data: gradientLineChartData.data || [],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mt-0 mb-3\">Gradient Line Chart</h4>\n                {showLoader ? (\n                    <div style={{ height: 380, position: 'relative' }}>\n                        <Loader />\n                    </div>\n                ) : (\n                    <Chart\n                        id=\"apex-charts-Gradient\"\n                        options={options}\n                        series={series}\n                        type=\"line\"\n                        height={380}\n                        className=\"apex-charts\"\n                        dir=\"ltr\"\n                    />\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default LineGradientChart;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// components\nimport Loader from '../../components/Loader';\n\n// types\nimport { ApexLinearChartData } from './data';\n\ninterface StackedAreaChartProps {\n    stackedAreaChartData: ApexLinearChartData;\n    showLoader?: boolean;\n}\n\n// StackedAreaChart\nconst StackedAreaChart = ({ stackedAreaChartData, showLoader }: StackedAreaChartProps) => {\n    // default options\n    const apexAreaChart2Opts: ApexOptions = {\n        chart: {\n            id: 'apexchart',\n            height: 380,\n            type: 'area',\n            stacked: true,\n        },\n        stroke: {\n            width: [3, 3, 3],\n            curve: 'smooth',\n        },\n        legend: {\n            position: 'top',\n            horizontalAlign: 'left',\n        },\n        xaxis: {\n            type: 'datetime',\n        },\n    };\n\n    // chart data\n    const apexAreaChart2Data = [\n        {\n            name: 'South',\n            data: stackedAreaChartData.data1 || [],\n        },\n        {\n            name: 'North',\n            data: stackedAreaChartData.data2 || [],\n        },\n\n        {\n            name: 'Central',\n            data: stackedAreaChartData.data3 || [],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-3\">Stacked Area</h4>\n                {showLoader ? (\n                    <div style={{ height: 380, position: 'relative' }}>\n                        <Loader />\n                    </div>\n                ) : (\n                    <Chart\n                        options={apexAreaChart2Opts}\n                        series={apexAreaChart2Data}\n                        type=\"area\"\n                        height={380}\n                        className=\"apex-charts\"\n                    />\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default StackedAreaChart;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// components\nimport Loader from '../../components/Loader';\n\n// types\nimport { ApexLinearChartData } from './data';\n\ninterface ColumnChartProps {\n    basicColumnChartData: ApexLinearChartData;\n    showLoader?: boolean;\n}\n\nconst ColumnChart = ({ basicColumnChartData, showLoader }: ColumnChartProps) => {\n    const options: ApexOptions = {\n        chart: {\n            height: 380,\n            type: 'bar',\n        },\n        plotOptions: {\n            bar: {\n                horizontal: false,\n                columnWidth: '55%',\n            },\n        },\n        stroke: {\n            show: true,\n            width: 2,\n            colors: ['transparent'],\n        },\n        xaxis: {\n            categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct'],\n        },\n        legend: {\n            offsetY: 7,\n        },\n        yaxis: {\n            title: {\n                text: '$ (thousands)',\n            },\n        },\n        grid: {\n            row: {\n                colors: ['transparent', 'transparent'], // takes an array which will be repeated on columns\n                opacity: 0.2,\n            },\n            borderColor: '#f1f3fa',\n        },\n        tooltip: {\n            y: {\n                formatter: (val: number) => {\n                    return '$ ' + val + ' thousands';\n                },\n            },\n        },\n    };\n\n    const series = [\n        {\n            name: 'Net Profit',\n            data: basicColumnChartData.data1 || [],\n        },\n        {\n            name: 'Revenue',\n            data: basicColumnChartData.data2 || [],\n        },\n        {\n            name: 'Free Cash Flow',\n            data: basicColumnChartData.data3 || [],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mt-0 mb-3\">Basic Column Chart</h4>\n                {showLoader ? (\n                    <div style={{ height: 380, position: 'relative' }}>\n                        <Loader />\n                    </div>\n                ) : (\n                    <Chart\n                        options={options}\n                        series={series}\n                        type=\"bar\"\n                        height={380}\n                        className=\"apex-charts\"\n                        dir=\"ltr\"\n                    />\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default ColumnChart;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// components\nimport Loader from '../../components/Loader';\n\n// types\nimport { ApexLinearChartData } from './data';\n\ninterface ColumnDataLabelsChartProps {\n    columnChartData: ApexLinearChartData;\n    showLoader?: boolean;\n}\n\nconst ColumnDataLabelsChart = ({ columnChartData, showLoader }: ColumnDataLabelsChartProps) => {\n    const options: ApexOptions = {\n        plotOptions: {\n            bar: {\n                dataLabels: {\n                    position: 'top', // top, center, bottom\n                },\n            },\n        },\n        dataLabels: {\n            enabled: true,\n            formatter: (val: number) => {\n                return val + '%';\n            },\n            offsetY: -30,\n            style: {\n                fontSize: '12px',\n                colors: ['#304758'],\n            },\n        },\n        xaxis: {\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            position: 'top',\n            labels: {\n                offsetY: -18,\n            },\n            axisBorder: {\n                show: false,\n            },\n            axisTicks: {\n                show: false,\n            },\n            crosshairs: {\n                fill: {\n                    type: 'gradient',\n                    gradient: {\n                        colorFrom: '#D8E3F0',\n                        colorTo: '#BED1E6',\n                        stops: [0, 100],\n                        opacityFrom: 0.4,\n                        opacityTo: 0.5,\n                    },\n                },\n            },\n            tooltip: {\n                enabled: true,\n                offsetY: -35,\n            },\n        },\n        fill: {\n            gradient: {\n                shade: 'light',\n                type: 'horizontal',\n                shadeIntensity: 0.25,\n                gradientToColors: undefined,\n                inverseColors: true,\n                opacityFrom: 1,\n                opacityTo: 1,\n                stops: [50, 0, 100, 100],\n            },\n        },\n        yaxis: {\n            axisBorder: {\n                show: false,\n            },\n            axisTicks: {\n                show: false,\n            },\n            labels: {\n                show: false,\n                formatter: (val: number) => {\n                    return val + '%';\n                },\n            },\n        },\n        title: {\n            text: 'Monthly Inflation in Argentina, 2002',\n            floating: true,\n            offsetY: 350,\n            align: 'center',\n            style: {\n                color: '#444',\n            },\n        },\n        grid: {\n            row: {\n                colors: ['transparent', 'transparent'], // takes an array which will be repeated on columns\n                opacity: 0.2,\n            },\n            borderColor: '#f1f3fa',\n        },\n    };\n\n    const series = [\n        {\n            name: 'Inflation',\n            data: columnChartData.data || [],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mt-0 mb-3\">Column Chart with Datalabels</h4>\n                {showLoader ? (\n                    <div style={{ height: 380, position: 'relative' }}>\n                        <Loader />\n                    </div>\n                ) : (\n                    <Chart\n                        options={options}\n                        series={series}\n                        type=\"bar\"\n                        height={380}\n                        className=\"apex-charts\"\n                        dir=\"ltr\"\n                    />\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default ColumnDataLabelsChart;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// components\nimport Loader from '../../components/Loader';\n\n// types\nimport { ApexLinearChartData } from './data';\n\ninterface MixedChartProps {\n    mixedChart1Data: ApexLinearChartData;\n    showLoader?: boolean;\n}\n\n// Mixed chart\nconst MixedChart = ({ mixedChart1Data, showLoader }: MixedChartProps) => {\n    // default options\n    const apexMixedOpts: ApexOptions = {\n        chart: {\n            height: 380,\n            type: 'line',\n        },\n        stroke: {\n            width: 3,\n            curve: 'smooth',\n        },\n        fill: {\n            type: 'solid',\n            opacity: [0.35, 1],\n        },\n        labels: [\n            'Dec 01',\n            'Dec 02',\n            'Dec 03',\n            'Dec 04',\n            'Dec 05',\n            'Dec 06',\n            'Dec 07',\n            'Dec 08',\n            'Dec 09 ',\n            'Dec 10',\n            'Dec 11',\n        ],\n        markers: {\n            size: 0,\n        },\n        legend: {\n            offsetY: 7,\n        },\n        yaxis: [\n            {\n                title: {\n                    text: 'Series A',\n                },\n            },\n            {\n                opposite: true,\n                title: {\n                    text: 'Series B',\n                },\n            },\n        ],\n        tooltip: {\n            shared: true,\n            intersect: false,\n            y: {\n                formatter: function (y) {\n                    if (typeof y !== 'undefined') {\n                        return y.toFixed(0) + ' points';\n                    }\n                    return y;\n                },\n            },\n        },\n    };\n\n    // chart data\n    const apexMixedData = [\n        {\n            name: 'Team A',\n            type: 'area',\n            data: mixedChart1Data.data1 || [],\n        },\n        {\n            name: 'Team B',\n            type: 'line',\n            data: mixedChart1Data.data2 || [],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-3\">Mixed Chart - Line & Area</h4>\n                {showLoader ? (\n                    <div style={{ height: 380, position: 'relative' }}>\n                        <Loader />\n                    </div>\n                ) : (\n                    <Chart\n                        options={apexMixedOpts}\n                        series={apexMixedData}\n                        type=\"line\"\n                        height={380}\n                        className=\"apex-charts\"\n                    />\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default MixedChart;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// components\nimport Loader from '../../components/Loader';\n\n// types\nimport { ApexLinearChartData } from './data';\n\ninterface BarChartProps {\n    basicBarChartData: ApexLinearChartData;\n    showLoader?: boolean;\n}\n\nconst BarChart = ({ basicBarChartData, showLoader }: BarChartProps) => {\n    const options: ApexOptions = {\n        chart: {\n            height: 380,\n            type: 'bar',\n        },\n        plotOptions: {\n            bar: {\n                horizontal: true,\n            },\n        },\n        xaxis: {\n            categories: [\n                'South Korea',\n                'Canada',\n                'United Kingdom',\n                'Netherlands',\n                'Italy',\n                'France',\n                'Japan',\n                'United States',\n                'China',\n                'Germany',\n            ],\n        },\n    };\n\n    const series = [\n        {\n            data: basicBarChartData.data || [],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mt-0 mb-3\">Basic Bar Chart</h4>\n                {showLoader ? (\n                    <div style={{ height: 380, position: 'relative' }}>\n                        <Loader />\n                    </div>\n                ) : (\n                    <Chart\n                        options={options}\n                        series={series}\n                        type=\"bar\"\n                        height={380}\n                        className=\"apex-charts\"\n                        dir=\"ltr\"\n                    />\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default BarChart;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// components\nimport Loader from '../../components/Loader';\n\n// types\nimport { ApexLinearChartData } from './data';\n\ninterface BarChartWithNegativeValuesProps {\n    showLoader?: boolean;\n    barWithNegativeData: ApexLinearChartData;\n}\n\nconst BarChartWithNegativeValues = ({ barWithNegativeData, showLoader }: BarChartWithNegativeValuesProps) => {\n    const options: ApexOptions = {\n        chart: {\n            height: 380,\n            type: 'bar',\n            stacked: true,\n        },\n        plotOptions: {\n            bar: {\n                horizontal: true,\n                barHeight: '80%',\n            },\n        },\n        grid: {\n            borderColor: '#f1f3fa',\n        },\n        yaxis: {\n            min: -5,\n            max: 5,\n        },\n        tooltip: {\n            shared: false,\n            y: {\n                formatter: function (val) {\n                    return Math.abs(val) + '%';\n                },\n            },\n        },\n        xaxis: {\n            categories: [\n                '85+',\n                '80-84',\n                '75-79',\n                '70-74',\n                '65-69',\n                '60-64',\n                '55-59',\n                '50-54',\n                '45-49',\n                '40-44',\n                '35-39',\n                '30-34',\n                '25-29',\n                '20-24',\n                '15-19',\n                '10-14',\n                '5-9',\n                '0-4',\n            ],\n            title: {\n                text: 'Percent',\n            },\n            labels: {\n                formatter: (val: string) => {\n                    return Math.abs(Math.round(Number(val))) + '%';\n                },\n            },\n        },\n        legend: {\n            offsetY: 7,\n        },\n    };\n\n    const series = [\n        {\n            name: 'Males',\n            data: barWithNegativeData.data1 || [],\n        },\n        {\n            name: 'Females',\n            data: barWithNegativeData.data2 || [],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mt-0 mb-3\">Bar with Negative Values</h4>\n                {showLoader ? (\n                    <div style={{ height: 380, position: 'relative' }}>\n                        <Loader />\n                    </div>\n                ) : (\n                    <Chart\n                        options={options}\n                        series={series}\n                        type=\"bar\"\n                        height={380}\n                        className=\"apex-charts\"\n                        dir=\"ltr\"\n                    />\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default BarChartWithNegativeValues;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// components\nimport Loader from '../../components/Loader';\n\n// types\nimport { ApexLinearChartData } from './data';\n\ninterface LineColumnAreaChartProps {\n    mixedChart2Data: ApexLinearChartData;\n    showLoader?: boolean;\n}\n\nconst LineColumnAreaChart = ({ mixedChart2Data, showLoader }: LineColumnAreaChartProps) => {\n    const options: ApexOptions = {\n        chart: {\n            stacked: false,\n        },\n        stroke: {\n            width: [0, 2, 4],\n            curve: 'smooth',\n        },\n        plotOptions: {\n            bar: {\n                columnWidth: '50%',\n            },\n        },\n        fill: {\n            opacity: [0.85, 0.25, 1],\n            gradient: {\n                inverseColors: false,\n                shade: 'light',\n                type: 'vertical',\n                opacityFrom: 0.85,\n                opacityTo: 0.55,\n                stops: [0, 100, 100, 100],\n            },\n        },\n        labels: [\n            '01/01/2003',\n            '02/01/2003',\n            '03/01/2003',\n            '04/01/2003',\n            '05/01/2003',\n            '06/01/2003',\n            '07/01/2003',\n            '08/01/2003',\n            '09/01/2003',\n            '10/01/2003',\n            '11/01/2003',\n        ],\n        markers: {\n            size: 0,\n        },\n        legend: {\n            offsetY: 7,\n        },\n        xaxis: {\n            type: 'datetime',\n        },\n        yaxis: {\n            title: {\n                text: 'Points',\n            },\n        },\n        tooltip: {\n            shared: true,\n            intersect: false,\n            y: {\n                formatter: function (y) {\n                    if (typeof y !== 'undefined') {\n                        return y.toFixed(0) + ' points';\n                    }\n                    return y;\n                },\n            },\n        },\n        grid: {\n            borderColor: '#f1f3fa',\n        },\n    };\n\n    const series = [\n        {\n            name: 'Team A',\n            type: 'column',\n            data: mixedChart2Data.data1 || [],\n        },\n        {\n            name: 'Team B',\n            type: 'area',\n            data: mixedChart2Data.data2 || [],\n        },\n        {\n            name: 'Team C',\n            type: 'line',\n            data: mixedChart2Data.data3 || [],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mt-0 mb-3\">Line, Column & Area Chart</h4>\n                {showLoader ? (\n                    <div style={{ height: 380, position: 'relative' }}>\n                        <Loader />\n                    </div>\n                ) : (\n                    <Chart\n                        options={options}\n                        series={series}\n                        type=\"line\"\n                        height={380}\n                        className=\"apex-charts\"\n                        dir=\"ltr\"\n                    />\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default LineColumnAreaChart;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// components\nimport Loader from '../../components/Loader';\n\n// types\nimport { ApexLinearChartData } from './data';\n\ninterface MultipleYaxisChartProps {\n    multiYaxisChartData: ApexLinearChartData;\n    showLoader?: boolean;\n}\n\nconst MultipleYaxisChart = ({ multiYaxisChartData, showLoader }: MultipleYaxisChartProps) => {\n    const options: ApexOptions = {\n        chart: {\n            stacked: false,\n        },\n        stroke: {\n            width: [0, 0, 3],\n        },\n        xaxis: {\n            categories: [2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016],\n        },\n        yaxis: [\n            {\n                axisTicks: {\n                    show: true,\n                },\n                axisBorder: {\n                    show: true,\n                    color: '#675db7',\n                },\n                labels: {\n                    style: {\n                        colors: ['#675db7'],\n                    },\n                },\n                title: {\n                    text: 'Income (thousand crores)',\n                },\n            },\n\n            {\n                axisTicks: {\n                    show: true,\n                },\n                axisBorder: {\n                    show: true,\n                    color: '#23b397',\n                },\n                labels: {\n                    style: {\n                        colors: ['#23b397'],\n                    },\n                    offsetX: 10,\n                },\n                title: {\n                    text: 'Operating Cashflow (thousand crores)',\n                },\n            },\n            {\n                opposite: true,\n                axisTicks: {\n                    show: true,\n                },\n                axisBorder: {\n                    show: true,\n                    color: '#e36498',\n                },\n                labels: {\n                    style: {\n                        colors: ['#e36498'],\n                    },\n                },\n                title: {\n                    text: 'Revenue (thousand crores)',\n                },\n            },\n        ],\n        tooltip: {\n            followCursor: true,\n            y: {\n                formatter: function (y) {\n                    if (typeof y !== 'undefined') {\n                        return y + ' thousand crores';\n                    }\n                    return y;\n                },\n            },\n        },\n        grid: {\n            borderColor: '#f1f3fa',\n        },\n        legend: {\n            offsetY: 7,\n        },\n        responsive: [\n            {\n                breakpoint: 600,\n                options: {\n                    yaxis: {\n                        show: false,\n                    },\n                    legend: {\n                        show: false,\n                    },\n                },\n            },\n        ],\n    };\n\n    const series = [\n        {\n            name: 'Income',\n            type: 'column',\n            data: multiYaxisChartData.data1 || [],\n        },\n        {\n            name: 'Cashflow',\n            type: 'column',\n            data: multiYaxisChartData.data2 || [],\n        },\n        {\n            name: 'Revenue',\n            type: 'line',\n            data: multiYaxisChartData.data3 || [],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mt-0 mb-3\">Multiple Y-Axis Chart</h4>\n                {showLoader ? (\n                    <div style={{ height: 380, position: 'relative' }}>\n                        <Loader />\n                    </div>\n                ) : (\n                    <Chart\n                        options={options}\n                        series={series}\n                        type=\"line\"\n                        height={380}\n                        className=\"apex-charts\"\n                        dir=\"ltr\"\n                    />\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default MultipleYaxisChart;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// components\nimport Loader from '../../components/Loader';\n\n// types\nimport { ApexLinearChartData } from './data';\n\ninterface BubbleChartProps {\n    bubbleChartData: ApexLinearChartData;\n    showLoader?: boolean;\n}\n\nconst BubbleChart = ({ bubbleChartData, showLoader }: BubbleChartProps) => {\n    const options: ApexOptions = {\n        fill: {\n            opacity: 0.8,\n        },\n        xaxis: {\n            tickAmount: 12,\n            type: 'category',\n        },\n        yaxis: {\n            max: 70,\n        },\n        grid: {\n            borderColor: '#f1f3fa',\n        },\n        legend: {\n            offsetY: 7,\n        },\n    };\n\n    const series = [\n        {\n            name: 'Bubble 1',\n            data: bubbleChartData.data1 || [],\n        },\n        {\n            name: 'Bubble 2',\n            data: bubbleChartData.data2 || [],\n        },\n        {\n            name: 'Bubble 3',\n            data: bubbleChartData.data3 || [],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mt-0 mb-3\">Simple Bubble Chart</h4>\n                {showLoader ? (\n                    <div style={{ height: 380, position: 'relative' }}>\n                        <Loader />\n                    </div>\n                ) : (\n                    <Chart\n                        options={options}\n                        series={series}\n                        type=\"bubble\"\n                        height={380}\n                        className=\"apex-charts\"\n                        dir=\"ltr\"\n                    />\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default BubbleChart;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// components\nimport Loader from '../../components/Loader';\n\n// types\nimport { ApexLinearChartData } from './data';\n\ninterface ThreeDBubbleChartProps {\n    threeDBubbleChartData: ApexLinearChartData;\n    showLoader?: boolean;\n}\n\nconst ThreeDBubbleChart = ({ threeDBubbleChartData, showLoader }: ThreeDBubbleChartProps) => {\n    const options: ApexOptions = {\n        fill: {\n            type: 'gradient',\n        },\n        xaxis: {\n            tickAmount: 12,\n            type: 'datetime',\n            labels: {\n                rotate: 0,\n            },\n        },\n        yaxis: {\n            max: 70,\n        },\n        legend: {\n            offsetY: 7,\n        },\n        grid: {\n            borderColor: '#f1f3fa',\n        },\n    };\n\n    const series = [\n        {\n            name: 'Product 1',\n            data: threeDBubbleChartData.data1 || [],\n        },\n        {\n            name: 'Product 2',\n            data: threeDBubbleChartData.data2 || [],\n        },\n        {\n            name: 'Product 3',\n            data: threeDBubbleChartData.data3 || [],\n        },\n        {\n            name: 'Product 4',\n            data: threeDBubbleChartData.data4 || [],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mt-0 mb-3\">3D Bubble Chart</h4>\n                {showLoader ? (\n                    <div style={{ height: 380, position: 'relative' }}>\n                        <Loader />\n                    </div>\n                ) : (\n                    <Chart\n                        options={options}\n                        series={series}\n                        type=\"bubble\"\n                        height={380}\n                        className=\"apex-charts\"\n                        dir=\"ltr\"\n                    />\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default ThreeDBubbleChart;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// components\nimport Loader from '../../components/Loader';\n\n// types\nimport { ApexLinearChartData } from './data';\n\ninterface ScatterChartProps {\n    scatterChartData: ApexLinearChartData;\n    showLoader?: boolean;\n}\n\nconst ScatterChart = ({ scatterChartData, showLoader }: ScatterChartProps) => {\n    const options: ApexOptions = {\n        chart: {\n            zoom: {\n                enabled: false,\n            },\n        },\n        xaxis: {\n            tickAmount: 10,\n            labels: {\n                formatter: (val) => {\n                    return parseFloat(val).toFixed(1);\n                },\n            },\n        },\n        yaxis: {\n            tickAmount: 7,\n        },\n        grid: {\n            borderColor: '#f1f3fa',\n        },\n        legend: {\n            offsetY: 7,\n        },\n        responsive: [\n            {\n                breakpoint: 600,\n                options: {\n                    chart: {\n                        toolbar: {\n                            show: false,\n                        },\n                    },\n                    legend: {\n                        show: false,\n                    },\n                },\n            },\n        ],\n    };\n\n    const series = [\n        {\n            name: 'Sample A',\n            data: scatterChartData.data1 || [],\n        },\n        {\n            name: 'Sample B',\n            data: scatterChartData.data2 || [],\n        },\n        {\n            name: 'Sample C',\n            data: scatterChartData.data3 || [],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mt-0 mb-3\">Scatter (XY) Chart</h4>\n                {showLoader ? (\n                    <div style={{ height: 380, position: 'relative' }}>\n                        <Loader />\n                    </div>\n                ) : (\n                    <Chart\n                        options={options}\n                        series={series}\n                        type=\"scatter\"\n                        height={380}\n                        className=\"apex-charts\"\n                        dir=\"ltr\"\n                    />\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default ScatterChart;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// components\nimport Loader from '../../components/Loader';\n\n// types\nimport { ApexLinearChartData } from './data';\n\ninterface ScatterDateTimeChartProps {\n    scatterDateTimeChartData: ApexLinearChartData;\n    showLoader?: boolean;\n}\n\nconst ScatterDateTimeChart = ({ scatterDateTimeChartData, showLoader }: ScatterDateTimeChartProps) => {\n    const options: ApexOptions = {\n        chart: {\n            zoom: {\n                type: 'xy',\n            },\n        },\n        grid: {\n            borderColor: '#f1f3fa',\n            xaxis: {\n                lines: {\n                    show: true,\n                },\n            },\n            yaxis: {\n                lines: {\n                    show: true,\n                },\n            },\n        },\n        legend: {\n            offsetY: 7,\n        },\n        xaxis: {\n            type: 'datetime',\n        },\n        yaxis: {\n            max: 70,\n        },\n        tooltip: {\n            theme: 'dark',\n            x: {\n                show: false,\n            },\n        },\n        responsive: [\n            {\n                breakpoint: 600,\n                options: {\n                    chart: {\n                        toolbar: {\n                            show: false,\n                        },\n                    },\n                    legend: {\n                        show: false,\n                    },\n                },\n            },\n        ],\n    };\n\n    const series = [\n        {\n            name: 'Team 1',\n            data: scatterDateTimeChartData.data1 || [],\n        },\n        {\n            name: 'Team 2',\n            data: scatterDateTimeChartData.data2 || [],\n        },\n        {\n            name: 'Team 3',\n            data: scatterDateTimeChartData.data3 || [],\n        },\n        {\n            name: 'Team 4',\n            data: scatterDateTimeChartData.data4 || [],\n        },\n        {\n            name: 'Team 5',\n            data: scatterDateTimeChartData.data5 || [],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mt-0 mb-3\">Scatter Chart - Datetime</h4>\n                {showLoader ? (\n                    <div style={{ height: 380, position: 'relative' }}>\n                        <Loader />\n                    </div>\n                ) : (\n                    <Chart\n                        options={options}\n                        series={series}\n                        type=\"scatter\"\n                        height={380}\n                        className=\"apex-charts\"\n                        dir=\"ltr\"\n                    />\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default ScatterDateTimeChart;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// components\nimport Loader from '../../components/Loader';\n\n// types\nimport { ApexLinearChartData } from './data';\n\ninterface PieChartProps {\n    pieChartData: ApexLinearChartData;\n    showLoader?: boolean;\n}\n\nconst PieChart = ({ pieChartData, showLoader }: PieChartProps) => {\n    const options: ApexOptions = {\n        labels: ['Series 1', 'Series 2', 'Series 3', 'Series 4', 'Series 5'],\n        legend: {\n            show: true,\n            position: 'bottom',\n            horizontalAlign: 'center',\n            floating: false,\n            fontSize: '14px',\n            offsetX: 0,\n            offsetY: 7,\n        },\n        responsive: [\n            {\n                breakpoint: 600,\n                options: {\n                    chart: {\n                        height: 240,\n                    },\n                    legend: {\n                        show: false,\n                    },\n                },\n            },\n        ],\n    };\n\n    const series = pieChartData.data || [];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mt-0 mb-3\">Simple Pie Chart</h4>\n\n                {showLoader ? (\n                    <div style={{ height: 320, position: 'relative' }}>\n                        <Loader />\n                    </div>\n                ) : (\n                    <Chart\n                        options={options}\n                        series={series}\n                        type=\"pie\"\n                        height={320}\n                        className=\"apex-charts\"\n                        dir=\"ltr\"\n                    />\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default PieChart;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// components\nimport Loader from '../../components/Loader';\n\n// types\nimport { ApexLinearChartData } from './data';\n\ninterface DonutChartProps {\n    gradientDonutChartData: ApexLinearChartData;\n    showLoader?: boolean;\n}\n\nconst DonutChart = ({ gradientDonutChartData, showLoader }: DonutChartProps) => {\n    const options: ApexOptions = {\n        legend: {\n            show: true,\n            position: 'bottom',\n            horizontalAlign: 'center',\n            floating: false,\n            fontSize: '14px',\n            offsetX: 0,\n            offsetY: 7,\n        },\n        labels: ['Series 1', 'Series 2', 'Series 3', 'Series 4', 'Series 5'],\n        responsive: [\n            {\n                breakpoint: 600,\n                options: {\n                    chart: {\n                        height: 240,\n                    },\n                    legend: {\n                        show: false,\n                    },\n                },\n            },\n        ],\n        fill: {\n            type: 'gradient',\n        },\n    };\n\n    const series = gradientDonutChartData.data || [];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mt-0 mb-3\">Gradient Donut Chart</h4>\n                {showLoader ? (\n                    <div style={{ height: 320, position: 'relative' }}>\n                        <Loader />\n                    </div>\n                ) : (\n                    <Chart\n                        options={options}\n                        series={series}\n                        type=\"donut\"\n                        height={320}\n                        className=\"apex-charts\"\n                        dir=\"ltr\"\n                    />\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default DonutChart;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// components\nimport Loader from '../../components/Loader';\n\n// types\nimport { ApexLinearChartData } from './data';\n\ninterface DonutPatternedChartProps {\n    patternedDonutChartData: ApexLinearChartData;\n    showLoader?: boolean;\n}\n\nconst DonutPatternedChart = ({ patternedDonutChartData, showLoader }: DonutPatternedChartProps) => {\n    const options: ApexOptions = {\n        chart: {\n            dropShadow: {\n                enabled: true,\n                color: '#111',\n                top: -1,\n                left: 3,\n                blur: 3,\n                opacity: 0.2,\n            },\n        },\n        stroke: {\n            show: true,\n            width: 2,\n        },\n        labels: ['Comedy', 'Action', 'SciFi', 'Drama', 'Horror'],\n        fill: {\n            type: 'pattern',\n            opacity: 1,\n            pattern: {\n                style: ['verticalLines', 'squares', 'horizontalLines', 'circles', 'slantedLines'],\n            },\n        },\n        legend: {\n            show: true,\n            position: 'bottom',\n            horizontalAlign: 'center',\n            floating: false,\n            fontSize: '14px',\n            offsetX: 0,\n            offsetY: 7,\n        },\n        responsive: [\n            {\n                breakpoint: 600,\n                options: {\n                    chart: {\n                        height: 240,\n                    },\n                    legend: {\n                        show: false,\n                    },\n                },\n            },\n        ],\n    };\n\n    const series = patternedDonutChartData.data || [];\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mt-0 mb-3\">Patterned Donut Chart</h4>\n                {showLoader ? (\n                    <div style={{ height: 320, position: 'relative' }}>\n                        <Loader />\n                    </div>\n                ) : (\n                    <Chart\n                        options={options}\n                        series={series}\n                        type=\"donut\"\n                        height={320}\n                        className=\"apex-charts\"\n                        dir=\"ltr\"\n                    />\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default DonutPatternedChart;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// components\nimport Loader from '../../components/Loader';\n\n// types\nimport { ApexLinearChartData } from './data';\n\ninterface RadialBarChartProps {\n    radarChartData: ApexLinearChartData;\n    showLoader?: boolean;\n}\n\nconst RadialBarChart = ({ radarChartData, showLoader }: RadialBarChartProps) => {\n    const options: ApexOptions = {\n        plotOptions: {\n            radialBar: {\n                hollow: {\n                    size: '70%',\n                },\n            },\n        },\n        colors: ['#50a5f1'],\n        labels: ['CRICKET'],\n    };\n\n    const series = radarChartData.data || [];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mt-0 mb-3\">Basic RadialBar Chart</h4>\n                {showLoader ? (\n                    <div style={{ height: 350, position: 'relative' }}>\n                        <Loader />\n                    </div>\n                ) : (\n                    <Chart\n                        options={options}\n                        series={series}\n                        type=\"radialBar\"\n                        height={350}\n                        className=\"apex-charts\"\n                        dir=\"ltr\"\n                    />\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default RadialBarChart;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// components\nimport Loader from '../../components/Loader';\n\n// types\nimport { ApexLinearChartData } from './data';\n\ninterface RadialBarMultipleChartProps {\n    multiRadarChartData: ApexLinearChartData;\n    showLoader?: boolean;\n}\n\nconst RadialBarMultipleChart = ({ multiRadarChartData, showLoader }: RadialBarMultipleChartProps) => {\n    const options: ApexOptions = {\n        plotOptions: {\n            radialBar: {\n                dataLabels: {\n                    name: {\n                        fontSize: '22px',\n                    },\n                    value: {\n                        fontSize: '16px',\n                    },\n                    total: {\n                        show: true,\n                        label: 'Total',\n                        formatter: (w: number) => {\n                            // By default this function returns the average of all series. The below is just an example to show the use of custom formatter function\n                            return String(249);\n                        },\n                    },\n                },\n            },\n        },\n        labels: ['Apples', 'Oranges', 'Bananas', 'Berries'],\n    };\n\n    const series = multiRadarChartData.data || [];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mt-0 mb-3\">Multiple RadialBars</h4>\n                {showLoader ? (\n                    <div style={{ height: 350, position: 'relative' }}>\n                        <Loader />\n                    </div>\n                ) : (\n                    <Chart\n                        options={options}\n                        series={series}\n                        type=\"radialBar\"\n                        height={350}\n                        className=\"apex-charts\"\n                        dir=\"ltr\"\n                    />\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default RadialBarMultipleChart;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// components\nimport Loader from '../../components/Loader';\n\n// types\nimport { ApexLinearChartData } from './data';\n\ninterface CircularGuageChartProps {\n    gaugeChartData: ApexLinearChartData;\n    showLoader?: boolean;\n}\n\nconst CircularGuageChart = ({ gaugeChartData, showLoader }: CircularGuageChartProps) => {\n    const options: ApexOptions = {\n        plotOptions: {\n            radialBar: {\n                startAngle: -135,\n                endAngle: 135,\n                dataLabels: {\n                    name: {\n                        fontSize: '16px',\n                        color: undefined,\n                        offsetY: 120,\n                    },\n                    value: {\n                        offsetY: 76,\n                        fontSize: '22px',\n                        color: undefined,\n                        formatter: function (val) {\n                            return val + '%';\n                        },\n                    },\n                },\n            },\n        },\n        fill: {\n            gradient: {\n                shade: 'dark',\n                shadeIntensity: 0.15,\n                inverseColors: false,\n                opacityFrom: 1,\n                opacityTo: 1,\n                stops: [0, 50, 65, 91],\n            },\n        },\n        stroke: {\n            dashArray: 4,\n        },\n        colors: ['#f46a6a'],\n        labels: ['Median Ratio'],\n        responsive: [\n            {\n                breakpoint: 380,\n                options: {\n                    chart: {\n                        height: 280,\n                    },\n                },\n            },\n        ],\n    };\n\n    const series = gaugeChartData.data || [];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mt-0 mb-3\">Multiple RadialBars</h4>\n                {showLoader ? (\n                    <div style={{ height: 350, position: 'relative' }}>\n                        <Loader />\n                    </div>\n                ) : (\n                    <Chart\n                        options={options}\n                        series={series}\n                        type=\"radialBar\"\n                        height={350}\n                        className=\"apex-charts\"\n                        dir=\"ltr\"\n                    />\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default CircularGuageChart;\n","export interface Range {\n    min: number;\n    max: number;\n}\nexport interface Point {\n    x: number;\n    y: number;\n}\nexport interface ApexLinearChartData {\n    [key: string]: number[] | Point[] | [number, number][];\n}\nexport interface ApexNonLinearChartData {\n    [key: string]: number[];\n}\n\n/**\n * Utilit function to generate day wise series\n * @param {*} baseval\n * @param {*} count\n * @param {*} yrange\n */\nfunction generateDayWiseTimeSeries(baseval: number, count: number, yrange: Range): Point[] {\n    let i = 0;\n    let series: Point[] = [];\n    while (i < count) {\n        let x = baseval;\n        let y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n\n        series.push({ x, y });\n        baseval += 86400000;\n        i++;\n    }\n    return series;\n}\n\n/**\n * Generates the data\n * @param {*} baseval\n * @param {*} count\n * @param {*} yrange\n */\nfunction generateData(baseval: number, count: number, yrange: Range): any[] {\n    let i = 0;\n    let series = [];\n    while (i < count) {\n        let x = Math.floor(Math.random() * (750 - 1 + 1)) + 1;\n        let y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n        let z = Math.floor(Math.random() * (75 - 15 + 1)) + 15;\n\n        series.push([x, y, z]);\n        baseval += 86400000;\n        i++;\n    }\n    return series;\n}\n\n/**\n * Generates the alt data\n * @param {*} baseval1\n * @param {*} count\n * @param {*} yrange\n */\nfunction generateData1(baseval1: number, count: number, yrange: Range): any[] {\n    let i = 0;\n    let series = [];\n    while (i < count) {\n        //let x =Math.floor(Math.random() * (750 - 1 + 1)) + 1;;\n        let y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n        let z = Math.floor(Math.random() * (75 - 15 + 1)) + 15;\n\n        series.push([baseval1, y, z]);\n        baseval1 += 86400000;\n        i++;\n    }\n    return series;\n}\n\n// chart options\nconst lineChartWithData: ApexLinearChartData = {\n    data1: [28, 29, 33, 36, 32, 32, 33],\n    data2: [12, 11, 14, 18, 17, 13, 13],\n};\n\nconst gradientLineChartData: ApexLinearChartData = {\n    data: [4, 3, 10, 9, 29, 19, 22, 9, 12, 7, 19, 5, 13, 9, 17, 2, 7, 5],\n};\n\nconst stackedAreaChartData: ApexLinearChartData = {\n    data1: generateDayWiseTimeSeries(new Date('11 Feb 2019 GMT').getTime(), 20, {\n        min: 10,\n        max: 60,\n    }),\n\n    data2: generateDayWiseTimeSeries(new Date('11 Feb 2019 GMT').getTime(), 20, {\n        min: 10,\n        max: 20,\n    }),\n\n    data3: generateDayWiseTimeSeries(new Date('11 Feb 2019 GMT').getTime(), 20, {\n        min: 10,\n        max: 15,\n    }),\n};\n\nconst basicColumnChartData: ApexLinearChartData = {\n    data1: [44, 55, 57, 56, 61, 58, 63, 60, 66],\n    data2: [76, 85, 101, 98, 87, 105, 91, 114, 94],\n    data3: [35, 41, 36, 26, 45, 48, 52, 53, 41],\n};\n\nconst columnChartData: ApexLinearChartData = {\n    data: [2.3, 3.1, 4.0, 10.1, 4.0, 3.6, 3.2, 2.3, 1.4, 0.8, 0.5, 0.2],\n};\n\nconst mixedChart1Data: ApexLinearChartData = {\n    data1: [44, 55, 31, 47, 31, 43, 26, 41, 31, 47, 33],\n    data2: [55, 69, 45, 61, 43, 54, 37, 52, 44, 61, 43],\n};\n\nconst basicBarChartData: ApexLinearChartData = {\n    data: [400, 430, 448, 470, 540, 580, 690, 1100, 1200, 1380],\n};\n\nconst barWithNegativeData: ApexLinearChartData = {\n    data1: [0.4, 0.65, 0.76, 0.88, 1.5, 2.1, 2.9, 3.8, 3.9, 4.2, 4, 4.3, 4.1, 4.2, 4.5, 3.9, 3.5, 3],\n    data2: [\n        -0.8, -1.05, -1.06, -1.18, -1.4, -2.2, -2.85, -3.7, -3.96, -4.22, -4.3, -4.4, -4.1, -4, -4.1, -3.4, -3.1, -2.8,\n    ],\n};\n\nconst mixedChart2Data: ApexLinearChartData = {\n    data1: [23, 11, 22, 27, 13, 22, 37, 21, 44, 22, 30],\n    data2: [44, 55, 41, 67, 22, 43, 21, 41, 56, 27, 43],\n    data3: [30, 25, 36, 30, 45, 35, 64, 52, 59, 36, 39],\n};\n\nconst multiYaxisChartData: ApexLinearChartData = {\n    data1: [1.4, 2, 2.5, 1.5, 2.5, 2.8, 3.8, 4.6],\n    data2: [1.1, 3, 3.1, 4, 4.1, 4.9, 6.5, 8.5],\n    data3: [20, 29, 37, 36, 44, 45, 50, 58],\n};\n\nconst bubbleChartData: ApexLinearChartData = {\n    data1: generateData(new Date('11 Feb 2017 GMT').getTime(), 20, {\n        min: 10,\n        max: 60,\n    }),\n\n    data2: generateData(new Date('11 Feb 2017 GMT').getTime(), 20, {\n        min: 10,\n        max: 60,\n    }),\n    data3: generateData(new Date('11 Feb 2017 GMT').getTime(), 20, {\n        min: 10,\n        max: 60,\n    }),\n};\n\nconst threeDBubbleChartData: ApexLinearChartData = {\n    data1: generateData1(new Date('11 Feb 2017 GMT').getTime(), 20, {\n        min: 10,\n        max: 60,\n    }),\n\n    data2: generateData1(new Date('11 Feb 2017 GMT').getTime(), 20, {\n        min: 10,\n        max: 60,\n    }),\n\n    data3: generateData1(new Date('11 Feb 2017 GMT').getTime(), 20, {\n        min: 10,\n        max: 60,\n    }),\n\n    data4: generateData1(new Date('11 Feb 2017 GMT').getTime(), 20, {\n        min: 10,\n        max: 60,\n    }),\n};\n\nconst scatterChartData: ApexLinearChartData = {\n    data1: [\n        [16.4, 5.4],\n        [21.7, 2],\n        [25.4, 3],\n        [19, 2],\n        [10.9, 1],\n        [13.6, 3.2],\n        [10.9, 7.4],\n        [10.9, 0],\n        [10.9, 8.2],\n        [16.4, 0],\n        [16.4, 1.8],\n        [13.6, 0.3],\n        [13.6, 0],\n        [29.9, 0],\n        [27.1, 2.3],\n        [16.4, 0],\n        [13.6, 3.7],\n        [10.9, 5.2],\n        [16.4, 6.5],\n        [10.9, 0],\n        [24.5, 7.1],\n        [10.9, 0],\n        [8.1, 4.7],\n        [19, 0],\n        [21.7, 1.8],\n        [27.1, 0],\n        [24.5, 0],\n        [27.1, 0],\n        [29.9, 1.5],\n        [27.1, 0.8],\n        [22.1, 2],\n    ],\n    data2: [\n        [6.4, 13.4],\n        [1.7, 11],\n        [5.4, 8],\n        [9, 17],\n        [1.9, 4],\n        [3.6, 12.2],\n        [1.9, 14.4],\n        [1.9, 9],\n        [1.9, 13.2],\n        [1.4, 7],\n        [6.4, 8.8],\n        [3.6, 4.3],\n        [1.6, 10],\n        [9.9, 2],\n        [7.1, 15],\n        [1.4, 0],\n        [3.6, 13.7],\n        [1.9, 15.2],\n        [6.4, 16.5],\n        [0.9, 10],\n        [4.5, 17.1],\n        [10.9, 10],\n        [0.1, 14.7],\n        [9, 10],\n        [12.7, 11.8],\n        [2.1, 10],\n        [2.5, 10],\n        [27.1, 10],\n        [2.9, 11.5],\n        [7.1, 10.8],\n        [2.1, 12],\n    ],\n    data3: [\n        [21.7, 3],\n        [23.6, 3.5],\n        [24.6, 3],\n        [29.9, 3],\n        [21.7, 20],\n        [23, 2],\n        [10.9, 3],\n        [28, 4],\n        [27.1, 0.3],\n        [16.4, 4],\n        [13.6, 0],\n        [19, 5],\n        [22.4, 3],\n        [24.5, 3],\n        [32.6, 3],\n        [27.1, 4],\n        [29.6, 6],\n        [31.6, 8],\n        [21.6, 5],\n        [20.9, 4],\n        [22.4, 0],\n        [32.6, 10.3],\n        [29.7, 20.8],\n        [24.5, 0.8],\n        [21.4, 0],\n        [21.7, 6.9],\n        [28.6, 7.7],\n        [15.4, 0],\n        [18.1, 0],\n        [33.4, 0],\n        [16.4, 0],\n    ],\n};\n\nconst scatterDateTimeChartData: ApexLinearChartData = {\n    data1: generateDayWiseTimeSeries(new Date('11 Feb 2017 GMT').getTime(), 20, {\n        min: 10,\n        max: 60,\n    }),\n\n    data2: generateDayWiseTimeSeries(new Date('11 Feb 2017 GMT').getTime(), 20, {\n        min: 10,\n        max: 60,\n    }),\n    data3: generateDayWiseTimeSeries(new Date('11 Feb 2017 GMT').getTime(), 30, {\n        min: 10,\n        max: 60,\n    }),\n    data4: generateDayWiseTimeSeries(new Date('11 Feb 2017 GMT').getTime(), 10, {\n        min: 10,\n        max: 60,\n    }),\n    data5: generateDayWiseTimeSeries(new Date('11 Feb 2017 GMT').getTime(), 30, {\n        min: 10,\n        max: 60,\n    }),\n};\n\nconst pieChartData: ApexNonLinearChartData = {\n    data: [44, 55, 41, 17, 15],\n};\n\nconst gradientDonutChartData: ApexNonLinearChartData = {\n    data: [44, 55, 41, 17, 15],\n};\n\nconst patternedDonutChartData: ApexNonLinearChartData = {\n    data: [44, 55, 41, 17, 15],\n};\n\nconst radarChartData: ApexNonLinearChartData = {\n    data: [70],\n};\n\nconst multiRadarChartData: ApexNonLinearChartData = {\n    data: [44, 55, 67, 83],\n};\n\nconst gaugeChartData: ApexNonLinearChartData = {\n    data: [67],\n};\n\nexport {\n    lineChartWithData,\n    gradientLineChartData,\n    stackedAreaChartData,\n    barWithNegativeData,\n    basicBarChartData,\n    bubbleChartData,\n    basicColumnChartData,\n    columnChartData,\n    mixedChart1Data,\n    mixedChart2Data,\n    multiYaxisChartData,\n    threeDBubbleChartData,\n    scatterChartData,\n    scatterDateTimeChartData,\n    pieChartData,\n    patternedDonutChartData,\n    gaugeChartData,\n    gradientDonutChartData,\n    radarChartData,\n    multiRadarChartData,\n};\n","import React, { useEffect, useState } from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\n// components\nimport PageTitle from '../../components/PageTitle';\n\nimport LineChart from './LineChart';\nimport LineGradientChart from './LineGradientChart';\nimport StackedAreaChart from './StackedAreaChart';\nimport ColumnChart from './ColumnChart';\nimport ColumnDataLabelsChart from './ColumnDataLabelsChart';\nimport MixedChart from './MixedChart';\nimport BarChart from './BarChart';\nimport BarChartWithNegativeValues from './BarChartWithNegativeValues';\nimport LineColumnAreaChart from './LineColumnAreaChart';\nimport MultipleYaxisChart from './MultipleYaxisChart';\nimport BubbleChart from './BubbleChart';\nimport ThreeDBubbleChart from './ThreeDBubbleChart';\nimport ScatterChart from './ScatterChart';\nimport ScatterDateTimeChart from './ScatterDateTimeChart';\nimport PieChart from './PieChart';\nimport DonutChart from './DonutChart';\nimport DonutPatternedChart from './DonutPatternedChart';\nimport RadialBarChart from './RadialBarChart';\nimport RadialBarMultipleChart from './RadialBarMultipleChart';\nimport CircularGuageChart from './CircularGuageChart';\n\n// dummy data\nimport {\n    lineChartWithData,\n    gradientLineChartData,\n    stackedAreaChartData,\n    basicColumnChartData,\n    columnChartData,\n    mixedChart1Data,\n    basicBarChartData,\n    barWithNegativeData,\n    mixedChart2Data,\n    multiYaxisChartData,\n    bubbleChartData,\n    threeDBubbleChartData,\n    scatterChartData,\n    scatterDateTimeChartData,\n    pieChartData,\n    gradientDonutChartData,\n    patternedDonutChartData,\n    radarChartData,\n    multiRadarChartData,\n    gaugeChartData,\n} from './data';\n\nconst ApexChart = () => {\n    const [isChatInitilized, setIsChatInitilized] = useState<boolean>(false);\n\n    useEffect(() => {\n        // set deafult config of apex chart\n        if ((window as any).Apex) {\n            (window as any).Apex = {\n                chart: {\n                    parentHeightOffset: 0,\n                    toolbar: {\n                        show: false,\n                    },\n                },\n                grid: {\n                    padding: {\n                        left: 20,\n                        right: 0,\n                    },\n                },\n                colors: ['#5369F8', '#43D39E', '#F77E53', '#1CE1AC', '#25C2E3', '#FFBE0B'],\n                tooltip: {\n                    theme: 'dark',\n                    x: { show: false },\n                },\n                dataLabels: {\n                    enabled: false,\n                },\n                xaxis: {\n                    axisBorder: {\n                        color: '#D6DDEA',\n                    },\n                    axisTicks: {\n                        color: '#D6DDEA',\n                    },\n                },\n                yaxis: {\n                    labels: {\n                        offsetX: -5,\n                    },\n                },\n            };\n            setIsChatInitilized(true);\n        }\n        return () => {\n            if ((window as any).Apex) {\n                (window as any).Apex = {};\n            }\n        };\n    }, []);\n\n    return (\n        <React.Fragment>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Apps', path: '/components/charts' },\n                    { label: 'Charts', path: '/components/charts', active: true },\n                ]}\n                title={'Charts'}\n            />\n\n            <Row>\n                <Col xl={6}>\n                    <LineChart lineChartWithData={lineChartWithData} showLoader={!isChatInitilized} />\n                </Col>\n                <Col xl={6}>\n                    <LineGradientChart gradientLineChartData={gradientLineChartData} showLoader={!isChatInitilized} />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <StackedAreaChart stackedAreaChartData={stackedAreaChartData} showLoader={!isChatInitilized} />\n                </Col>\n                <Col xl={6}>\n                    <ColumnChart basicColumnChartData={basicColumnChartData} showLoader={!isChatInitilized} />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <ColumnDataLabelsChart columnChartData={columnChartData} showLoader={!isChatInitilized} />\n                </Col>\n                <Col xl={6}>\n                    <MixedChart mixedChart1Data={mixedChart1Data} showLoader={!isChatInitilized} />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <BarChart basicBarChartData={basicBarChartData} showLoader={!isChatInitilized} />\n                </Col>\n                <Col xl={6}>\n                    <BarChartWithNegativeValues\n                        barWithNegativeData={barWithNegativeData}\n                        showLoader={!isChatInitilized}\n                    />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <LineColumnAreaChart mixedChart2Data={mixedChart2Data} showLoader={!isChatInitilized} />\n                </Col>\n                <Col xl={6}>\n                    <MultipleYaxisChart multiYaxisChartData={multiYaxisChartData} showLoader={!isChatInitilized} />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <BubbleChart bubbleChartData={bubbleChartData} showLoader={!isChatInitilized} />\n                </Col>\n                <Col xl={6}>\n                    <ThreeDBubbleChart threeDBubbleChartData={threeDBubbleChartData} showLoader={!isChatInitilized} />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <ScatterChart scatterChartData={scatterChartData} showLoader={!isChatInitilized} />\n                </Col>\n                <Col xl={6}>\n                    <ScatterDateTimeChart\n                        scatterDateTimeChartData={scatterDateTimeChartData}\n                        showLoader={!isChatInitilized}\n                    />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xxl={4} md={6}>\n                    <PieChart pieChartData={pieChartData} showLoader={!isChatInitilized} />\n                </Col>\n                <Col xxl={4} md={6}>\n                    <DonutChart gradientDonutChartData={gradientDonutChartData} showLoader={!isChatInitilized} />\n                </Col>\n                <Col xxl={4} md={6}>\n                    <DonutPatternedChart\n                        patternedDonutChartData={patternedDonutChartData}\n                        showLoader={!isChatInitilized}\n                    />\n                </Col>\n\n                <Col xxl={4} md={6}>\n                    <RadialBarChart radarChartData={radarChartData} showLoader={!isChatInitilized} />\n                </Col>\n                <Col xxl={4} md={6}>\n                    <RadialBarMultipleChart multiRadarChartData={multiRadarChartData} showLoader={!isChatInitilized} />\n                </Col>\n                <Col xxl={4} md={6}>\n                    <CircularGuageChart gaugeChartData={gaugeChartData} showLoader={!isChatInitilized} />\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default ApexChart;\n"],"sourceRoot":""}