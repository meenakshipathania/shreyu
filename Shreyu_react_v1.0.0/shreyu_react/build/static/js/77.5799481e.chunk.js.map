{"version":3,"sources":["components/PageTitle.tsx","pages/maps/GoogleMaps.tsx"],"names":["PageTitle","props","className","title","listProps","Item","href","breadCrumbItems","map","item","index","active","label","path","BasicMap","google","id","style","position","initialCenter","lat","lng","zoom","width","height","zoomControlOptions","maps","ControlPosition","LEFT_TOP","WithMarkers","overflow","name","LightStyledMap","styles","featureType","elementType","stylers","color","lightness","weight","visibility","saturation","DarkStyledMap","WithPolygons","fillColor","fillOpacity","paths","strokeColor","strokeOpacity","strokeWeight","WithPolyline","StreetViewMap","mapRef","useRef","ref","onReady","mapObj","getStreetView","setPov","heading","pitch","setPosition","setVisible","activateStreetView","ClickableMarkers","useState","activeMarker","setActiveMarker","selectedPlace","setSelectedPlace","showingInfoWindow","setShowingInfoWindow","onClick","alert","marker","e","onClose","visible","GoogleApiWrapper","apiKey","Fragment","lg"],"mappings":"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","file":"static/js/77.5799481e.chunk.js","sourcesContent":["import React from 'react';\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\n\ninterface BreadcrumbItems {\n    label: string;\n    path: string;\n    active?: boolean;\n}\n\ninterface PageTitleProps {\n    breadCrumbItems: Array<BreadcrumbItems>;\n    title: string;\n}\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <h4 className=\"page-title\">{props.title}</h4>\n                    <div className=\"page-title-right\">\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\n                            <Breadcrumb.Item href=\"/\">Shreyu</Breadcrumb.Item>\n\n                            {(props.breadCrumbItems || []).map((item, index) => {\n                                return item.active ? (\n                                    <Breadcrumb.Item active key={index}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                ) : (\n                                    <Breadcrumb.Item key={index} href={item.path}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","import React, { useRef, useState } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { Map, Marker, GoogleApiWrapper, InfoWindow, Polygon, Polyline } from 'google-maps-react';\n\n// components\nimport PageTitle from '../../components/PageTitle';\n\ninterface MapContainerProps {\n    google: any;\n}\n\nconst BasicMap = ({ google }: MapContainerProps) => {\n    return (\n        <div className=\"card-box\">\n            <h4 className=\"header-title mb-3\">Basic</h4>\n\n            {/* basic map */}\n            <div id=\"gmaps-basic\" style={{ position: 'relative' }} className=\"gmaps\">\n                <Map\n                    google={google}\n                    initialCenter={{ lat: 21.569874, lng: 71.5893798 }}\n                    zoom={14}\n                    style={{ width: '100%', height: '100%', position: 'relative' }}\n                    zoomControlOptions={{\n                        position: google.maps.ControlPosition.LEFT_TOP,\n                    }}></Map>\n            </div>\n        </div>\n    );\n};\n\nconst WithMarkers = ({ google }: MapContainerProps) => {\n    return (\n        <div className=\"card-box\">\n            <h4 className=\"header-title mb-3\">Markers</h4>\n            <div className=\"gmaps\" style={{ position: 'relative', overflow: 'hidden' }}>\n                <Map\n                    google={google}\n                    zoom={18}\n                    initialCenter={{ lat: 21.569874, lng: 71.5893798 }}\n                    style={{ width: '100%', height: '100%', position: 'relative' }}\n                    zoomControlOptions={{\n                        position: google.maps.ControlPosition.LEFT_TOP,\n                    }}>\n                    <Marker\n                        name=\"SOMA\"\n                        position={{ lat: 21.56956, lng: 71.5892598 }}\n                        title=\"The marker`s title will appear as a tooltip.\"\n                    />\n\n                    <Marker name=\"Dolores park\" position={{ lat: 21.56969, lng: 71.5893798 }} />\n                </Map>\n            </div>\n        </div>\n    );\n};\n\nconst LightStyledMap = ({ google }: MapContainerProps) => {\n    const mapStyles = [\n        {\n            featureType: 'water',\n            elementType: 'geometry',\n            stylers: [{ color: '#e9e9e9' }, { lightness: 17 }],\n        },\n        {\n            featureType: 'landscape',\n            elementType: 'geometry',\n            stylers: [{ color: '#f5f5f5' }, { lightness: 20 }],\n        },\n        {\n            featureType: 'road.highway',\n            elementType: 'geometry.fill',\n            stylers: [{ color: '#ffffff' }, { lightness: 17 }],\n        },\n        {\n            featureType: 'road.highway',\n            elementType: 'geometry.stroke',\n            stylers: [{ color: '#ffffff' }, { lightness: 29 }, { weight: 0.2 }],\n        },\n        {\n            featureType: 'road.arterial',\n            elementType: 'geometry',\n            stylers: [{ color: '#ffffff' }, { lightness: 18 }],\n        },\n        {\n            featureType: 'road.local',\n            elementType: 'geometry',\n            stylers: [{ color: '#ffffff' }, { lightness: 16 }],\n        },\n        {\n            featureType: 'poi',\n            elementType: 'geometry',\n            stylers: [{ color: '#f5f5f5' }, { lightness: 21 }],\n        },\n        {\n            featureType: 'poi.park',\n            elementType: 'geometry',\n            stylers: [{ color: '#dedede' }, { lightness: 21 }],\n        },\n        {\n            elementType: 'labels.text.stroke',\n            stylers: [{ visibility: 'on' }, { color: '#ffffff' }, { lightness: 16 }],\n        },\n        {\n            elementType: 'labels.text.fill',\n            stylers: [{ saturation: 36 }, { color: '#333333' }, { lightness: 40 }],\n        },\n        { elementType: 'labels.icon', stylers: [{ visibility: 'off' }] },\n        {\n            featureType: 'transit',\n            elementType: 'geometry',\n            stylers: [{ color: '#f2f2f2' }, { lightness: 19 }],\n        },\n        {\n            featureType: 'administrative',\n            elementType: 'geometry.fill',\n            stylers: [{ color: '#fefefe' }, { lightness: 20 }],\n        },\n        {\n            featureType: 'administrative',\n            elementType: 'geometry.stroke',\n            stylers: [{ color: '#fefefe' }, { lightness: 17 }, { weight: 1.2 }],\n        },\n    ];\n\n    return (\n        <div className=\"card-box\">\n            <h4 className=\"header-title mb-3\">Ultra Light</h4>\n\n            <div className=\"gmaps\" style={{ position: 'relative', overflow: 'hidden' }}>\n                <Map\n                    google={google}\n                    zoom={14}\n                    initialCenter={{ lat: 40.7295174, lng: -73.9986496 }}\n                    style={{ width: '100%', height: '100%', position: 'relative' }}\n                    styles={mapStyles}\n                    zoomControlOptions={{\n                        position: google.maps.ControlPosition.LEFT_TOP,\n                    }}></Map>\n            </div>\n        </div>\n    );\n};\n\nconst DarkStyledMap = ({ google }: MapContainerProps) => {\n    const mapStyles = [\n        {\n            featureType: 'all',\n            elementType: 'labels',\n            stylers: [{ visibility: 'on' }],\n        },\n        {\n            featureType: 'all',\n            elementType: 'labels.text.fill',\n            stylers: [{ saturation: 36 }, { color: '#000000' }, { lightness: 40 }],\n        },\n        {\n            featureType: 'all',\n            elementType: 'labels.text.stroke',\n            stylers: [{ visibility: 'on' }, { color: '#000000' }, { lightness: 16 }],\n        },\n        {\n            featureType: 'all',\n            elementType: 'labels.icon',\n            stylers: [{ visibility: 'off' }],\n        },\n        {\n            featureType: 'administrative',\n            elementType: 'geometry.fill',\n            stylers: [{ color: '#000000' }, { lightness: 20 }],\n        },\n        {\n            featureType: 'administrative',\n            elementType: 'geometry.stroke',\n            stylers: [{ color: '#000000' }, { lightness: 17 }, { weight: 1.2 }],\n        },\n        {\n            featureType: 'administrative.country',\n            elementType: 'labels.text.fill',\n            stylers: [{ color: '#e5c163' }],\n        },\n        {\n            featureType: 'administrative.locality',\n            elementType: 'labels.text.fill',\n            stylers: [{ color: '#c4c4c4' }],\n        },\n        {\n            featureType: 'administrative.neighborhood',\n            elementType: 'labels.text.fill',\n            stylers: [{ color: '#e5c163' }],\n        },\n        {\n            featureType: 'landscape',\n            elementType: 'geometry',\n            stylers: [{ color: '#000000' }, { lightness: 20 }],\n        },\n        {\n            featureType: 'poi',\n            elementType: 'geometry',\n            stylers: [{ color: '#000000' }, { lightness: 21 }, { visibility: 'on' }],\n        },\n        {\n            featureType: 'poi.business',\n            elementType: 'geometry',\n            stylers: [{ visibility: 'on' }],\n        },\n        {\n            featureType: 'road.highway',\n            elementType: 'geometry.fill',\n            stylers: [{ color: '#e5c163' }, { lightness: '0' }],\n        },\n        {\n            featureType: 'road.highway',\n            elementType: 'geometry.stroke',\n            stylers: [{ visibility: 'off' }],\n        },\n        {\n            featureType: 'road.highway',\n            elementType: 'labels.text.fill',\n            stylers: [{ color: '#ffffff' }],\n        },\n        {\n            featureType: 'road.highway',\n            elementType: 'labels.text.stroke',\n            stylers: [{ color: '#e5c163' }],\n        },\n        {\n            featureType: 'road.arterial',\n            elementType: 'geometry',\n            stylers: [{ color: '#000000' }, { lightness: 18 }],\n        },\n        {\n            featureType: 'road.arterial',\n            elementType: 'geometry.fill',\n            stylers: [{ color: '#575757' }],\n        },\n        {\n            featureType: 'road.arterial',\n            elementType: 'labels.text.fill',\n            stylers: [{ color: '#ffffff' }],\n        },\n        {\n            featureType: 'road.arterial',\n            elementType: 'labels.text.stroke',\n            stylers: [{ color: '#2c2c2c' }],\n        },\n        {\n            featureType: 'road.local',\n            elementType: 'geometry',\n            stylers: [{ color: '#000000' }, { lightness: 16 }],\n        },\n        {\n            featureType: 'road.local',\n            elementType: 'labels.text.fill',\n            stylers: [{ color: '#999999' }],\n        },\n        {\n            featureType: 'transit',\n            elementType: 'geometry',\n            stylers: [{ color: '#000000' }, { lightness: 19 }],\n        },\n        {\n            featureType: 'water',\n            elementType: 'geometry',\n            stylers: [{ color: '#000000' }, { lightness: 17 }],\n        },\n    ];\n\n    return (\n        <div className=\"card-box\">\n            <h4 className=\"header-title mb-3\">Dark</h4>\n\n            <div className=\"gmaps\" style={{ position: 'relative', overflow: 'hidden' }}>\n                <Map\n                    google={google}\n                    zoom={14}\n                    initialCenter={{ lat: 40.7295174, lng: -73.9986496 }}\n                    style={{ width: '100%', height: '100%', position: 'relative' }}\n                    styles={mapStyles}\n                    zoomControlOptions={{\n                        position: google.maps.ControlPosition.LEFT_TOP,\n                    }}></Map>\n            </div>\n        </div>\n    );\n};\n\nconst WithPolygons = ({ google }: MapContainerProps) => {\n    const polygon = [\n        { lat: -12.040397656836609, lng: -77.03373871559225 },\n        { lat: -12.040248585302038, lng: -77.03993927003302 },\n        { lat: -12.050047116528843, lng: -77.02448169303511 },\n        { lat: -12.044804866577001, lng: -77.02154422636042 },\n    ];\n\n    return (\n        <div className=\"card-box\">\n            <h4 className=\"header-title mb-3\">Polygons</h4>\n\n            <div id=\"gmaps-polygons\" className=\"gmaps\" style={{ position: 'relative', overflow: 'hidden' }}>\n                <Map\n                    google={google}\n                    initialCenter={{ lat: -12.043333, lng: -77.028333 }}\n                    style={{ width: '100%', height: '100%', position: 'relative' }}\n                    zoom={14}\n                    zoomControlOptions={{\n                        position: google.maps.ControlPosition.LEFT_TOP,\n                    }}>\n                    <Polygon\n                        fillColor=\"#BBD8E9\"\n                        fillOpacity={0.6}\n                        paths={polygon}\n                        strokeColor=\"#BBD8E9\"\n                        strokeOpacity={1}\n                        strokeWeight={3}\n                    />\n                </Map>\n            </div>\n        </div>\n    );\n};\n\nconst WithPolyline = ({ google }: MapContainerProps) => {\n    const polyline = [\n        { lat: -12.040397656836609, lng: -77.03373871559225 },\n        { lat: -12.048138585302038, lng: -77.03593927003302 },\n        { lat: -12.044804866577001, lng: -77.02454422636042 },\n    ];\n\n    return (\n        <div className=\"card-box\">\n            <h4 className=\"header-title mb-3\">Polyline</h4>\n\n            <div id=\"gmaps-polygons\" className=\"gmaps\" style={{ position: 'relative', overflow: 'hidden' }}>\n                <Map\n                    google={google}\n                    initialCenter={{ lat: -12.043333, lng: -77.028333 }}\n                    style={{ width: '100%', height: '100%', position: 'relative' }}\n                    zoom={14}\n                    zoomControlOptions={{\n                        position: google.maps.ControlPosition.LEFT_TOP,\n                    }}>\n                    <Polyline\n                        fillColor=\"#BBD8E9\"\n                        fillOpacity={0.6}\n                        path={polyline}\n                        strokeColor=\"#BBD8E9\"\n                        strokeOpacity={1}\n                        strokeWeight={3}\n                    />\n                </Map>\n            </div>\n        </div>\n    );\n};\n\nconst StreetViewMap = ({ google }: MapContainerProps) => {\n    let mapRef: any = useRef();\n\n    /**\n     * Activate the street view\n     */\n    const activateStreetView = (position: { lat: number; lng: number }) => {\n        if (mapRef) {\n            const mapObj = mapRef.map.getStreetView();\n            mapObj.setPov({ heading: 34, pitch: 10 });\n            mapObj.setPosition(position);\n            mapObj.setVisible(true);\n        }\n    };\n\n    return (\n        <div className=\"card-box\">\n            <h4 className=\"header-title mb-3\">Street View Panoramas Google Map</h4>\n\n            <div className=\"gmaps\" style={{ position: 'relative', overflow: 'hidden' }}>\n                <Map\n                    google={google}\n                    ref={(map: any) => (mapRef = map)}\n                    zoom={14}\n                    initialCenter={{ lat: 40.7295174, lng: -73.9986496 }}\n                    style={{ width: '100%', height: '100%', position: 'relative' }}\n                    onReady={() => {\n                        activateStreetView({ lat: 40.7295174, lng: -73.9986496 });\n                    }}></Map>\n            </div>\n        </div>\n    );\n};\n\nconst ClickableMarkers = ({ google }: MapContainerProps) => {\n    const [activeMarker, setActiveMarker] = useState<any>({});\n    const [selectedPlace, setSelectedPlace] = useState<any>({});\n    const [showingInfoWindow, setShowingInfoWindow] = useState<boolean>(false);\n\n    const onInfoWindowClose = () => {\n        setActiveMarker(null);\n        setShowingInfoWindow(false);\n    };\n\n    // handles operation on marker click\n    const onBasicMarkerClick = () => {\n        alert('You clicked in this marker');\n    };\n\n    // handles operation on marker click\n    const onMarkerClick = (props: any, marker: any, e: any) => {\n        setActiveMarker(marker);\n        setSelectedPlace(props);\n        setShowingInfoWindow(true);\n    };\n\n    return (\n        <div className=\"card-box\">\n            <h4 className=\"header-title mb-3\">Clickable Markers</h4>\n            <div className=\"gmaps\" style={{ position: 'relative', overflow: 'hidden' }}>\n                <Map\n                    google={google}\n                    zoom={18}\n                    initialCenter={{ lat: 21.569874, lng: 71.5893798 }}\n                    style={{ width: '100%', height: '100%', position: 'relative' }}\n                    zoomControlOptions={{\n                        position: google.maps.ControlPosition.LEFT_TOP,\n                    }}>\n                    {/* basic marker */}\n                    <Marker\n                        title={'This is sweet home.'}\n                        name={'Home sweet home!'}\n                        onClick={onBasicMarkerClick}\n                        position={{ lat: 21.56956, lng: 71.5892598 }}\n                    />\n\n                    {/* clickable marker */}\n                    <Marker\n                        name=\"Current location\"\n                        title={'Marker with InfoWindow'}\n                        onClick={onMarkerClick}\n                        position={{ lat: 21.56969, lng: 71.5893798 }}\n                    />\n                    <InfoWindow marker={activeMarker} onClose={onInfoWindowClose} visible={showingInfoWindow}>\n                        <div>\n                            <p>{selectedPlace.name}</p>\n                        </div>\n                    </InfoWindow>\n                </Map>\n            </div>\n        </div>\n    );\n};\n\nconst GoogleMaps = ({ google }: MapContainerProps) => {\n    return (\n        <React.Fragment>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Maps', path: '/ui/googlemaps' },\n                    { label: 'Google Maps', path: '/ui/googlemaps', active: true },\n                ]}\n                title={'Google Maps'}\n            />\n\n            <Row>\n                <Col lg={6}>\n                    <BasicMap google={google} />\n                </Col>\n\n                <Col lg={6}>\n                    <WithMarkers google={google} />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col lg={6}>\n                    <LightStyledMap google={google} />\n                </Col>\n                <Col lg={6}>\n                    <DarkStyledMap google={google} />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col lg={6}>\n                    <WithPolyline google={google} />\n                </Col>\n                <Col lg={6}>\n                    <WithPolygons google={google} />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col lg={6}>\n                    <StreetViewMap google={google} />\n                </Col>\n                <Col lg={6}>\n                    <ClickableMarkers google={google} />\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default GoogleApiWrapper({\n    apiKey: 'AIzaSyDsucrEdmswqYrw0f6ej3bf4M4suDeRgNA',\n})(GoogleMaps);\n"],"sourceRoot":""}