{"version":3,"sources":["components/PageTitle.tsx","components/Loader.tsx","pages/charts/LineChart.tsx","pages/charts/LineGradientChart.tsx","pages/charts/StackedAreaChart.tsx","pages/charts/ColumnChart.tsx","pages/charts/ColumnDataLabelsChart.tsx","pages/charts/MixedChart.tsx","pages/charts/BarChart.tsx","pages/charts/BarChartWithNegativeValues.tsx","pages/charts/LineColumnAreaChart.tsx","pages/charts/MultipleYaxisChart.tsx","pages/charts/BubbleChart.tsx","pages/charts/ThreeDBubbleChart.tsx","pages/charts/ScatterChart.tsx","pages/charts/ScatterDateTimeChart.tsx","pages/charts/PieChart.tsx","pages/charts/DonutChart.tsx","pages/charts/DonutPatternedChart.tsx","pages/charts/RadialBarChart.tsx","pages/charts/RadialBarMultipleChart.tsx","pages/charts/CircularGuageChart.tsx","pages/charts/data.ts","pages/charts/index.tsx"],"names":["PageTitle","props","className","title","listProps","Item","href","breadCrumbItems","map","item","index","active","label","path","Loader","id","LineChart","lineChartWithData","showLoader","apexLineChartWithLablesData","name","data","data1","data2","Card","Body","style","height","position","options","chart","type","zoom","enabled","dataLabels","stroke","width","curve","grid","row","colors","opacity","borderColor","markers","size","xaxis","categories","text","yaxis","min","max","legend","horizontalAlign","floating","offsetY","offsetX","responsive","breakpoint","toolbar","show","series","dir","LineGradientChart","gradientLineChartData","align","fontSize","color","fill","gradient","shade","gradientToColors","shadeIntensity","opacityFrom","opacityTo","stops","strokeWidth","hover","StackedAreaChart","stackedAreaChartData","apexAreaChart2Data","data3","stacked","ColumnChart","basicColumnChartData","plotOptions","bar","horizontal","columnWidth","tooltip","y","formatter","val","ColumnDataLabelsChart","columnChartData","labels","axisBorder","axisTicks","crosshairs","colorFrom","colorTo","undefined","inverseColors","MixedChart","mixedChart1Data","apexMixedData","opposite","shared","intersect","toFixed","BarChart","basicBarChartData","BarChartWithNegativeValues","barWithNegativeData","barHeight","Math","abs","round","Number","LineColumnAreaChart","mixedChart2Data","MultipleYaxisChart","multiYaxisChartData","followCursor","BubbleChart","bubbleChartData","tickAmount","ThreeDBubbleChart","threeDBubbleChartData","data4","rotate","ScatterChart","scatterChartData","parseFloat","ScatterDateTimeChart","scatterDateTimeChartData","data5","lines","theme","x","PieChart","pieChartData","DonutChart","gradientDonutChartData","DonutPatternedChart","patternedDonutChartData","dropShadow","top","left","blur","pattern","RadialBarChart","radarChartData","radialBar","hollow","RadialBarMultipleChart","multiRadarChartData","value","total","w","String","CircularGuageChart","gaugeChartData","startAngle","endAngle","dashArray","generateDayWiseTimeSeries","baseval","count","yrange","i","floor","random","push","generateData","z","generateData1","baseval1","Date","getTime","ApexChart","useState","isChatInitilized","setIsChatInitilized","useEffect","window","Apex","parentHeightOffset","padding","right","Fragment","Row","Col","xl","xxl","md"],"mappings":"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","file":"static/js/63.efdf9e18.chunk.js","sourcesContent":["import React from 'react';\nimport { Row, Col, Breadcrumb } from 'react-bootstrap';\n\ninterface BreadcrumbItems {\n    label: string;\n    path: string;\n    active?: boolean;\n}\n\ninterface PageTitleProps {\n    breadCrumbItems: Array<BreadcrumbItems>;\n    title: string;\n}\n\n/**\n * PageTitle\n */\nconst PageTitle = (props: PageTitleProps) => {\n    return (\n        <Row>\n            <Col>\n                <div className=\"page-title-box\">\n                    <h4 className=\"page-title\">{props.title}</h4>\n                    <div className=\"page-title-right\">\n                        <Breadcrumb listProps={{ className: 'm-0' }}>\n                            <Breadcrumb.Item href=\"/\">Shreyu</Breadcrumb.Item>\n\n                            {(props.breadCrumbItems || []).map((item, index) => {\n                                return item.active ? (\n                                    <Breadcrumb.Item active key={index}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                ) : (\n                                    <Breadcrumb.Item key={index} href={item.path}>\n                                        {item.label}\n                                    </Breadcrumb.Item>\n                                );\n                            })}\n                        </Breadcrumb>\n                    </div>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default PageTitle;\n","import React from 'react';\n\n/**\n * Renders the preloader\n */\nconst Loader = () => {\n    return (\n        <div className=\"preloader\" id=\"preloader\">\n            <div className=\"status\" id=\"status\">\n                <div className=\"spinner\">\n                    <div></div>\n                    <div></div>\n                    <div></div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Loader;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// components\nimport Loader from '../../components/Loader';\n\n// types\nimport { ApexLinearChartData } from './data';\n\ninterface LineChartProps {\n    lineChartWithData: ApexLinearChartData;\n    showLoader?: boolean;\n}\n\n// simple line chart\nconst LineChart = ({ lineChartWithData, showLoader }: LineChartProps) => {\n    // default options\n    const apexLineChartWithLables: ApexOptions = {\n        chart: {\n            height: 380,\n            type: 'line',\n            zoom: {\n                enabled: false,\n            },\n        },\n        dataLabels: {\n            enabled: true,\n        },\n        stroke: {\n            width: [3, 3],\n            curve: 'smooth',\n        },\n        grid: {\n            row: {\n                colors: ['transparent', 'transparent'], // takes an array which will be repeated on columns\n                opacity: 0.2,\n            },\n            borderColor: '#e9ecef',\n        },\n        markers: {\n            size: 6,\n        },\n        xaxis: {\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n            title: {\n                text: 'Month',\n            },\n        },\n        yaxis: {\n            title: {\n                text: 'Temperature',\n            },\n            min: 5,\n            max: 40,\n        },\n        legend: {\n            position: 'top',\n            horizontalAlign: 'right',\n            floating: true,\n            offsetY: -25,\n            offsetX: -5,\n        },\n        responsive: [\n            {\n                breakpoint: 600,\n                options: {\n                    chart: {\n                        toolbar: {\n                            show: false,\n                        },\n                    },\n                    legend: {\n                        show: false,\n                    },\n                },\n            },\n        ],\n    };\n\n    // chart data\n    const apexLineChartWithLablesData = [\n        {\n            name: 'High - 2018',\n            data: lineChartWithData.data1 || [],\n        },\n        {\n            name: 'Low - 2018',\n            data: lineChartWithData.data2 || [],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mt-0 mb-3\">Line with Data Labels</h4>\n                {showLoader ? (\n                    <div style={{ height: 380, position: 'relative' }}>\n                        <Loader />\n                    </div>\n                ) : (\n                    <Chart\n                        options={apexLineChartWithLables}\n                        series={apexLineChartWithLablesData}\n                        type=\"line\"\n                        height={380}\n                        className=\"apex-charts\"\n                        dir=\"ltr\"\n                    />\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default LineChart;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// components\nimport Loader from '../../components/Loader';\n\n// types\nimport { ApexLinearChartData } from './data';\n\ninterface LineGradientChartProps {\n    gradientLineChartData: ApexLinearChartData;\n    showLoader?: boolean;\n}\n\nconst LineGradientChart = ({ gradientLineChartData, showLoader }: LineGradientChartProps) => {\n    const options: ApexOptions = {\n        chart: {\n            height: 380,\n            type: 'line',\n        },\n        stroke: {\n            width: 5,\n            curve: 'smooth',\n        },\n        xaxis: {\n            type: 'datetime',\n            categories: [\n                '1/11/2000',\n                '2/11/2000',\n                '3/11/2000',\n                '4/11/2000',\n                '5/11/2000',\n                '6/11/2000',\n                '7/11/2000',\n                '8/11/2000',\n                '9/11/2000',\n                '10/11/2000',\n                '11/11/2000',\n                '12/11/2000',\n                '1/11/2001',\n                '2/11/2001',\n                '3/11/2001',\n                '4/11/2001',\n                '5/11/2001',\n                '6/11/2001',\n            ],\n        },\n        title: {\n            text: 'Social Media',\n            align: 'left',\n            style: {\n                fontSize: '14px',\n                color: '#666',\n            },\n        },\n        fill: {\n            type: 'gradient',\n            gradient: {\n                shade: 'dark',\n                gradientToColors: ['#43d39e'],\n                shadeIntensity: 1,\n                type: 'vertical',\n                opacityFrom: 1,\n                opacityTo: 1,\n                stops: [0, 100, 100, 100],\n            },\n        },\n        markers: {\n            size: 4,\n            colors: ['#50a5f1'],\n            strokeWidth: 2,\n            hover: {\n                size: 7,\n            },\n        },\n        yaxis: {\n            min: -10,\n            max: 40,\n            title: {\n                text: 'Engagement',\n            },\n        },\n        grid: {\n            row: {\n                colors: ['transparent', 'transparent'], // takes an array which will be repeated on columns\n                opacity: 0.2,\n            },\n            borderColor: '#185a9d',\n        },\n        responsive: [\n            {\n                breakpoint: 600,\n                options: {\n                    chart: {\n                        toolbar: {\n                            show: false,\n                        },\n                    },\n                    legend: {\n                        show: false,\n                    },\n                },\n            },\n        ],\n    };\n\n    const series = [\n        {\n            name: 'Likes',\n            data: gradientLineChartData.data || [],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mt-0 mb-3\">Gradient Line Chart</h4>\n                {showLoader ? (\n                    <div style={{ height: 380, position: 'relative' }}>\n                        <Loader />\n                    </div>\n                ) : (\n                    <Chart\n                        id=\"apex-charts-Gradient\"\n                        options={options}\n                        series={series}\n                        type=\"line\"\n                        height={380}\n                        className=\"apex-charts\"\n                        dir=\"ltr\"\n                    />\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default LineGradientChart;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// components\nimport Loader from '../../components/Loader';\n\n// types\nimport { ApexLinearChartData } from './data';\n\ninterface StackedAreaChartProps {\n    stackedAreaChartData: ApexLinearChartData;\n    showLoader?: boolean;\n}\n\n// StackedAreaChart\nconst StackedAreaChart = ({ stackedAreaChartData, showLoader }: StackedAreaChartProps) => {\n    // default options\n    const apexAreaChart2Opts: ApexOptions = {\n        chart: {\n            id: 'apexchart',\n            height: 380,\n            type: 'area',\n            stacked: true,\n        },\n        stroke: {\n            width: [3, 3, 3],\n            curve: 'smooth',\n        },\n        legend: {\n            position: 'top',\n            horizontalAlign: 'left',\n        },\n        xaxis: {\n            type: 'datetime',\n        },\n    };\n\n    // chart data\n    const apexAreaChart2Data = [\n        {\n            name: 'South',\n            data: stackedAreaChartData.data1 || [],\n        },\n        {\n            name: 'North',\n            data: stackedAreaChartData.data2 || [],\n        },\n\n        {\n            name: 'Central',\n            data: stackedAreaChartData.data3 || [],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-3\">Stacked Area</h4>\n                {showLoader ? (\n                    <div style={{ height: 380, position: 'relative' }}>\n                        <Loader />\n                    </div>\n                ) : (\n                    <Chart\n                        options={apexAreaChart2Opts}\n                        series={apexAreaChart2Data}\n                        type=\"area\"\n                        height={380}\n                        className=\"apex-charts\"\n                    />\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default StackedAreaChart;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// components\nimport Loader from '../../components/Loader';\n\n// types\nimport { ApexLinearChartData } from './data';\n\ninterface ColumnChartProps {\n    basicColumnChartData: ApexLinearChartData;\n    showLoader?: boolean;\n}\n\nconst ColumnChart = ({ basicColumnChartData, showLoader }: ColumnChartProps) => {\n    const options: ApexOptions = {\n        chart: {\n            height: 380,\n            type: 'bar',\n        },\n        plotOptions: {\n            bar: {\n                horizontal: false,\n                columnWidth: '55%',\n            },\n        },\n        stroke: {\n            show: true,\n            width: 2,\n            colors: ['transparent'],\n        },\n        xaxis: {\n            categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct'],\n        },\n        legend: {\n            offsetY: 7,\n        },\n        yaxis: {\n            title: {\n                text: '$ (thousands)',\n            },\n        },\n        grid: {\n            row: {\n                colors: ['transparent', 'transparent'], // takes an array which will be repeated on columns\n                opacity: 0.2,\n            },\n            borderColor: '#f1f3fa',\n        },\n        tooltip: {\n            y: {\n                formatter: (val: number) => {\n                    return '$ ' + val + ' thousands';\n                },\n            },\n        },\n    };\n\n    const series = [\n        {\n            name: 'Net Profit',\n            data: basicColumnChartData.data1 || [],\n        },\n        {\n            name: 'Revenue',\n            data: basicColumnChartData.data2 || [],\n        },\n        {\n            name: 'Free Cash Flow',\n            data: basicColumnChartData.data3 || [],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mt-0 mb-3\">Basic Column Chart</h4>\n                {showLoader ? (\n                    <div style={{ height: 380, position: 'relative' }}>\n                        <Loader />\n                    </div>\n                ) : (\n                    <Chart\n                        options={options}\n                        series={series}\n                        type=\"bar\"\n                        height={380}\n                        className=\"apex-charts\"\n                        dir=\"ltr\"\n                    />\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default ColumnChart;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// components\nimport Loader from '../../components/Loader';\n\n// types\nimport { ApexLinearChartData } from './data';\n\ninterface ColumnDataLabelsChartProps {\n    columnChartData: ApexLinearChartData;\n    showLoader?: boolean;\n}\n\nconst ColumnDataLabelsChart = ({ columnChartData, showLoader }: ColumnDataLabelsChartProps) => {\n    const options: ApexOptions = {\n        plotOptions: {\n            bar: {\n                dataLabels: {\n                    position: 'top', // top, center, bottom\n                },\n            },\n        },\n        dataLabels: {\n            enabled: true,\n            formatter: (val: number) => {\n                return val + '%';\n            },\n            offsetY: -30,\n            style: {\n                fontSize: '12px',\n                colors: ['#304758'],\n            },\n        },\n        xaxis: {\n            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n            position: 'top',\n            labels: {\n                offsetY: -18,\n            },\n            axisBorder: {\n                show: false,\n            },\n            axisTicks: {\n                show: false,\n            },\n            crosshairs: {\n                fill: {\n                    type: 'gradient',\n                    gradient: {\n                        colorFrom: '#D8E3F0',\n                        colorTo: '#BED1E6',\n                        stops: [0, 100],\n                        opacityFrom: 0.4,\n                        opacityTo: 0.5,\n                    },\n                },\n            },\n            tooltip: {\n                enabled: true,\n                offsetY: -35,\n            },\n        },\n        fill: {\n            gradient: {\n                shade: 'light',\n                type: 'horizontal',\n                shadeIntensity: 0.25,\n                gradientToColors: undefined,\n                inverseColors: true,\n                opacityFrom: 1,\n                opacityTo: 1,\n                stops: [50, 0, 100, 100],\n            },\n        },\n        yaxis: {\n            axisBorder: {\n                show: false,\n            },\n            axisTicks: {\n                show: false,\n            },\n            labels: {\n                show: false,\n                formatter: (val: number) => {\n                    return val + '%';\n                },\n            },\n        },\n        title: {\n            text: 'Monthly Inflation in Argentina, 2002',\n            floating: true,\n            offsetY: 350,\n            align: 'center',\n            style: {\n                color: '#444',\n            },\n        },\n        grid: {\n            row: {\n                colors: ['transparent', 'transparent'], // takes an array which will be repeated on columns\n                opacity: 0.2,\n            },\n            borderColor: '#f1f3fa',\n        },\n    };\n\n    const series = [\n        {\n            name: 'Inflation',\n            data: columnChartData.data || [],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mt-0 mb-3\">Column Chart with Datalabels</h4>\n                {showLoader ? (\n                    <div style={{ height: 380, position: 'relative' }}>\n                        <Loader />\n                    </div>\n                ) : (\n                    <Chart\n                        options={options}\n                        series={series}\n                        type=\"bar\"\n                        height={380}\n                        className=\"apex-charts\"\n                        dir=\"ltr\"\n                    />\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default ColumnDataLabelsChart;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// components\nimport Loader from '../../components/Loader';\n\n// types\nimport { ApexLinearChartData } from './data';\n\ninterface MixedChartProps {\n    mixedChart1Data: ApexLinearChartData;\n    showLoader?: boolean;\n}\n\n// Mixed chart\nconst MixedChart = ({ mixedChart1Data, showLoader }: MixedChartProps) => {\n    // default options\n    const apexMixedOpts: ApexOptions = {\n        chart: {\n            height: 380,\n            type: 'line',\n        },\n        stroke: {\n            width: 3,\n            curve: 'smooth',\n        },\n        fill: {\n            type: 'solid',\n            opacity: [0.35, 1],\n        },\n        labels: [\n            'Dec 01',\n            'Dec 02',\n            'Dec 03',\n            'Dec 04',\n            'Dec 05',\n            'Dec 06',\n            'Dec 07',\n            'Dec 08',\n            'Dec 09 ',\n            'Dec 10',\n            'Dec 11',\n        ],\n        markers: {\n            size: 0,\n        },\n        legend: {\n            offsetY: 7,\n        },\n        yaxis: [\n            {\n                title: {\n                    text: 'Series A',\n                },\n            },\n            {\n                opposite: true,\n                title: {\n                    text: 'Series B',\n                },\n            },\n        ],\n        tooltip: {\n            shared: true,\n            intersect: false,\n            y: {\n                formatter: function (y) {\n                    if (typeof y !== 'undefined') {\n                        return y.toFixed(0) + ' points';\n                    }\n                    return y;\n                },\n            },\n        },\n    };\n\n    // chart data\n    const apexMixedData = [\n        {\n            name: 'Team A',\n            type: 'area',\n            data: mixedChart1Data.data1 || [],\n        },\n        {\n            name: 'Team B',\n            type: 'line',\n            data: mixedChart1Data.data2 || [],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mb-3\">Mixed Chart - Line & Area</h4>\n                {showLoader ? (\n                    <div style={{ height: 380, position: 'relative' }}>\n                        <Loader />\n                    </div>\n                ) : (\n                    <Chart\n                        options={apexMixedOpts}\n                        series={apexMixedData}\n                        type=\"line\"\n                        height={380}\n                        className=\"apex-charts\"\n                    />\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default MixedChart;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// components\nimport Loader from '../../components/Loader';\n\n// types\nimport { ApexLinearChartData } from './data';\n\ninterface BarChartProps {\n    basicBarChartData: ApexLinearChartData;\n    showLoader?: boolean;\n}\n\nconst BarChart = ({ basicBarChartData, showLoader }: BarChartProps) => {\n    const options: ApexOptions = {\n        chart: {\n            height: 380,\n            type: 'bar',\n        },\n        plotOptions: {\n            bar: {\n                horizontal: true,\n            },\n        },\n        xaxis: {\n            categories: [\n                'South Korea',\n                'Canada',\n                'United Kingdom',\n                'Netherlands',\n                'Italy',\n                'France',\n                'Japan',\n                'United States',\n                'China',\n                'Germany',\n            ],\n        },\n    };\n\n    const series = [\n        {\n            data: basicBarChartData.data || [],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mt-0 mb-3\">Basic Bar Chart</h4>\n                {showLoader ? (\n                    <div style={{ height: 380, position: 'relative' }}>\n                        <Loader />\n                    </div>\n                ) : (\n                    <Chart\n                        options={options}\n                        series={series}\n                        type=\"bar\"\n                        height={380}\n                        className=\"apex-charts\"\n                        dir=\"ltr\"\n                    />\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default BarChart;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// components\nimport Loader from '../../components/Loader';\n\n// types\nimport { ApexLinearChartData } from './data';\n\ninterface BarChartWithNegativeValuesProps {\n    showLoader?: boolean;\n    barWithNegativeData: ApexLinearChartData;\n}\n\nconst BarChartWithNegativeValues = ({ barWithNegativeData, showLoader }: BarChartWithNegativeValuesProps) => {\n    const options: ApexOptions = {\n        chart: {\n            height: 380,\n            type: 'bar',\n            stacked: true,\n        },\n        plotOptions: {\n            bar: {\n                horizontal: true,\n                barHeight: '80%',\n            },\n        },\n        grid: {\n            borderColor: '#f1f3fa',\n        },\n        yaxis: {\n            min: -5,\n            max: 5,\n        },\n        tooltip: {\n            shared: false,\n            y: {\n                formatter: function (val) {\n                    return Math.abs(val) + '%';\n                },\n            },\n        },\n        xaxis: {\n            categories: [\n                '85+',\n                '80-84',\n                '75-79',\n                '70-74',\n                '65-69',\n                '60-64',\n                '55-59',\n                '50-54',\n                '45-49',\n                '40-44',\n                '35-39',\n                '30-34',\n                '25-29',\n                '20-24',\n                '15-19',\n                '10-14',\n                '5-9',\n                '0-4',\n            ],\n            title: {\n                text: 'Percent',\n            },\n            labels: {\n                formatter: (val: string) => {\n                    return Math.abs(Math.round(Number(val))) + '%';\n                },\n            },\n        },\n        legend: {\n            offsetY: 7,\n        },\n    };\n\n    const series = [\n        {\n            name: 'Males',\n            data: barWithNegativeData.data1 || [],\n        },\n        {\n            name: 'Females',\n            data: barWithNegativeData.data2 || [],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mt-0 mb-3\">Bar with Negative Values</h4>\n                {showLoader ? (\n                    <div style={{ height: 380, position: 'relative' }}>\n                        <Loader />\n                    </div>\n                ) : (\n                    <Chart\n                        options={options}\n                        series={series}\n                        type=\"bar\"\n                        height={380}\n                        className=\"apex-charts\"\n                        dir=\"ltr\"\n                    />\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default BarChartWithNegativeValues;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// components\nimport Loader from '../../components/Loader';\n\n// types\nimport { ApexLinearChartData } from './data';\n\ninterface LineColumnAreaChartProps {\n    mixedChart2Data: ApexLinearChartData;\n    showLoader?: boolean;\n}\n\nconst LineColumnAreaChart = ({ mixedChart2Data, showLoader }: LineColumnAreaChartProps) => {\n    const options: ApexOptions = {\n        chart: {\n            stacked: false,\n        },\n        stroke: {\n            width: [0, 2, 4],\n            curve: 'smooth',\n        },\n        plotOptions: {\n            bar: {\n                columnWidth: '50%',\n            },\n        },\n        fill: {\n            opacity: [0.85, 0.25, 1],\n            gradient: {\n                inverseColors: false,\n                shade: 'light',\n                type: 'vertical',\n                opacityFrom: 0.85,\n                opacityTo: 0.55,\n                stops: [0, 100, 100, 100],\n            },\n        },\n        labels: [\n            '01/01/2003',\n            '02/01/2003',\n            '03/01/2003',\n            '04/01/2003',\n            '05/01/2003',\n            '06/01/2003',\n            '07/01/2003',\n            '08/01/2003',\n            '09/01/2003',\n            '10/01/2003',\n            '11/01/2003',\n        ],\n        markers: {\n            size: 0,\n        },\n        legend: {\n            offsetY: 7,\n        },\n        xaxis: {\n            type: 'datetime',\n        },\n        yaxis: {\n            title: {\n                text: 'Points',\n            },\n        },\n        tooltip: {\n            shared: true,\n            intersect: false,\n            y: {\n                formatter: function (y) {\n                    if (typeof y !== 'undefined') {\n                        return y.toFixed(0) + ' points';\n                    }\n                    return y;\n                },\n            },\n        },\n        grid: {\n            borderColor: '#f1f3fa',\n        },\n    };\n\n    const series = [\n        {\n            name: 'Team A',\n            type: 'column',\n            data: mixedChart2Data.data1 || [],\n        },\n        {\n            name: 'Team B',\n            type: 'area',\n            data: mixedChart2Data.data2 || [],\n        },\n        {\n            name: 'Team C',\n            type: 'line',\n            data: mixedChart2Data.data3 || [],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mt-0 mb-3\">Line, Column & Area Chart</h4>\n                {showLoader ? (\n                    <div style={{ height: 380, position: 'relative' }}>\n                        <Loader />\n                    </div>\n                ) : (\n                    <Chart\n                        options={options}\n                        series={series}\n                        type=\"line\"\n                        height={380}\n                        className=\"apex-charts\"\n                        dir=\"ltr\"\n                    />\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default LineColumnAreaChart;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// components\nimport Loader from '../../components/Loader';\n\n// types\nimport { ApexLinearChartData } from './data';\n\ninterface MultipleYaxisChartProps {\n    multiYaxisChartData: ApexLinearChartData;\n    showLoader?: boolean;\n}\n\nconst MultipleYaxisChart = ({ multiYaxisChartData, showLoader }: MultipleYaxisChartProps) => {\n    const options: ApexOptions = {\n        chart: {\n            stacked: false,\n        },\n        stroke: {\n            width: [0, 0, 3],\n        },\n        xaxis: {\n            categories: [2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016],\n        },\n        yaxis: [\n            {\n                axisTicks: {\n                    show: true,\n                },\n                axisBorder: {\n                    show: true,\n                    color: '#675db7',\n                },\n                labels: {\n                    style: {\n                        colors: ['#675db7'],\n                    },\n                },\n                title: {\n                    text: 'Income (thousand crores)',\n                },\n            },\n\n            {\n                axisTicks: {\n                    show: true,\n                },\n                axisBorder: {\n                    show: true,\n                    color: '#23b397',\n                },\n                labels: {\n                    style: {\n                        colors: ['#23b397'],\n                    },\n                    offsetX: 10,\n                },\n                title: {\n                    text: 'Operating Cashflow (thousand crores)',\n                },\n            },\n            {\n                opposite: true,\n                axisTicks: {\n                    show: true,\n                },\n                axisBorder: {\n                    show: true,\n                    color: '#e36498',\n                },\n                labels: {\n                    style: {\n                        colors: ['#e36498'],\n                    },\n                },\n                title: {\n                    text: 'Revenue (thousand crores)',\n                },\n            },\n        ],\n        tooltip: {\n            followCursor: true,\n            y: {\n                formatter: function (y) {\n                    if (typeof y !== 'undefined') {\n                        return y + ' thousand crores';\n                    }\n                    return y;\n                },\n            },\n        },\n        grid: {\n            borderColor: '#f1f3fa',\n        },\n        legend: {\n            offsetY: 7,\n        },\n        responsive: [\n            {\n                breakpoint: 600,\n                options: {\n                    yaxis: {\n                        show: false,\n                    },\n                    legend: {\n                        show: false,\n                    },\n                },\n            },\n        ],\n    };\n\n    const series = [\n        {\n            name: 'Income',\n            type: 'column',\n            data: multiYaxisChartData.data1 || [],\n        },\n        {\n            name: 'Cashflow',\n            type: 'column',\n            data: multiYaxisChartData.data2 || [],\n        },\n        {\n            name: 'Revenue',\n            type: 'line',\n            data: multiYaxisChartData.data3 || [],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mt-0 mb-3\">Multiple Y-Axis Chart</h4>\n                {showLoader ? (\n                    <div style={{ height: 380, position: 'relative' }}>\n                        <Loader />\n                    </div>\n                ) : (\n                    <Chart\n                        options={options}\n                        series={series}\n                        type=\"line\"\n                        height={380}\n                        className=\"apex-charts\"\n                        dir=\"ltr\"\n                    />\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default MultipleYaxisChart;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// components\nimport Loader from '../../components/Loader';\n\n// types\nimport { ApexLinearChartData } from './data';\n\ninterface BubbleChartProps {\n    bubbleChartData: ApexLinearChartData;\n    showLoader?: boolean;\n}\n\nconst BubbleChart = ({ bubbleChartData, showLoader }: BubbleChartProps) => {\n    const options: ApexOptions = {\n        fill: {\n            opacity: 0.8,\n        },\n        xaxis: {\n            tickAmount: 12,\n            type: 'category',\n        },\n        yaxis: {\n            max: 70,\n        },\n        grid: {\n            borderColor: '#f1f3fa',\n        },\n        legend: {\n            offsetY: 7,\n        },\n    };\n\n    const series = [\n        {\n            name: 'Bubble 1',\n            data: bubbleChartData.data1 || [],\n        },\n        {\n            name: 'Bubble 2',\n            data: bubbleChartData.data2 || [],\n        },\n        {\n            name: 'Bubble 3',\n            data: bubbleChartData.data3 || [],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mt-0 mb-3\">Simple Bubble Chart</h4>\n                {showLoader ? (\n                    <div style={{ height: 380, position: 'relative' }}>\n                        <Loader />\n                    </div>\n                ) : (\n                    <Chart\n                        options={options}\n                        series={series}\n                        type=\"bubble\"\n                        height={380}\n                        className=\"apex-charts\"\n                        dir=\"ltr\"\n                    />\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default BubbleChart;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// components\nimport Loader from '../../components/Loader';\n\n// types\nimport { ApexLinearChartData } from './data';\n\ninterface ThreeDBubbleChartProps {\n    threeDBubbleChartData: ApexLinearChartData;\n    showLoader?: boolean;\n}\n\nconst ThreeDBubbleChart = ({ threeDBubbleChartData, showLoader }: ThreeDBubbleChartProps) => {\n    const options: ApexOptions = {\n        fill: {\n            type: 'gradient',\n        },\n        xaxis: {\n            tickAmount: 12,\n            type: 'datetime',\n            labels: {\n                rotate: 0,\n            },\n        },\n        yaxis: {\n            max: 70,\n        },\n        legend: {\n            offsetY: 7,\n        },\n        grid: {\n            borderColor: '#f1f3fa',\n        },\n    };\n\n    const series = [\n        {\n            name: 'Product 1',\n            data: threeDBubbleChartData.data1 || [],\n        },\n        {\n            name: 'Product 2',\n            data: threeDBubbleChartData.data2 || [],\n        },\n        {\n            name: 'Product 3',\n            data: threeDBubbleChartData.data3 || [],\n        },\n        {\n            name: 'Product 4',\n            data: threeDBubbleChartData.data4 || [],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mt-0 mb-3\">3D Bubble Chart</h4>\n                {showLoader ? (\n                    <div style={{ height: 380, position: 'relative' }}>\n                        <Loader />\n                    </div>\n                ) : (\n                    <Chart\n                        options={options}\n                        series={series}\n                        type=\"bubble\"\n                        height={380}\n                        className=\"apex-charts\"\n                        dir=\"ltr\"\n                    />\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default ThreeDBubbleChart;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// components\nimport Loader from '../../components/Loader';\n\n// types\nimport { ApexLinearChartData } from './data';\n\ninterface ScatterChartProps {\n    scatterChartData: ApexLinearChartData;\n    showLoader?: boolean;\n}\n\nconst ScatterChart = ({ scatterChartData, showLoader }: ScatterChartProps) => {\n    const options: ApexOptions = {\n        chart: {\n            zoom: {\n                enabled: false,\n            },\n        },\n        xaxis: {\n            tickAmount: 10,\n            labels: {\n                formatter: (val) => {\n                    return parseFloat(val).toFixed(1);\n                },\n            },\n        },\n        yaxis: {\n            tickAmount: 7,\n        },\n        grid: {\n            borderColor: '#f1f3fa',\n        },\n        legend: {\n            offsetY: 7,\n        },\n        responsive: [\n            {\n                breakpoint: 600,\n                options: {\n                    chart: {\n                        toolbar: {\n                            show: false,\n                        },\n                    },\n                    legend: {\n                        show: false,\n                    },\n                },\n            },\n        ],\n    };\n\n    const series = [\n        {\n            name: 'Sample A',\n            data: scatterChartData.data1 || [],\n        },\n        {\n            name: 'Sample B',\n            data: scatterChartData.data2 || [],\n        },\n        {\n            name: 'Sample C',\n            data: scatterChartData.data3 || [],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mt-0 mb-3\">Scatter (XY) Chart</h4>\n                {showLoader ? (\n                    <div style={{ height: 380, position: 'relative' }}>\n                        <Loader />\n                    </div>\n                ) : (\n                    <Chart\n                        options={options}\n                        series={series}\n                        type=\"scatter\"\n                        height={380}\n                        className=\"apex-charts\"\n                        dir=\"ltr\"\n                    />\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default ScatterChart;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// components\nimport Loader from '../../components/Loader';\n\n// types\nimport { ApexLinearChartData } from './data';\n\ninterface ScatterDateTimeChartProps {\n    scatterDateTimeChartData: ApexLinearChartData;\n    showLoader?: boolean;\n}\n\nconst ScatterDateTimeChart = ({ scatterDateTimeChartData, showLoader }: ScatterDateTimeChartProps) => {\n    const options: ApexOptions = {\n        chart: {\n            zoom: {\n                type: 'xy',\n            },\n        },\n        grid: {\n            borderColor: '#f1f3fa',\n            xaxis: {\n                lines: {\n                    show: true,\n                },\n            },\n            yaxis: {\n                lines: {\n                    show: true,\n                },\n            },\n        },\n        legend: {\n            offsetY: 7,\n        },\n        xaxis: {\n            type: 'datetime',\n        },\n        yaxis: {\n            max: 70,\n        },\n        tooltip: {\n            theme: 'dark',\n            x: {\n                show: false,\n            },\n        },\n        responsive: [\n            {\n                breakpoint: 600,\n                options: {\n                    chart: {\n                        toolbar: {\n                            show: false,\n                        },\n                    },\n                    legend: {\n                        show: false,\n                    },\n                },\n            },\n        ],\n    };\n\n    const series = [\n        {\n            name: 'Team 1',\n            data: scatterDateTimeChartData.data1 || [],\n        },\n        {\n            name: 'Team 2',\n            data: scatterDateTimeChartData.data2 || [],\n        },\n        {\n            name: 'Team 3',\n            data: scatterDateTimeChartData.data3 || [],\n        },\n        {\n            name: 'Team 4',\n            data: scatterDateTimeChartData.data4 || [],\n        },\n        {\n            name: 'Team 5',\n            data: scatterDateTimeChartData.data5 || [],\n        },\n    ];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mt-0 mb-3\">Scatter Chart - Datetime</h4>\n                {showLoader ? (\n                    <div style={{ height: 380, position: 'relative' }}>\n                        <Loader />\n                    </div>\n                ) : (\n                    <Chart\n                        options={options}\n                        series={series}\n                        type=\"scatter\"\n                        height={380}\n                        className=\"apex-charts\"\n                        dir=\"ltr\"\n                    />\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default ScatterDateTimeChart;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// components\nimport Loader from '../../components/Loader';\n\n// types\nimport { ApexLinearChartData } from './data';\n\ninterface PieChartProps {\n    pieChartData: ApexLinearChartData;\n    showLoader?: boolean;\n}\n\nconst PieChart = ({ pieChartData, showLoader }: PieChartProps) => {\n    const options: ApexOptions = {\n        labels: ['Series 1', 'Series 2', 'Series 3', 'Series 4', 'Series 5'],\n        legend: {\n            show: true,\n            position: 'bottom',\n            horizontalAlign: 'center',\n            floating: false,\n            fontSize: '14px',\n            offsetX: 0,\n            offsetY: 7,\n        },\n        responsive: [\n            {\n                breakpoint: 600,\n                options: {\n                    chart: {\n                        height: 240,\n                    },\n                    legend: {\n                        show: false,\n                    },\n                },\n            },\n        ],\n    };\n\n    const series = pieChartData.data || [];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mt-0 mb-3\">Simple Pie Chart</h4>\n\n                {showLoader ? (\n                    <div style={{ height: 320, position: 'relative' }}>\n                        <Loader />\n                    </div>\n                ) : (\n                    <Chart\n                        options={options}\n                        series={series}\n                        type=\"pie\"\n                        height={320}\n                        className=\"apex-charts\"\n                        dir=\"ltr\"\n                    />\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default PieChart;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// components\nimport Loader from '../../components/Loader';\n\n// types\nimport { ApexLinearChartData } from './data';\n\ninterface DonutChartProps {\n    gradientDonutChartData: ApexLinearChartData;\n    showLoader?: boolean;\n}\n\nconst DonutChart = ({ gradientDonutChartData, showLoader }: DonutChartProps) => {\n    const options: ApexOptions = {\n        legend: {\n            show: true,\n            position: 'bottom',\n            horizontalAlign: 'center',\n            floating: false,\n            fontSize: '14px',\n            offsetX: 0,\n            offsetY: 7,\n        },\n        labels: ['Series 1', 'Series 2', 'Series 3', 'Series 4', 'Series 5'],\n        responsive: [\n            {\n                breakpoint: 600,\n                options: {\n                    chart: {\n                        height: 240,\n                    },\n                    legend: {\n                        show: false,\n                    },\n                },\n            },\n        ],\n        fill: {\n            type: 'gradient',\n        },\n    };\n\n    const series = gradientDonutChartData.data || [];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mt-0 mb-3\">Gradient Donut Chart</h4>\n                {showLoader ? (\n                    <div style={{ height: 320, position: 'relative' }}>\n                        <Loader />\n                    </div>\n                ) : (\n                    <Chart\n                        options={options}\n                        series={series}\n                        type=\"donut\"\n                        height={320}\n                        className=\"apex-charts\"\n                        dir=\"ltr\"\n                    />\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default DonutChart;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// components\nimport Loader from '../../components/Loader';\n\n// types\nimport { ApexLinearChartData } from './data';\n\ninterface DonutPatternedChartProps {\n    patternedDonutChartData: ApexLinearChartData;\n    showLoader?: boolean;\n}\n\nconst DonutPatternedChart = ({ patternedDonutChartData, showLoader }: DonutPatternedChartProps) => {\n    const options: ApexOptions = {\n        chart: {\n            dropShadow: {\n                enabled: true,\n                color: '#111',\n                top: -1,\n                left: 3,\n                blur: 3,\n                opacity: 0.2,\n            },\n        },\n        stroke: {\n            show: true,\n            width: 2,\n        },\n        labels: ['Comedy', 'Action', 'SciFi', 'Drama', 'Horror'],\n        fill: {\n            type: 'pattern',\n            opacity: 1,\n            pattern: {\n                style: ['verticalLines', 'squares', 'horizontalLines', 'circles', 'slantedLines'],\n            },\n        },\n        legend: {\n            show: true,\n            position: 'bottom',\n            horizontalAlign: 'center',\n            floating: false,\n            fontSize: '14px',\n            offsetX: 0,\n            offsetY: 7,\n        },\n        responsive: [\n            {\n                breakpoint: 600,\n                options: {\n                    chart: {\n                        height: 240,\n                    },\n                    legend: {\n                        show: false,\n                    },\n                },\n            },\n        ],\n    };\n\n    const series = patternedDonutChartData.data || [];\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mt-0 mb-3\">Patterned Donut Chart</h4>\n                {showLoader ? (\n                    <div style={{ height: 320, position: 'relative' }}>\n                        <Loader />\n                    </div>\n                ) : (\n                    <Chart\n                        options={options}\n                        series={series}\n                        type=\"donut\"\n                        height={320}\n                        className=\"apex-charts\"\n                        dir=\"ltr\"\n                    />\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default DonutPatternedChart;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// components\nimport Loader from '../../components/Loader';\n\n// types\nimport { ApexLinearChartData } from './data';\n\ninterface RadialBarChartProps {\n    radarChartData: ApexLinearChartData;\n    showLoader?: boolean;\n}\n\nconst RadialBarChart = ({ radarChartData, showLoader }: RadialBarChartProps) => {\n    const options: ApexOptions = {\n        plotOptions: {\n            radialBar: {\n                hollow: {\n                    size: '70%',\n                },\n            },\n        },\n        colors: ['#50a5f1'],\n        labels: ['CRICKET'],\n    };\n\n    const series = radarChartData.data || [];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mt-0 mb-3\">Basic RadialBar Chart</h4>\n                {showLoader ? (\n                    <div style={{ height: 350, position: 'relative' }}>\n                        <Loader />\n                    </div>\n                ) : (\n                    <Chart\n                        options={options}\n                        series={series}\n                        type=\"radialBar\"\n                        height={350}\n                        className=\"apex-charts\"\n                        dir=\"ltr\"\n                    />\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default RadialBarChart;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// components\nimport Loader from '../../components/Loader';\n\n// types\nimport { ApexLinearChartData } from './data';\n\ninterface RadialBarMultipleChartProps {\n    multiRadarChartData: ApexLinearChartData;\n    showLoader?: boolean;\n}\n\nconst RadialBarMultipleChart = ({ multiRadarChartData, showLoader }: RadialBarMultipleChartProps) => {\n    const options: ApexOptions = {\n        plotOptions: {\n            radialBar: {\n                dataLabels: {\n                    name: {\n                        fontSize: '22px',\n                    },\n                    value: {\n                        fontSize: '16px',\n                    },\n                    total: {\n                        show: true,\n                        label: 'Total',\n                        formatter: (w: number) => {\n                            // By default this function returns the average of all series. The below is just an example to show the use of custom formatter function\n                            return String(249);\n                        },\n                    },\n                },\n            },\n        },\n        labels: ['Apples', 'Oranges', 'Bananas', 'Berries'],\n    };\n\n    const series = multiRadarChartData.data || [];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mt-0 mb-3\">Multiple RadialBars</h4>\n                {showLoader ? (\n                    <div style={{ height: 350, position: 'relative' }}>\n                        <Loader />\n                    </div>\n                ) : (\n                    <Chart\n                        options={options}\n                        series={series}\n                        type=\"radialBar\"\n                        height={350}\n                        className=\"apex-charts\"\n                        dir=\"ltr\"\n                    />\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default RadialBarMultipleChart;\n","import React from 'react';\nimport Chart from 'react-apexcharts';\nimport { Card } from 'react-bootstrap';\nimport { ApexOptions } from 'apexcharts';\n\n// components\nimport Loader from '../../components/Loader';\n\n// types\nimport { ApexLinearChartData } from './data';\n\ninterface CircularGuageChartProps {\n    gaugeChartData: ApexLinearChartData;\n    showLoader?: boolean;\n}\n\nconst CircularGuageChart = ({ gaugeChartData, showLoader }: CircularGuageChartProps) => {\n    const options: ApexOptions = {\n        plotOptions: {\n            radialBar: {\n                startAngle: -135,\n                endAngle: 135,\n                dataLabels: {\n                    name: {\n                        fontSize: '16px',\n                        color: undefined,\n                        offsetY: 120,\n                    },\n                    value: {\n                        offsetY: 76,\n                        fontSize: '22px',\n                        color: undefined,\n                        formatter: function (val) {\n                            return val + '%';\n                        },\n                    },\n                },\n            },\n        },\n        fill: {\n            gradient: {\n                shade: 'dark',\n                shadeIntensity: 0.15,\n                inverseColors: false,\n                opacityFrom: 1,\n                opacityTo: 1,\n                stops: [0, 50, 65, 91],\n            },\n        },\n        stroke: {\n            dashArray: 4,\n        },\n        colors: ['#f46a6a'],\n        labels: ['Median Ratio'],\n        responsive: [\n            {\n                breakpoint: 380,\n                options: {\n                    chart: {\n                        height: 280,\n                    },\n                },\n            },\n        ],\n    };\n\n    const series = gaugeChartData.data || [];\n\n    return (\n        <Card>\n            <Card.Body>\n                <h4 className=\"header-title mt-0 mb-3\">Multiple RadialBars</h4>\n                {showLoader ? (\n                    <div style={{ height: 350, position: 'relative' }}>\n                        <Loader />\n                    </div>\n                ) : (\n                    <Chart\n                        options={options}\n                        series={series}\n                        type=\"radialBar\"\n                        height={350}\n                        className=\"apex-charts\"\n                        dir=\"ltr\"\n                    />\n                )}\n            </Card.Body>\n        </Card>\n    );\n};\n\nexport default CircularGuageChart;\n","export interface Range {\n    min: number;\n    max: number;\n}\nexport interface Point {\n    x: number;\n    y: number;\n}\nexport interface ApexLinearChartData {\n    [key: string]: number[] | Point[] | [number, number][];\n}\nexport interface ApexNonLinearChartData {\n    [key: string]: number[];\n}\n\n/**\n * Utilit function to generate day wise series\n * @param {*} baseval\n * @param {*} count\n * @param {*} yrange\n */\nfunction generateDayWiseTimeSeries(baseval: number, count: number, yrange: Range): Point[] {\n    let i = 0;\n    let series: Point[] = [];\n    while (i < count) {\n        let x = baseval;\n        let y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n\n        series.push({ x, y });\n        baseval += 86400000;\n        i++;\n    }\n    return series;\n}\n\n/**\n * Generates the data\n * @param {*} baseval\n * @param {*} count\n * @param {*} yrange\n */\nfunction generateData(baseval: number, count: number, yrange: Range): any[] {\n    let i = 0;\n    let series = [];\n    while (i < count) {\n        let x = Math.floor(Math.random() * (750 - 1 + 1)) + 1;\n        let y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n        let z = Math.floor(Math.random() * (75 - 15 + 1)) + 15;\n\n        series.push([x, y, z]);\n        baseval += 86400000;\n        i++;\n    }\n    return series;\n}\n\n/**\n * Generates the alt data\n * @param {*} baseval1\n * @param {*} count\n * @param {*} yrange\n */\nfunction generateData1(baseval1: number, count: number, yrange: Range): any[] {\n    let i = 0;\n    let series = [];\n    while (i < count) {\n        //let x =Math.floor(Math.random() * (750 - 1 + 1)) + 1;;\n        let y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;\n        let z = Math.floor(Math.random() * (75 - 15 + 1)) + 15;\n\n        series.push([baseval1, y, z]);\n        baseval1 += 86400000;\n        i++;\n    }\n    return series;\n}\n\n// chart options\nconst lineChartWithData: ApexLinearChartData = {\n    data1: [28, 29, 33, 36, 32, 32, 33],\n    data2: [12, 11, 14, 18, 17, 13, 13],\n};\n\nconst gradientLineChartData: ApexLinearChartData = {\n    data: [4, 3, 10, 9, 29, 19, 22, 9, 12, 7, 19, 5, 13, 9, 17, 2, 7, 5],\n};\n\nconst stackedAreaChartData: ApexLinearChartData = {\n    data1: generateDayWiseTimeSeries(new Date('11 Feb 2019 GMT').getTime(), 20, {\n        min: 10,\n        max: 60,\n    }),\n\n    data2: generateDayWiseTimeSeries(new Date('11 Feb 2019 GMT').getTime(), 20, {\n        min: 10,\n        max: 20,\n    }),\n\n    data3: generateDayWiseTimeSeries(new Date('11 Feb 2019 GMT').getTime(), 20, {\n        min: 10,\n        max: 15,\n    }),\n};\n\nconst basicColumnChartData: ApexLinearChartData = {\n    data1: [44, 55, 57, 56, 61, 58, 63, 60, 66],\n    data2: [76, 85, 101, 98, 87, 105, 91, 114, 94],\n    data3: [35, 41, 36, 26, 45, 48, 52, 53, 41],\n};\n\nconst columnChartData: ApexLinearChartData = {\n    data: [2.3, 3.1, 4.0, 10.1, 4.0, 3.6, 3.2, 2.3, 1.4, 0.8, 0.5, 0.2],\n};\n\nconst mixedChart1Data: ApexLinearChartData = {\n    data1: [44, 55, 31, 47, 31, 43, 26, 41, 31, 47, 33],\n    data2: [55, 69, 45, 61, 43, 54, 37, 52, 44, 61, 43],\n};\n\nconst basicBarChartData: ApexLinearChartData = {\n    data: [400, 430, 448, 470, 540, 580, 690, 1100, 1200, 1380],\n};\n\nconst barWithNegativeData: ApexLinearChartData = {\n    data1: [0.4, 0.65, 0.76, 0.88, 1.5, 2.1, 2.9, 3.8, 3.9, 4.2, 4, 4.3, 4.1, 4.2, 4.5, 3.9, 3.5, 3],\n    data2: [\n        -0.8, -1.05, -1.06, -1.18, -1.4, -2.2, -2.85, -3.7, -3.96, -4.22, -4.3, -4.4, -4.1, -4, -4.1, -3.4, -3.1, -2.8,\n    ],\n};\n\nconst mixedChart2Data: ApexLinearChartData = {\n    data1: [23, 11, 22, 27, 13, 22, 37, 21, 44, 22, 30],\n    data2: [44, 55, 41, 67, 22, 43, 21, 41, 56, 27, 43],\n    data3: [30, 25, 36, 30, 45, 35, 64, 52, 59, 36, 39],\n};\n\nconst multiYaxisChartData: ApexLinearChartData = {\n    data1: [1.4, 2, 2.5, 1.5, 2.5, 2.8, 3.8, 4.6],\n    data2: [1.1, 3, 3.1, 4, 4.1, 4.9, 6.5, 8.5],\n    data3: [20, 29, 37, 36, 44, 45, 50, 58],\n};\n\nconst bubbleChartData: ApexLinearChartData = {\n    data1: generateData(new Date('11 Feb 2017 GMT').getTime(), 20, {\n        min: 10,\n        max: 60,\n    }),\n\n    data2: generateData(new Date('11 Feb 2017 GMT').getTime(), 20, {\n        min: 10,\n        max: 60,\n    }),\n    data3: generateData(new Date('11 Feb 2017 GMT').getTime(), 20, {\n        min: 10,\n        max: 60,\n    }),\n};\n\nconst threeDBubbleChartData: ApexLinearChartData = {\n    data1: generateData1(new Date('11 Feb 2017 GMT').getTime(), 20, {\n        min: 10,\n        max: 60,\n    }),\n\n    data2: generateData1(new Date('11 Feb 2017 GMT').getTime(), 20, {\n        min: 10,\n        max: 60,\n    }),\n\n    data3: generateData1(new Date('11 Feb 2017 GMT').getTime(), 20, {\n        min: 10,\n        max: 60,\n    }),\n\n    data4: generateData1(new Date('11 Feb 2017 GMT').getTime(), 20, {\n        min: 10,\n        max: 60,\n    }),\n};\n\nconst scatterChartData: ApexLinearChartData = {\n    data1: [\n        [16.4, 5.4],\n        [21.7, 2],\n        [25.4, 3],\n        [19, 2],\n        [10.9, 1],\n        [13.6, 3.2],\n        [10.9, 7.4],\n        [10.9, 0],\n        [10.9, 8.2],\n        [16.4, 0],\n        [16.4, 1.8],\n        [13.6, 0.3],\n        [13.6, 0],\n        [29.9, 0],\n        [27.1, 2.3],\n        [16.4, 0],\n        [13.6, 3.7],\n        [10.9, 5.2],\n        [16.4, 6.5],\n        [10.9, 0],\n        [24.5, 7.1],\n        [10.9, 0],\n        [8.1, 4.7],\n        [19, 0],\n        [21.7, 1.8],\n        [27.1, 0],\n        [24.5, 0],\n        [27.1, 0],\n        [29.9, 1.5],\n        [27.1, 0.8],\n        [22.1, 2],\n    ],\n    data2: [\n        [6.4, 13.4],\n        [1.7, 11],\n        [5.4, 8],\n        [9, 17],\n        [1.9, 4],\n        [3.6, 12.2],\n        [1.9, 14.4],\n        [1.9, 9],\n        [1.9, 13.2],\n        [1.4, 7],\n        [6.4, 8.8],\n        [3.6, 4.3],\n        [1.6, 10],\n        [9.9, 2],\n        [7.1, 15],\n        [1.4, 0],\n        [3.6, 13.7],\n        [1.9, 15.2],\n        [6.4, 16.5],\n        [0.9, 10],\n        [4.5, 17.1],\n        [10.9, 10],\n        [0.1, 14.7],\n        [9, 10],\n        [12.7, 11.8],\n        [2.1, 10],\n        [2.5, 10],\n        [27.1, 10],\n        [2.9, 11.5],\n        [7.1, 10.8],\n        [2.1, 12],\n    ],\n    data3: [\n        [21.7, 3],\n        [23.6, 3.5],\n        [24.6, 3],\n        [29.9, 3],\n        [21.7, 20],\n        [23, 2],\n        [10.9, 3],\n        [28, 4],\n        [27.1, 0.3],\n        [16.4, 4],\n        [13.6, 0],\n        [19, 5],\n        [22.4, 3],\n        [24.5, 3],\n        [32.6, 3],\n        [27.1, 4],\n        [29.6, 6],\n        [31.6, 8],\n        [21.6, 5],\n        [20.9, 4],\n        [22.4, 0],\n        [32.6, 10.3],\n        [29.7, 20.8],\n        [24.5, 0.8],\n        [21.4, 0],\n        [21.7, 6.9],\n        [28.6, 7.7],\n        [15.4, 0],\n        [18.1, 0],\n        [33.4, 0],\n        [16.4, 0],\n    ],\n};\n\nconst scatterDateTimeChartData: ApexLinearChartData = {\n    data1: generateDayWiseTimeSeries(new Date('11 Feb 2017 GMT').getTime(), 20, {\n        min: 10,\n        max: 60,\n    }),\n\n    data2: generateDayWiseTimeSeries(new Date('11 Feb 2017 GMT').getTime(), 20, {\n        min: 10,\n        max: 60,\n    }),\n    data3: generateDayWiseTimeSeries(new Date('11 Feb 2017 GMT').getTime(), 30, {\n        min: 10,\n        max: 60,\n    }),\n    data4: generateDayWiseTimeSeries(new Date('11 Feb 2017 GMT').getTime(), 10, {\n        min: 10,\n        max: 60,\n    }),\n    data5: generateDayWiseTimeSeries(new Date('11 Feb 2017 GMT').getTime(), 30, {\n        min: 10,\n        max: 60,\n    }),\n};\n\nconst pieChartData: ApexNonLinearChartData = {\n    data: [44, 55, 41, 17, 15],\n};\n\nconst gradientDonutChartData: ApexNonLinearChartData = {\n    data: [44, 55, 41, 17, 15],\n};\n\nconst patternedDonutChartData: ApexNonLinearChartData = {\n    data: [44, 55, 41, 17, 15],\n};\n\nconst radarChartData: ApexNonLinearChartData = {\n    data: [70],\n};\n\nconst multiRadarChartData: ApexNonLinearChartData = {\n    data: [44, 55, 67, 83],\n};\n\nconst gaugeChartData: ApexNonLinearChartData = {\n    data: [67],\n};\n\nexport {\n    lineChartWithData,\n    gradientLineChartData,\n    stackedAreaChartData,\n    barWithNegativeData,\n    basicBarChartData,\n    bubbleChartData,\n    basicColumnChartData,\n    columnChartData,\n    mixedChart1Data,\n    mixedChart2Data,\n    multiYaxisChartData,\n    threeDBubbleChartData,\n    scatterChartData,\n    scatterDateTimeChartData,\n    pieChartData,\n    patternedDonutChartData,\n    gaugeChartData,\n    gradientDonutChartData,\n    radarChartData,\n    multiRadarChartData,\n};\n","import React, { useEffect, useState } from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\n// components\nimport PageTitle from '../../components/PageTitle';\n\nimport LineChart from './LineChart';\nimport LineGradientChart from './LineGradientChart';\nimport StackedAreaChart from './StackedAreaChart';\nimport ColumnChart from './ColumnChart';\nimport ColumnDataLabelsChart from './ColumnDataLabelsChart';\nimport MixedChart from './MixedChart';\nimport BarChart from './BarChart';\nimport BarChartWithNegativeValues from './BarChartWithNegativeValues';\nimport LineColumnAreaChart from './LineColumnAreaChart';\nimport MultipleYaxisChart from './MultipleYaxisChart';\nimport BubbleChart from './BubbleChart';\nimport ThreeDBubbleChart from './ThreeDBubbleChart';\nimport ScatterChart from './ScatterChart';\nimport ScatterDateTimeChart from './ScatterDateTimeChart';\nimport PieChart from './PieChart';\nimport DonutChart from './DonutChart';\nimport DonutPatternedChart from './DonutPatternedChart';\nimport RadialBarChart from './RadialBarChart';\nimport RadialBarMultipleChart from './RadialBarMultipleChart';\nimport CircularGuageChart from './CircularGuageChart';\n\n// dummy data\nimport {\n    lineChartWithData,\n    gradientLineChartData,\n    stackedAreaChartData,\n    basicColumnChartData,\n    columnChartData,\n    mixedChart1Data,\n    basicBarChartData,\n    barWithNegativeData,\n    mixedChart2Data,\n    multiYaxisChartData,\n    bubbleChartData,\n    threeDBubbleChartData,\n    scatterChartData,\n    scatterDateTimeChartData,\n    pieChartData,\n    gradientDonutChartData,\n    patternedDonutChartData,\n    radarChartData,\n    multiRadarChartData,\n    gaugeChartData,\n} from './data';\n\nconst ApexChart = () => {\n    const [isChatInitilized, setIsChatInitilized] = useState<boolean>(false);\n\n    useEffect(() => {\n        // set deafult config of apex chart\n        if ((window as any).Apex) {\n            (window as any).Apex = {\n                chart: {\n                    parentHeightOffset: 0,\n                    toolbar: {\n                        show: false,\n                    },\n                },\n                grid: {\n                    padding: {\n                        left: 20,\n                        right: 0,\n                    },\n                },\n                colors: ['#5369F8', '#43D39E', '#F77E53', '#1CE1AC', '#25C2E3', '#FFBE0B'],\n                tooltip: {\n                    theme: 'dark',\n                    x: { show: false },\n                },\n                dataLabels: {\n                    enabled: false,\n                },\n                xaxis: {\n                    axisBorder: {\n                        color: '#D6DDEA',\n                    },\n                    axisTicks: {\n                        color: '#D6DDEA',\n                    },\n                },\n                yaxis: {\n                    labels: {\n                        offsetX: -5,\n                    },\n                },\n            };\n            setIsChatInitilized(true);\n        }\n        return () => {\n            if ((window as any).Apex) {\n                (window as any).Apex = {};\n            }\n        };\n    }, []);\n\n    return (\n        <React.Fragment>\n            <PageTitle\n                breadCrumbItems={[\n                    { label: 'Apps', path: '/components/charts' },\n                    { label: 'Charts', path: '/components/charts', active: true },\n                ]}\n                title={'Charts'}\n            />\n\n            <Row>\n                <Col xl={6}>\n                    <LineChart lineChartWithData={lineChartWithData} showLoader={!isChatInitilized} />\n                </Col>\n                <Col xl={6}>\n                    <LineGradientChart gradientLineChartData={gradientLineChartData} showLoader={!isChatInitilized} />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <StackedAreaChart stackedAreaChartData={stackedAreaChartData} showLoader={!isChatInitilized} />\n                </Col>\n                <Col xl={6}>\n                    <ColumnChart basicColumnChartData={basicColumnChartData} showLoader={!isChatInitilized} />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <ColumnDataLabelsChart columnChartData={columnChartData} showLoader={!isChatInitilized} />\n                </Col>\n                <Col xl={6}>\n                    <MixedChart mixedChart1Data={mixedChart1Data} showLoader={!isChatInitilized} />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <BarChart basicBarChartData={basicBarChartData} showLoader={!isChatInitilized} />\n                </Col>\n                <Col xl={6}>\n                    <BarChartWithNegativeValues\n                        barWithNegativeData={barWithNegativeData}\n                        showLoader={!isChatInitilized}\n                    />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <LineColumnAreaChart mixedChart2Data={mixedChart2Data} showLoader={!isChatInitilized} />\n                </Col>\n                <Col xl={6}>\n                    <MultipleYaxisChart multiYaxisChartData={multiYaxisChartData} showLoader={!isChatInitilized} />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <BubbleChart bubbleChartData={bubbleChartData} showLoader={!isChatInitilized} />\n                </Col>\n                <Col xl={6}>\n                    <ThreeDBubbleChart threeDBubbleChartData={threeDBubbleChartData} showLoader={!isChatInitilized} />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xl={6}>\n                    <ScatterChart scatterChartData={scatterChartData} showLoader={!isChatInitilized} />\n                </Col>\n                <Col xl={6}>\n                    <ScatterDateTimeChart\n                        scatterDateTimeChartData={scatterDateTimeChartData}\n                        showLoader={!isChatInitilized}\n                    />\n                </Col>\n            </Row>\n\n            <Row>\n                <Col xxl={4} md={6}>\n                    <PieChart pieChartData={pieChartData} showLoader={!isChatInitilized} />\n                </Col>\n                <Col xxl={4} md={6}>\n                    <DonutChart gradientDonutChartData={gradientDonutChartData} showLoader={!isChatInitilized} />\n                </Col>\n                <Col xxl={4} md={6}>\n                    <DonutPatternedChart\n                        patternedDonutChartData={patternedDonutChartData}\n                        showLoader={!isChatInitilized}\n                    />\n                </Col>\n\n                <Col xxl={4} md={6}>\n                    <RadialBarChart radarChartData={radarChartData} showLoader={!isChatInitilized} />\n                </Col>\n                <Col xxl={4} md={6}>\n                    <RadialBarMultipleChart multiRadarChartData={multiRadarChartData} showLoader={!isChatInitilized} />\n                </Col>\n                <Col xxl={4} md={6}>\n                    <CircularGuageChart gaugeChartData={gaugeChartData} showLoader={!isChatInitilized} />\n                </Col>\n            </Row>\n        </React.Fragment>\n    );\n};\n\nexport default ApexChart;\n"],"sourceRoot":""}